{"swagger": "2.0", "basePath": "/", "paths": {"/activity/search": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_activity_routes", "parameters": [{"name": "activityType", "in": "query", "type": "string", "description": "Activity type e.g. Emails, Email Reply to filter by", "enum": ["EMAIL", "EMAIL_REPLY", "PTP_UPDATE", "MANUAL_EMAIL", "WAB_MESSAGE", "CALL_LOG"]}, {"name": "activityOriginType", "in": "query", "type": "string", "description": "Activity origin type e.g. Workflow, Manual to filter by", "enum": ["WORKFLOW", "BILLING", "OTHER"]}, {"name": "activityOriginReferenceId", "in": "query", "type": "string", "description": "Id of the origin e.g. WorkflowId"}, {"name": "activityBefore", "in": "query", "type": "string", "description": "Activity date should be before or on this date"}, {"name": "activityAfter", "in": "query", "type": "string", "description": "Activity date should be after or on this date"}, {"name": "customerId", "in": "query", "type": "array", "description": "Customer Ids for which activities to be filtered", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "internalInvoiceId", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "subject", "in": "query", "type": "string", "description": "Activities of type Email should have subject containing this"}, {"name": "emails", "in": "query", "type": "array", "description": "Activities of type Email should have these emails in recipients", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachments", "in": "query", "type": "integer", "description": "Activities of type Email should contain attachments or not is filtered by this"}, {"name": "deliveredStatus", "in": "query", "type": "array", "description": "Filter Activities by delivery status of email", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["NONE", "PARTIAL", "ALL"]}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}], "tags": ["activity"]}}, "/activity/{activity_id}": {"parameters": [{"name": "activity_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_activity_by_id", "tags": ["activity"]}}, "/adjustment": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_adjustment_routes", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateAdjustmentModel"}}], "tags": ["adjustment"]}}, "/adjustment/credit/{bat_id}": {"parameters": [{"name": "bat_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchCreditAdjustmentApiResponseModel"}}}, "summary": "API resource to fetch adjustments for a given credit (BAT ID)", "description": "Endpoint:\n    GET /credit/<bat_id>\n\nQuery Parameters:\n    - placeholderId (str, optional): Filter adjustments by a specific placeholder ID.\n    - adjustmentStartDate (str, optional): Start date for filtering adjustments\n      (format: YYYY-MM-DD).\n    - adjustmentEndDate (str, optional): End date for filtering adjustments\n      (format: YYYY-MM-DD).\n\nPath Parameters:\n    - bat_id (str): The unique identifier of the credit for which adjustments are\n      being fetched.\n\nBehavior:\n    - Parses query parameters using the provided `RequestParser`.\n    - Authenticates the user and associates the request with a company using the\n      `authenticate_user_with_company` decorator.\n    - Fetches adjustments from the database using `AdjustmentService.fetch_adjustments_from_db`.\n    - Formats the adjustments into a response-friendly format using\n      `AdjustmentService.format_adjustments_for_credits_response`.\n\nReturns:\n    - 200: On success, returns a JSON response containing the fetched adjustments.\n    - JSON structure:\n        {\n            \"error\": None,\n            \"message\": \"Fetched adjustment(s) successfully\",\n            \"data\": [<list of adjustments>]\n        }", "operationId": "get_adjustment_credit_by_id", "parameters": [{"name": "placeholderId", "in": "query", "type": "string"}, {"name": "adjustmentStartDate", "in": "query", "type": "string", "description": "Start date of the period for which posted adjustments are fetched"}, {"name": "adjustmentEndDate", "in": "query", "type": "string", "description": "Start date of the period for which posted adjustments are fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["adjustment"]}}, "/adjustment/invoice/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchInvoiceAdjustmentApiResponseModel"}}}, "summary": "API resource to fetch adjustments for a given invoice", "description": "Endpoint:\n    GET /invoice/<invoice_id>\n\nQuery Parameters:\n    - adjustmentStartDate (str, optional): Start date for filtering adjustments\n      (format: YYYY-MM-DD).\n    - adjustmentEndDate (str, optional): End date for filtering adjustments\n      (format: YYYY-MM-DD).\n    - placeholderId (str, optional): Filter adjustments by a specific placeholder ID.\n\nPath Parameters:\n    - invoice_id (str): The unique identifier of the invoice for which adjustments\n      are being fetched.\n\nBehavior:\n    - Parses query parameters using the provided `RequestParser`.\n    - Authenticates the user and associates the request with a company using the\n      `authenticate_user_with_company` decorator.\n    - Fetches adjustments from the database using `AdjustmentService.fetch_adjustments_from_db`.\n    - Formats the adjustments into a response-friendly format using\n      `AdjustmentService.format_adjustments_for_invoices_response`.\n\nReturns:\n    - 200: On success, returns a JSON response containing the fetched adjustments.\n    - JSON structure:\n        {\n            \"error\": None,\n            \"message\": \"Fetched adjustment(s) successfully\",\n            \"data\": [<list of adjustments>]\n        }", "operationId": "get_adjustment_invoice_by_id", "parameters": [{"name": "adjustmentStartDate", "in": "query", "type": "string", "description": "Start date of the period for which posted adjustments are fetched"}, {"name": "adjustmentEndDate", "in": "query", "type": "string", "description": "Start date of the period for which posted adjustments are fetched"}, {"name": "placeholderId", "in": "query", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["adjustment"]}}, "/adjustment/{adjustment_id}": {"parameters": [{"name": "adjustment_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success"}}, "operationId": "delete_adjustment_delete", "tags": ["adjustment"]}}, "/ageing/buckets": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AgeingBucketFetchApiResponseModel"}}}, "operationId": "get_ageing_buckets_route", "parameters": [{"name": "bucketId", "in": "query", "type": "string", "description": "Bucket Id to fetch"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ageing"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AgeingBucketGetApiResponseModel"}}}, "operationId": "post_ageing_buckets_route", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateAgeingBucketQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ageing"]}}, "/ageing/configuration": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AgeingConfigurationGetApiResponseModel"}}}, "operationId": "get_ageing_configuration_route", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ageing"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AgeingConfigurationGetApiResponseModel"}}}, "operationId": "post_ageing_configuration_route", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateAgeingConfigurationQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ageing"]}}, "/ageing/summary": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_ageing_analysis_summary", "parameters": [{"name": "fromDate", "in": "query", "type": "string", "description": "Invoices created from this data will be analysed. If you pass this, you must pass toDate as well."}, {"name": "toDate", "in": "query", "type": "string", "description": "Invoices created up-to this data will be analysed. If you pass this, you must pass fromDate as well."}, {"name": "customerId", "in": "query", "type": "array", "description": "Customer ids for which the analysis needs to be done. If omitted, all customer ids are analysed.", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "action", "in": "query", "type": "string", "description": "Optional parameter. Pass \"export\" to have the summary report emailed", "enum": ["EXPORT"]}, {"name": "dataSet", "in": "query", "type": "array", "description": "Optional parameter. Supports values NET_OUTSTANDING, CUSTOMER, INVOICE to allow finer control over which data sets are fetched. Supports multiple values separated by commas", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["NET_OUTSTANDING", "CUSTOMER", "INVOICE"]}], "tags": ["ageing"]}}, "/analytics/data": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AnalyticsApiResponse"}}}, "operationId": "post_analytics_data", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AnalyticsApiDataRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["analytics"]}}, "/analytics/export": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_analytics_export_raw_data", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AnalyticsApiRawDataRequest"}}], "tags": ["analytics"]}}, "/analytics/rawData": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_analytics_raw_data", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AnalyticsApiRawDataRequest"}}], "tags": ["analytics"]}}, "/attachments/search": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttachmentSearchResponseModel"}}}, "operationId": "get_attachments_search", "parameters": [{"name": "referenceType", "in": "query", "type": "string", "description": "attachment reference to filter by", "enum": ["INVOICE", "CUSTOMER", "CREDITNOTE", "COMMENT", "EMAIL_REPLY", "BILLING_REPORT", "TICKET", "USAGE_ESTIMATE", "ADHOC_WAB"]}, {"name": "referenceId", "in": "query", "type": "string", "description": "attachment reference ID e.g. customer id, invoice id to filter by"}, {"name": "fileName", "in": "query", "type": "string", "description": "file name like"}, {"name": "createdBy", "in": "query", "type": "string", "description": "ID of the user who uploaded the attachment"}, {"name": "fileType", "in": "query", "type": "array", "description": "file type should be in one of these types", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "purpose", "in": "query", "type": "array", "description": "purpose of the attachment should be one of these values", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "uploadedAfter", "in": "query", "type": "string", "description": "uploaded after should be this date"}, {"name": "uploadedBefore", "in": "query", "type": "string", "description": "uploaded before should be this date"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["attachments"]}}, "/attachments/{attachment_id}": {"parameters": [{"name": "attachment_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success"}}, "operationId": "delete_attachments_delete", "tags": ["attachments"]}}, "/attachments/{attachment_id}/file": {"parameters": [{"name": "attachment_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_attachment_get_file", "tags": ["attachments"]}}, "/bankAccount": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountListApiResponseModel"}}}, "operationId": "get_bank_account_list", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Company for which bank accounts are fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccount"]}}, "/bankAccountTransaction": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountTransactionListApiResponseModel"}}}, "operationId": "get_bank_account_transaction_list", "parameters": [{"name": "bankAccountId", "in": "query", "type": "string", "required": true, "description": "Bank Account for which transactions are fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccountTransaction"]}}, "/bankAccountTransaction/category": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateTransactionCategoryApiResponseModel"}}}, "operationId": "post_bank_account_transaction_category", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateBatCategoryApiModelList"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccountTransaction"]}}, "/bankAccountTransaction/customerNameSuggestion/suggest": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerSuggestionAPIResponseModel"}}}, "operationId": "post_bank_account_transaction_customer_suggestion", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CustomerSuggestionAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccountTransaction"]}}, "/bankAccountTransaction/customerNameSuggestion/update/{bank_account_transaction_id}": {"parameters": [{"name": "bank_account_transaction_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountTransactionResponseModel"}}}, "operationId": "post_bank_account_transaction_customer_name_upsert", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CustomerNameSuggestionUpdateAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccountTransaction"]}}, "/bankAccountTransaction/dateRange": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/bankAccountTransactionsDateRangeApiResponseModel"}}}, "operationId": "get_bank_account_transaction_date_range", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccountTransaction"]}}, "/bankAccountTransaction/filter": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountTransactionListApiResponseModel"}}}, "operationId": "get_filtered_bank_account_transactions", "parameters": [{"name": "bankAccountIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "categories", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "periodStartDate", "in": "query", "type": "string", "description": "Value date for the bank account transaction (BAT). Please input in YYYY-MM-DD format. Will fetch BATs with value date on or after this date."}, {"name": "periodEndDate", "in": "query", "type": "string", "description": "Value date for the bank account transaction (BAT). Please input in YYYY-MM-DD format. Will fetch BATs with value date on or before this date."}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}, {"name": "narration", "in": "query", "type": "string"}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Date on which this bank account transaction was created in Valyx. Please input in YYYY-MM-DD format. Will fetch BATs created in Valyx on or after this date."}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Date on which this bank account transaction was created in Valyx. Please input in YYYY-MM-DD format. Will fetch BATs created in Valyx on or before this date."}, {"name": "companyId", "in": "query", "type": "string", "description": "Company for which transactions are fetched. This is passed if data for all bank accounts is required."}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["bankAccountTransaction"]}}, "/billing/billingReport/email/preview/{billing_report_id}": {"parameters": [{"name": "billing_report_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/HtmlPreviewResponseModel"}}}, "operationId": "get_billing_report_email_preview", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/billingReport/email/send": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportResponseModel"}}}, "operationId": "post_billing_report_email_send", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BillingReportSendEmailRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/billingReport/fetch/{billing_report_id}": {"parameters": [{"name": "billing_report_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportResponseModel"}}}, "operationId": "get_fetch_billing_report", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/billingReport/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_billing_report_filter", "parameters": [{"name": "billId", "in": "query", "type": "string", "description": "Bill ID associated with the billing report"}, {"name": "contractNumber", "in": "query", "type": "string", "description": "Contract number associated with the billing report"}, {"name": "customerId", "in": "query", "type": "string"}, {"name": "billAmountStart", "in": "query", "type": "number", "description": "Min limit filter for the total bill amount"}, {"name": "billAmountEnd", "in": "query", "type": "number", "description": "Max limit filter for the total bill amount"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/billingReport/generate/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReport"}}}, "operationId": "post_generate_billing_report", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BillingReportGenerationRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/billingReport/unbilled/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReport"}}}, "operationId": "get_get_unbilled_amount", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/billingReport/verdictUpdate": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BulkVerdictUpdateResponseModel"}}}, "operationId": "post_billing_report_verdict_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkVerdictUpdate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_create_contract", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateContractAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/cancel/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_cancel_contract", "tags": ["billing"]}}, "/billing/contract/feeComponent": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_add_contract_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/FeeComponentToContractRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/feeComponent/delete": {"delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "delete_delete_contract_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/FeeComponentToContractRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/feeComponent/includeUsage": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_add_contract_fee_component_include_usage", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/FeeComponentIncludeUsageRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/feeComponent/ratecard": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_contract_rate_card_relations", "parameters": [{"name": "contractId", "in": "query", "type": "string", "required": true}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/contract/feeComponent/ratecard/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_contract_rate_card_relations", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ContractRateCardBulkUpsertionRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/feeComponent/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_contract_fee_components", "tags": ["billing"]}}, "/billing/contract/fetch/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "get_fetch_contract", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_filtered_contracts", "parameters": [{"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractDurationValue", "in": "query", "type": "integer", "description": "Value of the contract duration (if contract duration is 3 years, value will be 3)"}, {"name": "contractDurationUnit", "in": "query", "type": "string", "description": "Unit of the contract duration (if contract duration is 3 years, unit will be YEAR)"}, {"name": "billingFrequencyValue", "in": "query", "type": "integer", "description": "Value of the billing frequency (if billing frequency is 2 months, value will be 2)"}, {"name": "billingFrequencyUnit", "in": "query", "type": "string", "description": "Unit of the billing frequency (if billing frequency is 2 months, unit will be MONTH)"}, {"name": "nextBillingDateStart", "in": "query", "type": "string", "description": "Start date of the next billing date filter"}, {"name": "nextBillingDateEnd", "in": "query", "type": "string", "description": "End date of the next billing date filter"}, {"name": "status", "in": "query", "type": "string", "enum": ["ACTIVE", "DRAFT", "CANCELLED", "EXPIRED"]}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/contract/update/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateContractAPIRequestModelResponseModel"}}}, "operationId": "post_update_contract", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateContractAPIRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/contract/usageEstimate": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GenericTable"}}}, "operationId": "get_fetch_usage_usage_cycle_estimates", "parameters": [{"name": "contractId", "in": "query", "type": "string", "required": true, "description": "ID of the contract"}, {"name": "feeComponentId", "in": "query", "type": "string", "description": "ID of the fee component"}, {"name": "usageCycleStartDate", "in": "query", "type": "string", "required": true, "description": "start date for the usage cycle"}, {"name": "usageCycleEndDate", "in": "query", "type": "string", "required": true, "description": "end date for the usage cycle"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/feeComponent": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "post_create_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/feeComponent/delete/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "post_delete_fee_component", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/feeComponent/driver": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponent"}}}, "operationId": "post_bulk_upsert_fee_component_driver_relation", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpsertBulkFeeComponentUsageDriverRelationshipQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/feeComponent/driver/fetch/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeeComponentUsageDriverRelationship"}}}}, "operationId": "get_fetch_fee_component_driver_relations", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/feeComponent/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_filter_fee_component", "parameters": [{"name": "updatedDateFrom", "in": "query", "type": "array", "description": "Starting date for Fee Component Update", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "updatedDateTo", "in": "query", "type": "array", "description": "Ending date for Fee Component Update", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sku", "in": "query", "type": "array", "description": "Fee Component SKU", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "name", "in": "query", "type": "array", "description": "Name of the fee component", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hsnCode", "in": "query", "type": "array", "description": "HSN or SAC Code", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "lastModifiedBy", "in": "query", "type": "array", "description": "Last modified by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/feeComponent/update/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "post_update_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/feeComponent/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "get_fetch_fee_component", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardResponseModel"}}}, "operationId": "post_create_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateRateCardRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard/delete/{ratecard_id}": {"parameters": [{"name": "ratecard_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MarkRateCardDefaultRequestModel"}}}, "operationId": "delete_delete_rate_card", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard/feeComponent/fetch/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchRateCardsResponseModel"}}}, "operationId": "get_fetch_all_rate_card", "parameters": [{"name": "contractId", "in": "query", "type": "string", "description": "If passed will return all the ratecards available for a contract"}, {"name": "showEmptyCombinations", "in": "query", "type": "string", "description": "If false will return only the combinations of tags that have at least one ratecard", "default": "false"}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard/markDefault": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardResponseModel"}}}, "operationId": "post_mark_default_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MarkRateCardDefaultRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard/test": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TestRateCardResponseModel"}}}, "operationId": "post_test_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TestRateCardRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard/update/{ratecard_id}": {"parameters": [{"name": "ratecard_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardResponseModel"}}}, "operationId": "post_update_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateRateCardRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/ratecard/{rate_card_id}": {"parameters": [{"name": "rate_card_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCard"}}}, "operationId": "get_fetch_rate_card", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usage": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "post_add_usage", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateUsageAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usage/delete/{event_id}": {"parameters": [{"name": "event_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "delete_delete_usage", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usage/fetch/{event_id}": {"parameters": [{"name": "event_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "get_fetch_usage", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usage/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_usage_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/usage/grouped/feeComponent/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_grouped_usage_fc_wise_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/usage/grouped/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_grouped_usage_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["billing"]}}, "/billing/usage/update/{usage_id}": {"parameters": [{"name": "usage_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "post_update_usage", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateUsageRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usageDriver": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageDriverResponseModel"}}}, "operationId": "post_add_usage_driver", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateUsageDriverQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usageDriver/delete/{usage_driver_id}": {"parameters": [{"name": "usage_driver_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageDriverResponseModel"}}}, "operationId": "delete_delete_usage_driver", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usageDriver/filter": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PaginatedResponse"}}}, "operationId": "get_filter_usage_driver", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Name of the usage driver"}, {"name": "description", "in": "query", "type": "string", "description": "Description of the usage driver"}, {"name": "unit", "in": "query", "type": "string", "description": "Unit of the usage driver"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billing/usageDriver/update/{usage_driver_id}": {"parameters": [{"name": "usage_driver_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageDriverResponseModel"}}}, "operationId": "post_update_usage_driver", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateUsageDriverQueryModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billing"]}}, "/billingReport/billingPeriod/suggestions/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/BillingPeriod"}}}}, "operationId": "get_billing_period_suggestions", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/email/preview/{billing_report_id}": {"parameters": [{"name": "billing_report_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/HtmlPreviewResponseModel"}}}, "operationId": "get_billing_report_email_preview", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/email/send": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportResponseModel"}}}, "operationId": "post_billing_report_email_send", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BillingReportSendEmailRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/fetch/{billing_report_id}": {"parameters": [{"name": "billing_report_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportResponseModel"}}}, "operationId": "get_fetch_billing_report", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_billing_report_filter", "parameters": [{"name": "billId", "in": "query", "type": "string", "description": "Bill ID associated with the billing report"}, {"name": "contractNumber", "in": "query", "type": "string", "description": "Contract number associated with the billing report"}, {"name": "contractId", "in": "query", "type": "string", "description": "Contract ID associated with the billing report"}, {"name": "customerId", "in": "query", "type": "string"}, {"name": "billAmountStart", "in": "query", "type": "number", "description": "Min limit filter for the total bill amount"}, {"name": "billAmountEnd", "in": "query", "type": "number", "description": "Max limit filter for the total bill amount"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}], "tags": ["billingReport"]}}, "/billingReport/generate": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_generate_billing_report", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BillingReportGenerationRequest"}}], "tags": ["billingReport"]}}, "/billingReport/invoice/preview/data": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceResponseModel"}}}, "operationId": "get_fetch_invoice_preview_data", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/invoice/preview/html": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_invoice_preview_html", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}], "tags": ["billingReport"]}}, "/billingReport/invoice/preview/pdf": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_invoice_preview_pdf", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}], "tags": ["billingReport"]}}, "/billingReport/unbilled/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReport"}}}, "operationId": "get_get_unbilled_amount", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/usageCycleWise": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportUsageCycleFeeComponentSummaryModelListResponseModel"}}}, "operationId": "get_fetch_usage_cycle_wise_summary", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}, {"name": "feeComponentId", "in": "query", "type": "string", "required": true, "description": "ID of the Fee Component"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/billingReport/verdictUpdate": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BulkVerdictUpdateResponseModel"}}}, "operationId": "post_billing_report_verdict_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkVerdictUpdate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["billingReport"]}}, "/budget/category": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateBudgetApiResponseModel"}}}, "operationId": "post_category_budget", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateBudgetApiModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["budget"]}}, "/budget/plan": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ResponseModel"}}}, "operationId": "get_plan_budget", "parameters": [{"description": "Plan ID query parameter. Plan for which data is to be fetched", "name": "planId", "type": "string", "in": "query"}, {"description": "Frequency query parameter. Frequency at which data is to be fetched. This can be month, quarter or year", "name": "frequency", "type": "string", "in": "query"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["budget"]}}, "/buyer/billingPeriod/suggestions/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/BillingPeriod"}}}}, "operationId": "get_billing_period_suggestions", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/billingReport/fetch/{billing_report_id}": {"parameters": [{"name": "billing_report_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportResponseModel"}}}, "operationId": "get_fetch_billing_report", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/billingReport/invoice/preview/html": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_invoice_preview_html", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}], "tags": ["buyer"]}}, "/buyer/billingReport/invoice/preview/pdf": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_invoice_preview_pdf", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}], "tags": ["buyer"]}}, "/buyer/billingReport/usageCycleWise": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingReportUsageCycleFeeComponentSummaryModelListResponseModel"}}}, "operationId": "get_fetch_usage_cycle_wise_summary", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}, {"name": "feeComponentId", "in": "query", "type": "string", "required": true, "description": "ID of the Fee Component"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/billingReport/usageEstimate": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingUsageEstimateFetchResponseModel"}}}, "operationId": "get_fetch_usage_estimates", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true, "description": "ID of the billing report"}, {"name": "feeComponentId", "in": "query", "type": "string", "description": "ID of the fee component"}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/billingReport/verdictUpdate/{billing_report_id}": {"parameters": [{"name": "billing_report_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_customer_billing_report_verdict_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CustomerVerdictUpdateRequestModel"}}], "tags": ["buyer"]}}, "/buyer/feeComponent/driver/fetch/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeeComponentUsageDriverRelationship"}}}}, "operationId": "get_fetch_fee_component_driver_relations", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/feeComponent/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_filter_fee_component", "parameters": [{"name": "updatedDateFrom", "in": "query", "type": "array", "description": "Starting date for Fee Component Update", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "updatedDateTo", "in": "query", "type": "array", "description": "Ending date for Fee Component Update", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sku", "in": "query", "type": "array", "description": "Fee Component SKU", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "name", "in": "query", "type": "array", "description": "Name of the fee component", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hsnCode", "in": "query", "type": "array", "description": "HSN or SAC Code", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "lastModifiedBy", "in": "query", "type": "array", "description": "Last modified by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["buyer"]}}, "/buyer/feeComponent/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "get_fetch_fee_component", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/ratecard/feeComponent/fetch/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchRateCardsResponseModel"}}}, "operationId": "get_fetch_all_rate_card", "parameters": [{"name": "contractId", "in": "query", "type": "string", "description": "If passed will return all the ratecards available for a contract"}, {"name": "showEmptyCombinations", "in": "query", "type": "string", "description": "If false will return only the combinations of tags that have at least one ratecard", "default": "false"}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/ratecard/test": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TestRateCardResponseModel"}}}, "operationId": "post_test_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TestRateCardRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/ratecard/{rate_card_id}": {"parameters": [{"name": "rate_card_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCard"}}}, "operationId": "get_fetch_rate_card", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageSummaryResponseModel"}}}, "operationId": "get_update_usage", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true}, {"name": "feeComponentId", "in": "query", "type": "string", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/usage/export": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_export_usage_filters", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BuyerUsageExportRequest"}}], "tags": ["buyer"]}}, "/buyer/usage/fetch/{event_id}": {"parameters": [{"name": "event_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "get_fetch_usage", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["buyer"]}}, "/buyer/usage/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_usage_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["buyer"]}}, "/buyer/usage/grouped/feeComponent/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_grouped_usage_fc_wise_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["buyer"]}}, "/buyer/usage/grouped/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_grouped_usage_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["buyer"]}}, "/callLogs": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetAllCallLogsApiResponseMmodel"}}}, "operationId": "get_get_call_logs", "parameters": [{"name": "customerId", "in": "query", "type": "string"}, {"name": "invoiceId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["callLogs"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCallLogDetailsApiResponseMmodel"}}}, "operationId": "post_get_call_logs", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCallLogApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["callLogs"]}}, "/cashflow/category/graph": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CategoryGraphApiResponse"}}}, "operationId": "get_category_cashflow", "parameters": [{"name": "planId", "in": "query", "type": "string", "required": true, "description": "Plan Id is required"}, {"name": "categoryId", "in": "query", "type": "string", "required": true, "description": "Category Id is required"}, {"name": "periodStartDate", "in": "query", "type": "string", "required": true, "description": "Invalid date"}, {"name": "periodEndDate", "in": "query", "type": "string", "required": true, "description": "Invalid date"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["cashflow"]}}, "/cashflow/closingBalance": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CategoryGraphApiResponse"}}}, "operationId": "get_cashflow_forecast_balance", "parameters": [{"name": "date", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["cashflow"]}}, "/cashflow/details": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DetailsApiResponse"}}}, "operationId": "get_cashflow_details", "parameters": [{"name": "periodStartDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "periodEndDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "aggregateBy", "in": "query", "type": "string", "enum": ["month", "day", "three_day", "five_day", "week", "fortnight"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["cashflow"]}}, "/cashflow/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SummaryApiResponse"}}}, "operationId": "get_cashflow_summary", "parameters": [{"name": "planId", "in": "query", "type": "string", "required": true, "description": "Plan Id is required"}, {"name": "periodStartDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "periodEndDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "categoryId", "in": "query", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["cashflow"]}}, "/cashflow/summary/graph": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SummaryGraphApiResponse"}}}, "operationId": "get_cashflow_graph", "parameters": [{"name": "planId", "in": "query", "type": "string", "required": true, "description": "Plan Id is required."}, {"name": "periodStartDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "periodEndDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["cashflow"]}}, "/cashflow/transactionSummary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SummaryApiResponse"}}}, "operationId": "get_transaction_summary", "parameters": [{"name": "periodStartDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "periodEndDate", "in": "query", "type": "string", "required": true, "description": "Invalid date format"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["cashflow"]}}, "/category": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCategoryResponse"}}}, "operationId": "post_category", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddCategoryRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["category"]}}, "/category/company": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCompanyCategoriesResponse"}}}, "operationId": "get_category_company", "parameters": [{"description": "Company ID query parameter", "name": "companyId", "type": "string", "in": "query"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["category"]}}, "/category/company/leafNodes": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_category_leaf_nodes", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "(Required) Company ID for which leaf nodes are fetched"}], "tags": ["category"]}}, "/category/receivableDays": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateReceivableDaysApiResponseModel"}}}, "operationId": "post_category_receivable_days", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateReceivableDaysApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["category"]}}, "/category/relationship": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCategoryRelationshipResponse"}}}, "operationId": "post_category_relationship", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddCategoryRelationshipRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["category"]}}, "/category/relationships": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_category_relationships", "parameters": [{"description": "Company ID query parameter", "name": "companyId", "type": "string", "in": "query"}], "tags": ["category"]}}, "/categorysuggestion/": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_category_suggestion", "parameters": [{"name": "bat", "in": "query", "type": "string", "description": "Bank Account Transaction id against which the category suggestion is required"}, {"name": "fromDate", "in": "query", "type": "string", "description": "Date in YYYYMMDD format. Uncategorized narrations from this date will be processed for suggestions (only if toDate is also supplied)."}, {"name": "toDate", "in": "query", "type": "string", "description": "Date in YYYYMMDD format. Uncategorized narrations up-to this date will be processed for suggestions (only if fromDate is also supplied)."}, {"name": "company", "in": "query", "type": "string", "required": true, "description": "Company id"}, {"name": "key", "in": "query", "type": "string", "required": true, "description": "key"}], "tags": ["categorysuggestion"]}}, "/categorysuggestion/updateDefaultCategory": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DefaultCategoryUpdateApiResponseModel"}}}, "operationId": "post_category_suggestion_update_db", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DefaultCategoryUpdateApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["categorysuggestion"]}}, "/comment": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_comments", "parameters": [{"name": "referenceObjectId", "in": "query", "type": "string", "required": true}, {"name": "commentType", "in": "query", "type": "string", "enum": ["GENERAL", "CALL_LOG"]}], "tags": ["comment"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Comment"}}}, "operationId": "post_comments", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["comment"]}}, "/company": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCompaniesApiResponseModel"}}}, "operationId": "get_company_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCompanyApiResponseModel"}}}, "operationId": "post_company_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddCompanyApiModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}}, "/company/activeCompany": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_active_company", "tags": ["company"]}}, "/company/cinDetails": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_company_cin_details_api", "parameters": [{"name": "cin", "in": "query", "type": "string", "required": true, "description": "(Required) Company Identification Number"}], "tags": ["company"]}}, "/company/invoiceNumberConfig": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CompanyInvoiceNumberConfigResponseModel"}}}, "operationId": "get_company_invoice_number_config", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CompanyInvoiceNumberConfigResponseModel"}}}, "operationId": "post_company_invoice_number_config", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddInvoiceNumberConfigModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}}, "/company/lastBatUpdate": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_company_last_bat_update_api", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "(Required) Company ID for which last bat update date is to be fetched"}], "tags": ["company"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCompaniesApiResponseModel"}}}, "operationId": "post_company_last_bat_update_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateLastBatUpdateDateApiModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}}, "/company/logo": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CompanyLogoUrlResponseModel"}}}, "operationId": "get_company_logo_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}}, "/company/logo/upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_upload_company_logo", "tags": ["company"]}}, "/company/signature/upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_upload_company_signature", "tags": ["company"]}}, "/company/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CompanyResponseModel"}}}, "operationId": "post_update_company_details", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateCompanyDetailsRequest_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}}, "/company/vpaList": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/VpaListResponseModel"}}}, "operationId": "get_company_vpa_list_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["company"]}}, "/contacts": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddContactApiResponseModel"}}}, "operationId": "post_contact_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateContactQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contacts"]}}, "/contacts/bulk-upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_bulk_contact_upload", "parameters": [{"name": "update_existing", "in": "formData", "type": "boolean", "required": true, "description": "To update the already existing contact"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["contacts"]}}, "/contacts/delete": {"delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddContactApiResponseModel"}}}, "operationId": "delete_contact_delete", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteContact"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contacts"]}}, "/contacts/role/all": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_contact_roles_all", "tags": ["contacts"]}}, "/contacts/role/suggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_contact_role_suggestions", "parameters": [{"name": "roleContains", "in": "query", "type": "string", "required": true, "description": "(Required) At least three letters contained in the contact's name  (without wild cards)"}], "tags": ["contacts"]}}, "/contacts/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddContactApiResponseModel"}}}, "operationId": "post_contact_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateContact"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contacts"]}}, "/contract": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_create_contract", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateContractAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/autoRenew/notificationSettings": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModel"}}}, "operationId": "get_contract_notification_settings", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/autoRenew/notificationSettings/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CompanyConfigurationResponseModel"}}}, "operationId": "post_contract_notification_settings_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/cancel/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_cancel_contract", "tags": ["contract"]}}, "/contract/email/send": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_billing_report_email_send", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ContractSendEmailRequestModel"}}], "tags": ["contract"]}}, "/contract/feeComponent": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractFeeComponentResponseModel"}}}, "operationId": "get_fetch_contract_fee_component", "parameters": [{"name": "contractId", "in": "query", "type": "string", "required": true}, {"name": "feeComponentId", "in": "query", "type": "string", "required": true}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/feeComponent/delete": {"delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "delete_delete_contract_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/FeeComponentToContractRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/feeComponent/includeUsage": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_add_contract_fee_component_include_usage", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/FeeComponentIncludeUsageRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/feeComponent/ratecard": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_contract_rate_card_relations", "parameters": [{"name": "contractId", "in": "query", "type": "string", "required": true}, {"name": "feeComponentId", "in": "query", "type": "string"}], "tags": ["contract"]}}, "/contract/feeComponent/ratecard/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractResponseModel"}}}, "operationId": "post_contract_rate_card_relations", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ContractRateCardBulkUpsertionRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/feeComponent/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractFeeComponentResponseModel"}}}, "operationId": "get_fetch_contract_fee_components", "parameters": [{"name": "usageCyclePeriodStartDate", "in": "query", "type": "string"}, {"name": "usageCyclePeriodEndDate", "in": "query", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/fetch/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_contract", "tags": ["contract"]}}, "/contract/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_filtered_contracts", "parameters": [{"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "buyerId", "in": "query", "type": "string", "description": "Buyer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractDurationValue", "in": "query", "type": "integer", "description": "Value of the contract duration (if contract duration is 3 years, value will be 3)"}, {"name": "contractDurationUnit", "in": "query", "type": "string", "description": "Unit of the contract duration (if contract duration is 3 years, unit will be YEAR)"}, {"name": "billingFrequencyValue", "in": "query", "type": "integer", "description": "Value of the billing frequency (if billing frequency is 2 months, value will be 2)"}, {"name": "billingFrequencyUnit", "in": "query", "type": "string", "description": "Unit of the billing frequency (if billing frequency is 2 months, unit will be MONTH)"}, {"name": "nextBillingDateStart", "in": "query", "type": "string", "description": "Start date of the next billing date filter"}, {"name": "nextBillingDateEnd", "in": "query", "type": "string", "description": "End date of the next billing date filter"}, {"name": "status", "in": "query", "type": "string", "enum": ["ACTIVE", "DRAFT", "CANCELLED", "EXPIRED"]}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}], "tags": ["contract"]}}, "/contract/suggest/address": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_address_suggestion", "parameters": [{"name": "customerId", "in": "query", "type": "string", "required": true}, {"name": "addressLike", "in": "query", "type": "string"}], "tags": ["contract"]}}, "/contract/suggest/placeOfSupply": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PlaceOfSupplyListResponseModel"}}}, "operationId": "get_place_of_supply_suggestion", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/suggest/usageCyclePeriod/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ContractUsageCyclePeriodSuggestions"}}}, "operationId": "get_usage_cycle_suggestion", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/update/{contract_id}": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateContractAPIRequestModelResponseModel"}}}, "operationId": "post_update_contract", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateContractAPIRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/usageEstimate": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GenericTable"}}}, "operationId": "get_fetch_usage_usage_cycle_estimates", "parameters": [{"name": "contractId", "in": "query", "type": "string", "required": true, "description": "ID of the contract"}, {"name": "feeComponentId", "in": "query", "type": "string", "description": "ID of the fee component"}, {"name": "usageCycleStartDate", "in": "query", "type": "string", "required": true, "description": "start date for the usage cycle"}, {"name": "usageCycleEndDate", "in": "query", "type": "string", "required": true, "description": "end date for the usage cycle"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/{contract_id}/clone": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Contract"}}}, "operationId": "post_clone_contract", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloneContractRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/{contract_id}/feeComponent/{fee_component_id}/update": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}, {"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_update_contract_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModel_Request"}}], "tags": ["contract"]}}, "/contract/{contract_id}/feeComponentTag": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_fee_component_tags_for_contract", "tags": ["contract"]}}, "/contract/{contract_id}/summary/preview": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_contract_summary_preview", "tags": ["contract"]}}, "/contract/{contract_id}/usageDriver": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_usage_drivers_for_contract", "tags": ["contract"]}}, "/contract/{contract_id}/usageEstimate/fetch": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageEstimateTableInfoListResponseModel"}}}, "operationId": "get_usage_estimate_table_fetch", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/contract/{contract_id}/usageEstimate/sample": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_usage_estimate_sample", "tags": ["contract"]}}, "/contract/{contract_id}/usageEstimate/upload": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_usage_upload_excel_file", "tags": ["contract"]}}, "/contract/{contract_id}/usageEstimate/upsert": {"parameters": [{"name": "contract_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BulkUsageEstimateUpsertRequestModelResponseModel"}}}, "operationId": "post_usage_estimate_table_upsert", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkUsageEstimateUpsertRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["contract"]}}, "/creditNote/attachment/upload": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UploadCreditNoteAttachmentResponseModel"}}}, "operationId": "post_credit_note_attachment_upload", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for attachment upload"}, {"name": "payload", "required": true, "in": "body", "schema": {"type": "object", "properties": {"creditNoteNumber": {"type": "string"}, "attachmentUrl": {"type": "string"}, "purpose": {"type": "string"}}}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditNote"]}}, "/creditNote/bulkPostToInvoices": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPostingBulkApiResponseModel"}}}, "operationId": "post_apply_credit_notes", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateBulkCreditNoteToInvoicePostingQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditNote"]}}, "/creditNote/deleteAdjustment/{posting_id}": {"parameters": [{"name": "posting_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteCreditNoteAdjustmentResponseModel"}}}, "operationId": "delete_delete_credit_note_adjustment", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditNote"]}}, "/creditNote/search": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_credit_note_search", "parameters": [{"name": "startDate", "in": "query", "type": "string", "description": "Fetch credit notes created on or after this date"}, {"name": "endDate", "in": "query", "type": "string", "description": "Fetch credit notes created on or before this date"}, {"name": "minAmount", "in": "query", "type": "number", "description": "Fetch credit notes with total amount >= this amount"}, {"name": "maxAmount", "in": "query", "type": "number", "description": "Fetch credit notes with total amount <= this amount"}, {"name": "creditNoteNumber", "in": "query", "type": "array", "description": "Exact credit note numbers to search for", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "invoiceNumber", "in": "query", "type": "array", "description": "Invoice number reference against which credit note was created", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerId", "in": "query", "type": "array", "description": "Fetch credit notes only for these customers", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerId", "in": "query", "type": "array", "description": "Fetch credit notes only for these internal stakeholders", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "type", "in": "query", "type": "array", "description": "Fetch credit notes which are of these types", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "status", "in": "query", "type": "array", "description": "Fetch credit notes which are of these status", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "description": "Page size for pagination."}], "tags": ["creditNote"]}}, "/creditNote/{credit_note_id}": {"parameters": [{"name": "credit_note_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCreditNoteResponseModel"}}}, "operationId": "get_credit_note_main", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditNote"]}}, "/creditTerms": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermsForCompaniesApiResponseModel"}}}, "operationId": "get_create_credit_term", "parameters": [{"name": "creditTermType", "in": "query", "type": "string", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCreditTermApiResponseModel"}}}, "operationId": "post_create_credit_term", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddTerms"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/addCustomerRelationship": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermByIdApiResponseModel"}}}, "operationId": "post_add_credit_term_customer_relationship", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RemoveCreditTermCustomerRelationship"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/customer/{customer_id}": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermsForCustomerApiResponseModel"}}}, "operationId": "get_credit_term_by_customer_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/delete/{credit_term_id}": {"parameters": [{"name": "credit_term_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermIdAsApiResponseModel"}}}, "operationId": "delete_delete_credit_term", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/markDefault": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermIdAsApiResponseModel"}}}, "operationId": "post_mark_credit_term_as_default", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MarkCreditTermAsDefault"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/removeCustomerRelationship": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermByIdApiResponseModel"}}}, "operationId": "post_remove_credit_term_customer_relationship", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RemoveCreditTermCustomerRelationship"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/title/suggestions": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermTitleSuggestionsApiResponseModel"}}}, "operationId": "get_get_credit_term_title_suggestions", "parameters": [{"name": "creditTermType", "in": "query", "type": "string", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermIdAsApiResponseModel"}}}, "operationId": "post_credit_term_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateCreditTerm"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/variants": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermsForCustomerApiResponseModel"}}}, "operationId": "get_get_credit_term_variants_by_title", "parameters": [{"name": "title", "in": "query", "type": "string", "required": true}, {"name": "creditTermType", "in": "query", "type": "string", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/{credit_term_id}": {"parameters": [{"name": "credit_term_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditTermByIdApiResponseModel"}}}, "operationId": "get_credit_term_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["creditTerms"]}}, "/creditTerms/{credit_term_id}/customer/excel": {"parameters": [{"name": "credit_term_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_export_credit_term_customers_to_excel", "tags": ["creditTerms"]}}, "/cron/invoiceStatusUpdate": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_cron_invoice_status_update", "tags": ["cron"]}}, "/cron/segment/evaluateAll": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_cron_customer_all_segment_evaluation_route", "tags": ["cron"]}}, "/customer": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerApiResponseModel"}}}, "operationId": "post_customer_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCustomerQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/customerPortalLink/{customer_id}": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_customer_portal_link", "tags": ["customer"]}}, "/customer/search": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerPaginatedListResponseModel"}}}, "operationId": "get_customer_search", "parameters": [{"name": "amountType", "in": "query", "type": "string"}, {"name": "identifierType", "in": "query", "type": "string", "enum": ["GSTIN", "PAN", "BUYER_ID", "CUSTOMER_NAME"]}, {"name": "identifierValue", "in": "query", "type": "string"}, {"name": "minAmount", "in": "query", "type": "number"}, {"name": "maxAmount", "in": "query", "type": "number"}, {"name": "invoiceStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "excludeTag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by (exclude)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "excludeTagKey", "in": "query", "type": "array", "description": "list of tag key to filter by (exclude)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerId", "in": "query", "type": "array", "description": "owner ID to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerRole", "in": "query", "type": "array", "description": "owner role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "notOwnerRole", "in": "query", "type": "array", "description": "not owner role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "contactRole", "in": "query", "type": "array", "description": "contact role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "notContactRole", "in": "query", "type": "array", "description": "not contact role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}, {"name": "dateType", "in": "query", "type": "string", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "Start date for invoices"}, {"name": "endDate", "in": "query", "type": "string", "description": "End date for invoices"}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Customer creation date start - will return customers created on or after this date. Pass as YYYY-MM-DD string"}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Customer creation date end - will return customers created on or before this date. Pass as YYYY-MM-DD string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/segment": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCustomerSegmentApiResponseModel"}}}, "operationId": "get_customer_segment_route", "parameters": [{"name": "id", "in": "query", "type": "string", "required": true, "description": "Segment ID which is to be fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerSegmentApiResponseModel"}}}, "operationId": "post_customer_segment_route", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddCustomerSegmentQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}, "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerSegmentApiResponseModel"}}}, "operationId": "delete_customer_segment_route", "parameters": [{"name": "segmentId", "in": "query", "type": "string", "required": true, "description": "Segment ID which is to be removed"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/segment/customers": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCustomerSegmentsApiResponseModel"}}}, "operationId": "get_customers_in_segment_route", "parameters": [{"name": "segmentId", "in": "query", "type": "string", "required": true, "description": "Id of the segment for which customers are to be fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/segment/evaluate": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerSegmentApiResponseModel"}}}, "operationId": "get_customer_segment_evaluation_route", "parameters": [{"name": "segmentId", "in": "query", "type": "string", "required": true, "description": "Id of the segment to be evaluated"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/segment/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerSegmentApiResponseModel"}}}, "operationId": "post_customer_segment_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateCustomerSegment"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/segments": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetCustomerSegmentsApiResponseModel"}}}, "operationId": "get_customer_segments_route", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/segments/count": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetSegmentWiseCustomerCountApiResponseModel"}}}, "operationId": "get_customer_segments_count_route", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/suggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_name_suggestions", "parameters": [{"name": "nameContains", "in": "query", "type": "string", "required": true, "description": "(Required) At least three letters contained in the customer's name  (without wild cards)"}], "tags": ["customer"]}}, "/customer/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerSummaryResponseModel"}}}, "operationId": "get_customer_summary", "parameters": [{"name": "amountType", "in": "query", "type": "string"}, {"name": "identifierType", "in": "query", "type": "string", "enum": ["GSTIN", "PAN", "BUYER_ID", "CUSTOMER_NAME"]}, {"name": "identifierValue", "in": "query", "type": "string"}, {"name": "minAmount", "in": "query", "type": "number"}, {"name": "maxAmount", "in": "query", "type": "number"}, {"name": "invoiceStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "excludeTag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by (exclude)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "excludeTagKey", "in": "query", "type": "array", "description": "list of tag key to filter by (exclude)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerId", "in": "query", "type": "array", "description": "owner ID to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerRole", "in": "query", "type": "array", "description": "owner role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "notOwnerRole", "in": "query", "type": "array", "description": "not owner role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "contactRole", "in": "query", "type": "array", "description": "contact role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "notContactRole", "in": "query", "type": "array", "description": "not contact role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "dateType", "in": "query", "type": "string", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "Start date for invoices"}, {"name": "endDate", "in": "query", "type": "string", "description": "End date for invoices"}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Customer creation date start - will return customers created on or after this date. Pass as YYYY-MM-DD string"}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Customer creation date end - will return customers created on or before this date. Pass as YYYY-MM-DD string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerApiResponseModel"}}}, "operationId": "post_customer_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateCustomer"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_customer_file_upload", "parameters": [{"name": "isValidationOnly", "in": "query", "type": "boolean", "description": "Is the file uploaded only for validation", "default": false}], "tags": ["customer"]}}, "/customer/{customer_id}": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerByIdApiResponseModel"}}}, "operationId": "get_customer_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/{customer_id}/address/suggestions": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAddressSuggestionResponseModel"}}}, "operationId": "get_customer_address_suggestion", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/{customer_id}/attachment/upload": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UploadCustomerAttachmentResponseModel"}}}, "operationId": "post_customer_attachment_file_upload", "parameters": [{"name": "purpose", "in": "formData", "type": "string", "required": true, "description": "Purpose of the attachment"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["customer"]}}, "/customer/{customer_id}/creditNotesSummary": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerCreditNotesSummaryByIdApiResponseModel"}}}, "operationId": "get_customer_credit_notes_summary_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customer/{customer_id}/invoicesSummary": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseModel"}}}, "operationId": "get_customer_invoices_summary_by_id", "parameters": [{"name": "startDate", "in": "query", "type": "string", "required": true, "description": "Start date for invoices"}, {"name": "endDate", "in": "query", "type": "string", "required": true, "description": "End date for invoices"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customer"]}}, "/customerLedger": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Handles a GET request to retrieve customer ledger entries based on query parameters", "description": "This method extracts query parameters from the request, validates and processes them,\nconstructs a `SearchCustomerLedgerQueryModel` for filtering ledger entries, and\nfetches the paginated ledger entries.\n\nReturns:\n    Tuple[Dict[str, Any], int]: A tuple containing:\n        - A dictionary with keys:\n            - \"error\": `None` if no error occurred.\n            - \"message\": A success message.\n            - \"data\": The paginated ledger entries converted to dictionaries.\n        - An HTTP status code (200 for success).\n\nWorkflow:\n1. **Parse Request Arguments**:\n    - Extracts query parameters such as `customerId`, `invoiceNumber`, `creditNoteNumber`,\n      `creditNarration`, `placeholderName`, `pageSize`, `page`, and `entryType`.\n    - Retrieves the `company_id` from the request context.\n\n2. **Validate and Process Entry Type**:\n    - If `entryType` is provided, maps it to the `LedgerEntryType` enum.\n\n3. **Construct Search Query Model**:\n    - Calls `CustomerLedgerService.get_customer_ledger_search_model_from_request`\n      to create a `SearchCustomerLedgerQueryModel` with the extracted parameters.\n\n4. **Fetch Ledger Entries**:\n    - Uses `CustomerLedgerService.get_ledger_for_customer` to fetch filtered ledger\n      entries based on the search model.\n\n5. **Return Response**:\n    - Converts the paginated ledger entries into dictionaries using a utility function.\n    - Returns the entries along with a success message and status code.\n\nExample:\n    A GET request with query parameters:\n    - `customerId=CUST123`\n    - `pageSize=10`\n    - `page=1`\n    Will fetch and return ledger entries for the specified customer.", "operationId": "get_customer_ledger_routes", "parameters": [{"name": "customerId", "in": "query", "type": "string", "required": true, "description": "Id of the customer"}, {"name": "entryType", "in": "query", "type": "string", "description": "Entry type"}, {"name": "onlyCreditEntry", "in": "query", "type": "string", "description": "Only credit entry"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "Invoice number"}, {"name": "creditNarration", "in": "query", "type": "string", "description": "credit narration"}, {"name": "creditNoteNumber", "in": "query", "type": "string", "description": "Credit note number"}, {"name": "placeholderName", "in": "query", "type": "string", "description": "Placeholder name"}, {"name": "entryStartDate", "in": "query", "type": "string", "description": "Start date of the period for which entries are fetched"}, {"name": "entryEndDate", "in": "query", "type": "string", "description": "End date of the period for which entries are fetched"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}], "tags": ["customerLedger"]}}, "/customerLedger/export": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Export the customer ledger for passed customer ids", "description": "This method handles the GET request to initiate the customer ledger export\nbased on their IDs and the company ID associated with the authenticated request.", "operationId": "get_customer_ledger_export", "parameters": [{"name": "entryStartDate", "in": "query", "type": "string", "required": true, "description": "Start date of the period for which entries are fetched. Defaults to nearest 1-Apr in the past"}, {"name": "entryEndDate", "in": "query", "type": "string", "description": "End date of the period for which entries are fetched. Defaults to today's date."}, {"name": "customerId", "in": "query", "type": "array", "description": "Customer ids for which the customer ledgers are required.", "items": {"type": "string"}, "collectionFormat": "multi"}], "tags": ["customerLedger"]}}, "/customerLedger/{customer_id}": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "summary": "Retrieve the ledger summary for a specific customer", "description": "This method handles the GET request to fetch the ledger summary\nof a customer based on their ID and the company ID associated\nwith the authenticated request.\n\nArgs:\n    customer_id (str): The unique identifier of the customer\n        whose ledger summary is to be fetched.\n\nReturns:\n    Tuple[Dict[str, Any], int]:\n        - A dictionary containing:\n            - `error`: None if successful, otherwise the error message.\n            - `message`: A string indicating the operation's status.\n            - `data`: The ledger summary of the customer in a serialized dictionary format.\n        - HTTP status code (int), typically 200 for success.\n\nRaises:\n    UnauthorizedError: If the user is not authenticated.\n    ResourceNotFoundError: If the customer or company does not exist.\n    ServiceException: If an error occurs while processing the request.\n\nWorkflow:\n1. Extract the `company_id` from the authenticated request (`request.company_id`).\n2. Call `CustomerLedgerService.get_ledger_summary_for_customer` with the\n   provided `customer_id` and `company_id`.\n3. Serialize the result using `DataclassUtils.convert_dataclass_to_dict`.\n4. Return the serialized data with a success message and HTTP 200 status code.", "operationId": "get_customer_summary_routes", "parameters": [{"name": "entryStartDate", "in": "query", "type": "string", "description": "Start date of the period for which entries are fetched"}, {"name": "entryEndDate", "in": "query", "type": "string", "description": "End date of the period for which entries are fetched"}], "tags": ["customerLedger"]}}, "/customerPortal/adjustments/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_invoice_adjustments", "tags": ["customerPortal"]}}, "/customerPortal/attachments": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttachmentSearchResponseModel"}}}, "operationId": "get_get_attachments", "parameters": [{"name": "referenceType", "in": "query", "type": "string", "description": "attachment reference to filter by", "enum": ["INVOICE", "CUSTOMER", "CREDITNOTE", "COMMENT", "EMAIL_REPLY", "BILLING_REPORT", "TICKET", "USAGE_ESTIMATE", "ADHOC_WAB"]}, {"name": "referenceId", "in": "query", "type": "string", "description": "attachment reference ID e.g. customer id, invoice id to filter by"}, {"name": "fileName", "in": "query", "type": "string", "description": "file name like"}, {"name": "createdBy", "in": "query", "type": "string", "description": "ID of the user who uploaded the attachment"}, {"name": "fileType", "in": "query", "type": "array", "description": "file type should be in one of these types", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "purpose", "in": "query", "type": "array", "description": "purpose of the attachment should be one of these values", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "uploadedAfter", "in": "query", "type": "string", "description": "uploaded after should be this date"}, {"name": "uploadedBefore", "in": "query", "type": "string", "description": "uploaded before should be this date"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerPortal"]}}, "/customerPortal/attachments/{attachment_id}": {"parameters": [{"name": "attachment_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_attachment_file", "tags": ["customerPortal"]}}, "/customerPortal/authenticate": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_authenticate", "tags": ["customerPortal"]}}, "/customerPortal/company/{company_id}": {"parameters": [{"name": "company_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_company_logo_api", "tags": ["customerPortal"]}}, "/customerPortal/generateLogin": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_login_generate", "parameters": [{"name": "email", "in": "query", "type": "string", "required": true}, {"name": "companyId", "in": "query", "type": "string", "required": true}, {"name": "customerId", "in": "query", "type": "string", "required": true}, {"name": "redirectUrl", "in": "query", "type": "string", "required": true}], "tags": ["customerPortal"]}}, "/customerPortal/invoice/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_invoice_by_id", "tags": ["customerPortal"]}}, "/customerPortal/invoiceDownload/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_download_invoice", "tags": ["customerPortal"]}}, "/customerPortal/invoiceSummary": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_invoice_summary", "tags": ["customerPortal"]}}, "/customerPortal/invoices": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_invoices_by_filters", "parameters": [{"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice id", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "sort", "in": "query", "type": "string", "description": "Sort invoices by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate", "invoiceDueDate", "-invoiceDueDate", "invoiceTotal", "-invoiceTotal", "invoiceOutstandingAmount", "-invoiceOutstandingAmount"]}], "tags": ["customerPortal"]}}, "/customerPortal/invoices/bulkAccept": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceBulkInvoiceAcceptanceStatusResponseModel"}}}, "operationId": "post_bulk_accept_invoice_acceptance_status", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkInvoiceAcceptanceStatusAcceptRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerPortal"]}}, "/customerPortal/invoices/bulkReject": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceBulkInvoiceAcceptanceStatusResponseModel"}}}, "operationId": "post_bulk_reject_invoice_acceptance_status", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerPortal"]}}, "/customerPortal/invoices/rejectReasons": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TicketReasonsResponseModel"}}}, "operationId": "get_get_ticket_reasons", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerPortal"]}}, "/customerPortal/login/verify": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_login_verify", "parameters": [{"name": "token", "in": "query", "type": "string", "required": true}], "tags": ["customerPortal"]}}, "/customerPortal/posting/invoice/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchInvoicePostingApiResponseModel"}}}, "operationId": "get_invoice_posting_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerPortal"]}}, "/customerTag": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerTagApiResponseModel"}}}, "operationId": "post_customer_tag_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddCustomerTagApiModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerTag"]}}, "/customerTag/delete": {"delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddCustomerTagApiResponseModel"}}}, "operationId": "delete_customer_tag_delete", "parameters": [{"name": "customerId", "in": "query", "type": "string", "required": true, "description": "Customer ID for which tag is to be deleted"}, {"name": "key", "in": "query", "type": "string", "required": true, "description": "Tag key for which tag is to be deleted"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["customerTag"]}}, "/customerTag/keys": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_tag_keys", "parameters": [{"name": "like", "in": "query", "type": "string", "description": "Substring of the keys that are searched"}], "tags": ["customerTag"]}}, "/customerTag/values": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_tag_values", "parameters": [{"name": "key", "in": "query", "type": "string", "required": true, "description": "Tag key value for which values are to be fetched"}], "tags": ["customerTag"]}}, "/email/authenticate/{domain}": {"parameters": [{"name": "domain", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_email_custom_domain", "tags": ["email"]}}, "/email/event/webhook": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EmailToggleApiResponseModel"}}}, "operationId": "post_event_webhook", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["email"]}}, "/email/getMailById/{mail_access_token}": {"parameters": [{"name": "mail_access_token", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_mail_by_id", "tags": ["email"]}}, "/email/manual/send": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "Handles POST requests to send manual emails for a company", "description": "Steps:\n1. Extract `company_id` and `user_id` from the request context.\n2. Parse the request data into a `ManualEmailQueryModel` object.\n3. Fetch the company's reply-to email using the `CompanyService`.\n4. Process and send manual emails using the `SendEmailService`.\n5. Log activity for each successfully sent email using `ActivityService`.\n\nReturns:\n    A tuple containing:\n    - A dictionary with success or error messages.\n    - HTTP status code (200 for success, appropriate error code otherwise).\n\nRaises:\n    - `ValueError`: If the request data is invalid.\n    - `RuntimeError`: If email processing or sending fails.", "operationId": "post_manual_email_routes", "parameters": [{"name": "requestData", "in": "formData", "type": "string", "required": true, "description": "Request data sent as a json"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["email"]}}, "/email/preview/send/{template_id}": {"parameters": [{"name": "template_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_send_preview_mail", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SendEmailPreviewRequestModel"}}], "tags": ["email"]}}, "/email/recipients/suggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_email_recipient_suggestions", "parameters": [{"name": "query", "in": "query", "type": "string", "required": true, "description": "(Required) At least three letters required (without wild cards)"}], "tags": ["email"]}}, "/email/reply/webhook": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EmailToggleApiResponseModel"}}}, "operationId": "post_email_reply_webhook", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["email"]}}, "/email/send": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_send_mail", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SendEmailRequestModel"}}], "tags": ["email"]}}, "/email/toggle": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EmailToggleApiResponseModel"}}}, "operationId": "post_email_routes", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["email"]}}, "/email/writeOff": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WriteOffEmailApprovalResponseModel"}}}, "operationId": "post_write_off_email_routes", "parameters": [{"name": "customerId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "approvalStatus", "in": "query", "type": "array", "description": "Approval status of the the write off.", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, {"name": "invoiceStartDate", "in": "query", "type": "string", "description": "Invoice date should be after start date"}, {"name": "requesterIds", "in": "query", "type": "array", "description": "User id of the requester", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "invoiceEndDate", "in": "query", "type": "string", "description": "Invoice date should be before end date"}, {"name": "writeOffStartDate", "in": "query", "type": "string", "description": "Write off request should be after start date"}, {"name": "writeOffEndDate", "in": "query", "type": "string", "description": "Write off request should be before end date"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["email"]}}, "/email/{email_ref_id}": {"parameters": [{"name": "email_ref_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EmailObjectResponseModel"}}}, "operationId": "get_email_main", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["email"]}}, "/emailTemplates": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_email_template_main", "parameters": [{"name": "templateStatus", "in": "query", "type": "array", "description": "list of template statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["ACTIVE", "INACTIVE", "DRAFT"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the last updated date"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the last updated date"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "page number of result to be fetched"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "number of entries per page"}], "tags": ["emailTemplates"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddEmailTemplateApiResponseModel"}}}, "operationId": "post_email_template_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateEmailTemplateQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["emailTemplates"]}}, "/emailTemplates/placeholders": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_template_placeholder_fetch", "tags": ["emailTemplates"]}}, "/emailTemplates/suggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_template_name_suggestions", "parameters": [{"name": "nameContains", "in": "query", "type": "string", "required": true, "description": "(Required) At least three letters contained in the template's name  (without wild cards)"}], "tags": ["emailTemplates"]}}, "/emailTemplates/update/{template_id}": {"parameters": [{"name": "template_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddEmailTemplateApiResponseModel"}}}, "operationId": "post_email_template_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateEmailTemplate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["emailTemplates"]}}, "/emailTemplates/{template_id}": {"parameters": [{"name": "template_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_email_template_by_id", "tags": ["emailTemplates"]}}, "/emailTemplates/{template_id}/delete": {"parameters": [{"name": "template_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddEmailTemplateApiResponseModel"}}}, "operationId": "delete_email_template_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["emailTemplates"]}}, "/emailTemplates/{template_id}/preview": {"parameters": [{"name": "template_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_email_template_preview", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/EmailPreviewRequestModel"}}], "tags": ["emailTemplates"]}}, "/erp/auth/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_erp_auth", "tags": ["erp"]}}, "/erp/callback/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_erp_callback", "tags": ["erp"]}}, "/erp/creditnotes/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_erp_credit_notes", "parameters": [{"name": "org_id", "in": "query", "type": "string"}, {"name": "date_start", "in": "query", "type": "string"}, {"name": "date_end", "in": "query", "type": "string"}, {"name": "status", "in": "query", "type": "string"}, {"name": "customer_name", "in": "query", "type": "string"}, {"name": "customer_id", "in": "query", "type": "string", "description": "Buyer Id for the customer"}, {"name": "last_modified_time", "in": "query", "type": "string"}], "tags": ["erp"]}}, "/erp/customerPayments/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "summary": "Handles the GET request to initiate pulling customer payments from the ERP system", "description": "Args:\n    app_type (str): The type of ERP application. It should match a valid enum value in `ErpAppType`.\n\nReturns:\n    Tuple[Dict[str, Any], int]: A tuple containing a response dictionary and an HTTP status code.\n\nRaises:\n    ValueError: If the `company_id` is not provided in the request.", "operationId": "get_erp_customer_payments", "parameters": [{"name": "org_id", "in": "query", "type": "string"}, {"name": "last_modified_time", "in": "query", "type": "string"}], "tags": ["erp"]}}, "/erp/invoices/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_erp_invoices", "parameters": [{"name": "org_id", "in": "query", "type": "string"}, {"name": "date_start", "in": "query", "type": "string"}, {"name": "date_end", "in": "query", "type": "string"}, {"name": "date_before", "in": "query", "type": "string"}, {"name": "date_after", "in": "query", "type": "string"}, {"name": "status", "in": "query", "type": "string"}, {"name": "invoice_number_startswith", "in": "query", "type": "string"}, {"name": "invoice_number_contains", "in": "query", "type": "string"}, {"name": "customer_name", "in": "query", "type": "string"}, {"name": "last_modified_time", "in": "query", "type": "string"}], "tags": ["erp"]}}, "/external/bankAccountTransaction/search": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Search bank account transactions based on passed search parameters", "operationId": "get_bank_account_transaction_search", "parameters": [{"name": "bankAccountIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "categories", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "periodStartDate", "in": "query", "type": "string", "description": "Value date for the bank account transaction (BAT). Please input in YYYY-MM-DD format. Will fetch BATs with value date on or after this date."}, {"name": "periodEndDate", "in": "query", "type": "string", "description": "Value date for the bank account transaction (BAT). Please input in YYYY-MM-DD format. Will fetch BATs with value date on or before this date."}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}, {"name": "narration", "in": "query", "type": "string"}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Date on which this bank account transaction was created in Valyx. Please input in YYYY-MM-DD format. Will fetch BATs created in Valyx on or after this date."}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Date on which this bank account transaction was created in Valyx. Please input in YYYY-MM-DD format. Will fetch BATs created in Valyx on or before this date."}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key"}], "tags": ["external"]}}, "/external/creditNotes": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Handles GET requests for the /creditNotes route", "description": "Authenticates the request\nand retrieves credit note data for a specified company, applying filters\nand pagination as specified in the request parameters.\n\nReturns:\n    Tuple containing:\n        - A dictionary with the fetched credit notes and pagination details.\n        - HTTP status code 200.", "operationId": "get_credit_note_routes", "parameters": [{"name": "startDate", "in": "query", "type": "string", "description": "Fetch credit notes created on or after this date"}, {"name": "endDate", "in": "query", "type": "string", "description": "Fetch credit notes created on or before this date"}, {"name": "minAmount", "in": "query", "type": "number", "description": "Fetch credit notes with total amount >= this amount"}, {"name": "maxAmount", "in": "query", "type": "number", "description": "Fetch credit notes with total amount <= this amount"}, {"name": "creditNoteNumber", "in": "query", "type": "array", "description": "Exact credit note numbers to search for", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "invoiceNumber", "in": "query", "type": "array", "description": "Invoice number reference against which credit note was created", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerId", "in": "query", "type": "array", "description": "Fetch credit notes only for these customers", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerId", "in": "query", "type": "array", "description": "Fetch credit notes only for these internal stakeholders", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "type", "in": "query", "type": "array", "description": "Fetch credit notes which are of these types", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "status", "in": "query", "type": "array", "description": "Fetch credit notes which are of these status", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "description": "Page size for pagination."}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["external"]}}, "/external/creditNotes/upsert": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_credit_note_upsert_routes", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCreditNotesExternalAPIQueryModel"}}], "tags": ["external"]}}, "/external/customer": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "Create customer with its tags, internal stakeholders and contacts", "operationId": "post_customer_create_route", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for creating customers"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCustomer"}}], "tags": ["external"]}}, "/external/customer/search": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Search customers based on passed search parameters", "operationId": "get_customer_search", "parameters": [{"name": "amountType", "in": "query", "type": "string"}, {"name": "identifierType", "in": "query", "type": "string", "enum": ["GSTIN", "PAN", "BUYER_ID", "CUSTOMER_NAME"]}, {"name": "identifierValue", "in": "query", "type": "string"}, {"name": "minAmount", "in": "query", "type": "number"}, {"name": "maxAmount", "in": "query", "type": "number"}, {"name": "invoiceStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "excludeTag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by (exclude)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "excludeTagKey", "in": "query", "type": "array", "description": "list of tag key to filter by (exclude)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerId", "in": "query", "type": "array", "description": "owner ID to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "ownerRole", "in": "query", "type": "array", "description": "owner role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "notOwnerRole", "in": "query", "type": "array", "description": "not owner role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "contactRole", "in": "query", "type": "array", "description": "contact role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "notContactRole", "in": "query", "type": "array", "description": "not contact role to search by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}, {"name": "dateType", "in": "query", "type": "string", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "Start date for invoices"}, {"name": "endDate", "in": "query", "type": "string", "description": "End date for invoices"}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Customer creation date start - will return customers created on or after this date. Pass as YYYY-MM-DD string"}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Customer creation date end - will return customers created on or before this date. Pass as YYYY-MM-DD string"}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key"}], "tags": ["external"]}}, "/external/customer/{buyer_id}": {"parameters": [{"name": "buyer_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "summary": "Update customer with its tags, internal stakeholders and contacts", "operationId": "post_customer_update_route", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for creating customers"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateCustomer"}}], "tags": ["external"]}}, "/external/invoice/upsert": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_invoice_upsert_routes", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateInvoice"}}], "tags": ["external"]}}, "/external/invoices": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Handles GET requests for the /invoices route", "description": "Authenticates the request\nand retrieves invoice data for a specified company, applying filters\nand pagination as specified in the request parameters.\n\nReturns:\n    Tuple containing:\n        - A dictionary with the fetched invoices and pagination details.\n        - HTTP status code 200.", "operationId": "get_invoice_routes", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "page number of result to be fetched"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "number of entries per page"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}], "tags": ["external"]}}, "/external/payment/search": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Fetch payments based on passed search parameters", "operationId": "get_payment_external_search", "parameters": [{"name": "paymentDateFrom", "in": "query", "type": "string", "description": "Starting date for payment search"}, {"name": "paymentDateTo", "in": "query", "type": "string", "description": "Ending date for payment search"}, {"name": "settledDateFrom", "in": "query", "type": "string", "description": "lower limit of settled date"}, {"name": "settledDateTo", "in": "query", "type": "string", "description": "upper limit of settled date"}, {"name": "source", "in": "query", "type": "array", "description": "Payment source (e.g. Razorpay)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "amountPaidFrom", "in": "query", "type": "number", "description": "lower limit of payment amount"}, {"name": "amountPaidTo", "in": "query", "type": "number", "description": "Upper limit of payment amount"}, {"name": "paymentMethod", "in": "query", "type": "array", "description": "Method of payment, e.g. card, netbanking", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "paymentReference", "in": "query", "type": "array", "description": "Payment reference ID in Payment Gateway", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "status", "in": "query", "type": "array", "description": "PaymentStatus", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "accountId", "in": "query", "type": "array", "description": "PG Account ID", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Date on which this payment was created in Valyx. Please input in YYYY-MM-DD format. Will fetch payments created in Valyx on or after this date."}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Date on which this payment was created in Valyx. Please input in YYYY-MM-DD format. Will fetch payments created in Valyx on or before this date."}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key"}], "tags": ["external"]}}, "/feeComponent": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "post_create_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponent/delete/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "post_delete_fee_component", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponent/driver": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponent"}}}, "operationId": "post_bulk_upsert_fee_component_driver_relation", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpsertBulkFeeComponentUsageDriverRelationshipQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponent/driver/fetch/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeeComponentUsageDriverRelationship"}}}}, "operationId": "get_fetch_fee_component_driver_relations", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponent/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_filter_fee_component", "parameters": [{"name": "updatedDateFrom", "in": "query", "type": "string", "description": "Starting date for Fee Component Update"}, {"name": "updatedDateTo", "in": "query", "type": "string", "description": "Ending date for Fee Component Update"}, {"name": "sku", "in": "query", "type": "array", "description": "Fee Component SKU", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "name", "in": "query", "type": "array", "description": "Name of the fee component", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hsnCode", "in": "query", "type": "array", "description": "HSN or SAC Code", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "lastModifiedBy", "in": "query", "type": "array", "description": "Last modified by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}], "tags": ["feeComponent"]}}, "/feeComponent/update/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "post_update_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponent/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentResponseModel"}}}, "operationId": "get_fetch_fee_component", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponent/{fee_component_id}/clone": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponent"}}}, "operationId": "post_clone_fee_component", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloneFeeComponentRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponent"]}}, "/feeComponentTag": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentTagResponseModel"}}}, "operationId": "post_create_fee_component_tag", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddTagValueRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponentTag"]}}, "/feeComponentTag/delete": {"delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FeeComponentTagResponseModel"}}}, "operationId": "delete_delete_fee_component_tag", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteTagValueRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["feeComponentTag"]}}, "/feeComponentTag/feeComponentTagSuggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_fee_component_tag_suggestions", "parameters": [{"name": "name", "in": "query", "type": "string", "required": true}], "tags": ["feeComponentTag"]}}, "/feeComponentTag/fetch/feeComponent/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_fee_component_tag", "tags": ["feeComponentTag"]}}, "/files/viewImage/{file_id}": {"parameters": [{"name": "file_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_cloud_image_file", "tags": ["files"]}}, "/files/{file_id}": {"parameters": [{"name": "file_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_cloud_file", "tags": ["files"]}}, "/hognose/categorizer/{path}": {"parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_hognose_route", "tags": ["hognose"]}}, "/invitation/invite": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SendInviteApiResponseModel"}}}, "operationId": "post_invite", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddInviteApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invitation"]}}, "/invitation/list": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvitesOfCompanyResponse"}}}, "operationId": "get_invitation_list", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Id of the company"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invitation"]}}, "/invitation/revoke": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RevokeInviteApiResponseModel"}}}, "operationId": "post_invitation_revoke", "parameters": [{"name": "invitationId", "in": "query", "type": "string", "required": true, "description": "Invitation id which needs to be revoked"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invitation"]}}, "/invitation/validate": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ValidateInviteApiResponseModel"}}}, "operationId": "get_invite_validation", "parameters": [{"name": "inviteCode", "in": "query", "type": "string", "required": true, "description": "Invitation code of the invite"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invitation"]}}, "/invoice": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddInvoiceApiResponseModel"}}}, "operationId": "post_invoice_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateInvoiceQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/attachment/upload": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UploadInvoiceAttachmentResponseModel"}}}, "operationId": "post_invoice_attachment_upload", "parameters": [{"name": "X-Valyx-Attachment-Upload-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for attachment upload"}, {"name": "payload", "required": true, "in": "body", "schema": {"type": "object", "properties": {"invoiceNumber": {"type": "string"}, "attachmentUrl": {"type": "string"}, "purpose": {"type": "string"}}}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/attachments": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceAttachmentResponseModel"}}}, "operationId": "get_invoice_attachment_route", "parameters": [{"name": "X-Valyx-Attachment-Upload-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for attachment upload"}, {"name": "X-Valyx-Signature", "in": "header", "type": "string", "description": "Auth key for attachment upload"}, {"name": "uploadedBefore", "in": "query", "type": "string", "description": "uploaded before should be this date"}, {"name": "uploadedAfter", "in": "query", "type": "string", "description": "uploaded before should be this date"}, {"name": "purpose", "in": "query", "type": "array", "description": "purpose of the attachment should be one of these values", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/bulkPromiseToPayUpdate": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceBulkPtpUpdateResponseModel"}}}, "operationId": "post_invoice_bulk_ptp_update_route", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkPromiseToPayUpdateApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/export": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_export_invoices", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}], "tags": ["invoice"]}}, "/invoice/html/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_invoice_html_by_id", "tags": ["invoice"]}}, "/invoice/invoiceDownload/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_download_invoice", "tags": ["invoice"]}}, "/invoice/promiseToPayReasonRequired": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PtpReasonRequiredResponseModel"}}}, "operationId": "get_invoice_ptp_reason_required_route", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/promiseToPayReasons": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PtpReasonListResponseModel"}}}, "operationId": "get_invoice_ptp_reason_list_route", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/search": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_invoice_search", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "page number of result to be fetched"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "number of entries per page"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}], "tags": ["invoice"]}}, "/invoice/subsetSearch": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_invoice_subset_search", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "page number of result to be fetched"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "number of entries per page"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}], "tags": ["invoice"]}}, "/invoice/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoicesSummaryResponseModel"}}}, "operationId": "get_invoice_summary", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddInvoiceApiResponseModel"}}}, "operationId": "post_invoice_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateInvoice"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/update/bulkAcceptanceStatus": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceBulkInvoiceAcceptanceStatusResponseModel"}}}, "operationId": "post_bulk_invoice_acceptance_status_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkInvoiceAcceptanceStatusUpdateRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/updateTds": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_invoice_update_tds", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateInvoiceTDSModel"}}], "tags": ["invoice"]}}, "/invoice/upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_invoice_file_upload", "parameters": [{"name": "isValidationOnly", "in": "query", "type": "boolean", "description": "Is the file uploaded only for validation", "default": false}], "tags": ["invoice"]}}, "/invoice/validate/attachments": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceAttachmentValidationResponseModel"}}}, "operationId": "post_invoice_attachment_validation_route", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/InvoiceAttachmentValidationRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["invoice"]}}, "/invoice/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_invoice_by_id", "tags": ["invoice"]}}, "/invoice/{invoice_id}/attachment/upload": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UploadInvoiceAttachmentResponseModel"}}}, "operationId": "post_invoice_attachment_file_upload", "parameters": [{"name": "purpose", "in": "formData", "type": "string", "required": true, "description": "Purpose of the attachment"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["invoice"]}}, "/invoiceTag": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_invoice_tag_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddInvoiceTagApiModel"}}], "tags": ["invoiceTag"]}}, "/invoiceTag/keys": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_invoice_tag_keys", "parameters": [{"name": "like", "in": "query", "type": "string", "description": "Substring of the keys that are searched"}], "tags": ["invoiceTag"]}}, "/invoiceTag/values": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_invoice_tag_values", "parameters": [{"name": "key", "in": "query", "type": "string", "required": true, "description": "Tag key value for which values are to be fetched"}], "tags": ["invoiceTag"]}}, "/ireckoner/customer": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_i_reckoner_customer_routes", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Company id for which customers are to be populated"}, {"name": "batchSize", "in": "query", "type": "integer", "description": "Batch size in which customers are to be populated"}], "tags": ["ireckoner"]}}, "/ireckoner/invoice": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_i_reckoner_routes", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Company ID for which data is required"}, {"name": "batchSize", "in": "query", "type": "integer", "description": "Batch size in which invoices are to be populated"}], "tags": ["ireckoner"]}}, "/ireckoner/invoice/custom": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_i_reckoner_custom_invoice_routes", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Company ID for which data is required"}, {"name": "invoiceIds", "in": "query", "type": "string", "required": true, "description": "Id of Invoices for which data to be pulled"}], "tags": ["ireckoner"]}}, "/ireckoner/posting/{buyer_id}": {"parameters": [{"name": "buyer_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_i_reckoner_posting_route", "tags": ["ireckoner"]}}, "/ireckoner/postings": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_i_reckoner_posting_routes", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Company id for which customers are to be populated"}, {"name": "buyerId", "in": "query", "type": "string", "description": "Buyer ID for which posting are to be synced"}], "tags": ["ireckoner"]}, "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_i_reckoner_posting_routes", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/IreckonerPostingSyncRequestModel"}}], "tags": ["ireckoner"]}}, "/ledger": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/LedgerObjectResponseModel"}}}, "operationId": "get_get_ledger", "parameters": [{"name": "X-Valyx-Signature", "in": "header", "type": "string", "required": true, "description": "Auth key for fetching ledger entries"}, {"name": "from", "in": "query", "type": "integer", "required": true, "description": "posting updated date (in unix timestamp format) before should be this date"}, {"name": "to", "in": "query", "type": "integer", "description": "posting updated date (in unix timestamp format) before should be this date"}, {"name": "count", "in": "query", "type": "integer", "required": true, "description": "not of postings to be fetched"}, {"name": "skip", "in": "query", "type": "integer", "required": true, "description": "no of postings to be skipped"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ledger"]}}, "/members": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetMembersApiResponseModel"}}}, "operationId": "get_members", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true, "description": "Id of the company"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["members"]}}, "/owner": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetOwnerApiResponseModel"}}}, "operationId": "get_owner_main", "parameters": [{"name": "ownerId", "in": "query", "type": "string", "required": true, "description": "The owner id to get"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddOwnerApiResponseModel"}}}, "operationId": "post_owner_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateOwnerQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}}, "/owner/all": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OwnerSuggestionsApiResponseModel"}}}, "operationId": "get_owners_all", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}}, "/owner/existingUserOrOwnerByEmail": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OwnerOrUserByEmailApiResponseModel"}}}, "operationId": "get_existing_user_or_owner_by_email", "parameters": [{"name": "email", "in": "query", "type": "string", "description": "Enter email for data"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}}, "/owner/remove": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RemoveOwnerApiResponseModel"}}}, "operationId": "post_owner_remove", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteOwnerQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}}, "/owner/role/all": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_owner_roles_all", "tags": ["owner"]}}, "/owner/role/suggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_owner_role_suggestions", "parameters": [{"name": "roleContains", "in": "query", "type": "string", "required": true, "description": "(Required) At least three letters contained in the owner's name  (without wild cards)"}], "tags": ["owner"]}}, "/owner/suggestions": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OwnerSuggestionsApiResponseModel"}}}, "operationId": "get_owner_suggestions", "parameters": [{"name": "emailContains", "in": "query", "type": "string", "description": "Enter email for suggestions"}, {"name": "nameContains", "in": "query", "type": "string", "description": "Enter name for suggestions"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}}, "/owner/update/role": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateOwnerRoleApiResponseModel"}}}, "operationId": "post_owner_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteOwnerQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["owner"]}}, "/payment/upi": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_payment_page_with_upi_qr", "parameters": [{"name": "data", "in": "query", "type": "string", "required": true, "description": "Data used to load details for UPI payment page"}], "tags": ["payment"]}}, "/pg/auth/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_pg_auth", "tags": ["pg"]}}, "/pg/payments": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_pg_payment_fetch", "tags": ["pg"]}}, "/pg/payments/accountIds": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_pg_fetch_payment_account_id", "parameters": [{"name": "pgName", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}], "tags": ["pg"]}}, "/pg/payments/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_pg_payment_filter", "parameters": [{"name": "paymentDateFrom", "in": "query", "type": "string", "description": "Starting date for payment search"}, {"name": "paymentDateTo", "in": "query", "type": "string", "description": "Ending date for payment search"}, {"name": "settledDateFrom", "in": "query", "type": "string", "description": "lower limit of settled date"}, {"name": "settledDateTo", "in": "query", "type": "string", "description": "upper limit of settled date"}, {"name": "source", "in": "query", "type": "array", "description": "Payment source (e.g. Razorpay)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "amountPaidFrom", "in": "query", "type": "number", "description": "lower limit of payment amount"}, {"name": "amountPaidTo", "in": "query", "type": "number", "description": "Upper limit of payment amount"}, {"name": "paymentMethod", "in": "query", "type": "array", "description": "Method of payment, e.g. card, netbanking", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "paymentReference", "in": "query", "type": "array", "description": "Payment reference ID in Payment Gateway", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "status", "in": "query", "type": "array", "description": "PaymentStatus", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "accountId", "in": "query", "type": "array", "description": "PG Account ID", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "createdAtStart", "in": "query", "type": "string", "description": "Date on which this payment was created in Valyx. Please input in YYYY-MM-DD format. Will fetch payments created in Valyx on or after this date."}, {"name": "createdAtEnd", "in": "query", "type": "string", "description": "Date on which this payment was created in Valyx. Please input in YYYY-MM-DD format. Will fetch payments created in Valyx on or before this date."}], "tags": ["pg"]}}, "/pg/payments/method": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_pg_fetch_payment_methods", "tags": ["pg"]}}, "/pg/payments/reference": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_pg_fetch_payment_reference", "parameters": [{"name": "search", "in": "query", "type": "string", "required": true}], "tags": ["pg"]}}, "/pg/payments/source": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_pg_fetch_sources", "tags": ["pg"]}}, "/pg/payments/summary/filter": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PaymentSearchSummaryModel"}}}, "operationId": "get_pg_payment_summary_filter", "parameters": [{"name": "paymentDateFrom", "in": "query", "type": "string", "description": "Starting date for payment search"}, {"name": "paymentDateTo", "in": "query", "type": "string", "description": "Ending date for payment search"}, {"name": "settledDateFrom", "in": "query", "type": "string", "description": "lower limit of settled date"}, {"name": "settledDateTo", "in": "query", "type": "string", "description": "upper limit of settled date"}, {"name": "source", "in": "query", "type": "array", "description": "Payment source (e.g. Razorpay)", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "amountPaidFrom", "in": "query", "type": "number", "description": "lower limit of payment amount"}, {"name": "amountPaidTo", "in": "query", "type": "number", "description": "Upper limit of payment amount"}, {"name": "paymentMethod", "in": "query", "type": "array", "description": "Method of payment, e.g. card, netbanking", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "paymentReference", "in": "query", "type": "array", "description": "Payment reference ID in Payment Gateway", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "status", "in": "query", "type": "array", "description": "PaymentStatus", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "accountId", "in": "query", "type": "array", "description": "PG Account ID", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["pg"]}}, "/pg/payouts": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_pg_payout_fetch", "tags": ["pg"]}}, "/pg/recon": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_pg_recon_fetch", "tags": ["pg"]}}, "/pg/refresh/{app_type}": {"parameters": [{"name": "app_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ThirdPartyOAuthModelResponseModel"}}}, "operationId": "get_pg_auth_token_refresh", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PGTokenRefreshRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["pg"]}}, "/placeholder": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetPlaceholderApiResponseModel"}}}, "operationId": "get_placeholder_main", "parameters": [{"name": "id", "in": "query", "type": "string", "required": true, "description": "Placeholder ID is required"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["placeholder"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPlaceholderApiResponseModel"}}}, "operationId": "post_placeholder_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddPlaceholderApiModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["placeholder"]}}, "/placeholder/all": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetAllPlaceholdersApiResponseModel"}}}, "operationId": "get_all_placeholders", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["placeholder"]}}, "/placeholder/credits": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetAllPlaceholdersApiResponseModel"}}}, "operationId": "get_credit_placeholders", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["placeholder"]}}, "/placeholder/summary/{customer_id}": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PostedPlaceholdersSummaryReponseModel"}}}, "operationId": "get_placeholders_summary", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["placeholder"]}}, "/plan": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PlansListApiResponse"}}}, "operationId": "get_get_plan", "parameters": [{"description": "company ID query parameter", "name": "companyId", "type": "string", "in": "query"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["plan"]}}, "/plan/active": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ActivePlanApiResponse"}}}, "operationId": "get_active_plan", "parameters": [{"name": "financialYear", "in": "query", "type": "integer", "required": true, "description": "Financial year is required."}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["plan"]}}, "/plan/financialYear": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPlanForFinancialYearResponse"}}}, "operationId": "post_financial_year_plan", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddPlanForFinancialYearRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["plan"]}}, "/posting/availableToPost/credits/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PostingSummaryApiResponseModel"}}}, "operationId": "get_available_to_post_credits_summary", "parameters": [{"name": "periodStartDate", "in": "query", "type": "string", "description": "Start date of the period for which transactions are fetched"}, {"name": "periodEndDate", "in": "query", "type": "string", "description": "End date of the period for which transactions are fetched"}, {"name": "bankAccountIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "categories", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "postingStatus", "in": "query", "type": "array", "description": "Posting status for which transactions are fetched", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "narrationLike", "in": "query", "type": "string", "description": "Narration matching for which transactions are fetched"}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of credit"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of credit"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/credit": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountCreditApiDataResponseModel"}}}, "operationId": "get_posting_credit", "parameters": [{"name": "id", "in": "query", "type": "string", "description": "Bank account transaction ID"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/credit/bulk": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPostingBulkApiResponseModel"}}}, "operationId": "post_credit_bulk_postings", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateBulkCreditPostingRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/credit/{bank_account_transaction_id}": {"parameters": [{"name": "bank_account_transaction_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchCreditPostingApiResponseModel"}}}, "operationId": "get_posting_credit_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/credits": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountCreditsListApiPaginatedResponseModel"}}}, "operationId": "get_posting_credits", "parameters": [{"name": "bankAccountIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "categories", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "placeholderId", "in": "query", "type": "string"}, {"name": "isPostedToInvoice", "in": "query", "type": "boolean"}, {"name": "periodStartDate", "in": "query", "type": "string", "description": "Start date of the period for which transactions are fetched"}, {"name": "periodEndDate", "in": "query", "type": "string", "description": "End date of the period for which transactions are fetched"}, {"name": "postingStatus", "in": "query", "type": "array", "description": "Posting status for which transactions are fetched", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "narrationLike", "in": "query", "type": "string", "description": "Narration matching for which transactions are fetched"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}, {"name": "notInInvoice", "in": "query", "type": "array", "description": "Credits posted to these particular invoices will be excluded", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "postingStartDate", "in": "query", "type": "string", "description": "Start date of the period for which posted  transactions are fetched"}, {"name": "postingEndDate", "in": "query", "type": "string", "description": "Start date of the period for which posted transactions are fetched"}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of credit"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of credit"}, {"name": "customerId", "in": "query", "type": "array", "description": "Customer Ids for which posted credit ledger is required", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/credits/export": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_posting_credits_export", "parameters": [{"name": "bankAccountIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "categories", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "placeholderId", "in": "query", "type": "string"}, {"name": "isPostedToInvoice", "in": "query", "type": "boolean"}, {"name": "periodStartDate", "in": "query", "type": "string", "description": "Start date of the period for which transactions are fetched"}, {"name": "periodEndDate", "in": "query", "type": "string", "description": "End date of the period for which transactions are fetched"}, {"name": "postingStartDate", "in": "query", "type": "string", "description": "Start date of the period for which transactions are fetched"}, {"name": "postingEndDate", "in": "query", "type": "string", "description": "End date of the period for which transactions are fetched"}, {"name": "postingStatus", "in": "query", "type": "array", "description": "Posting status for which transactions are fetched", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "narrationLike", "in": "query", "type": "string", "description": "Narration matching for which transactions are fetched"}, {"name": "notInInvoice", "in": "query", "type": "array", "description": "Credits posted to these particular invoices will be excluded", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of credit"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of credit"}], "tags": ["posting"]}}, "/posting/credits/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PostingSummaryApiResponseModel"}}}, "operationId": "get_posting_credits_summary", "parameters": [{"name": "bankAccountIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "categories", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "placeholderId", "in": "query", "type": "string"}, {"name": "isPostedToInvoice", "in": "query", "type": "boolean"}, {"name": "periodStartDate", "in": "query", "type": "string", "description": "Start date of the period for which transactions are fetched"}, {"name": "periodEndDate", "in": "query", "type": "string", "description": "End date of the period for which transactions are fetched"}, {"name": "postingStatus", "in": "query", "type": "array", "description": "Posting status for which transactions are fetched", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "narrationLike", "in": "query", "type": "string", "description": "Narration matching for which transactions are fetched"}, {"name": "notInInvoice", "in": "query", "type": "array", "description": "Credits posted to these particular invoices will be excluded", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of credit"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of credit"}, {"name": "customerId", "in": "query", "type": "array", "description": "Customer Ids for which posted credit ledger is required", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "postingStartDate", "in": "query", "type": "string", "description": "Start date of the period for which posted  transactions are fetched"}, {"name": "postingEndDate", "in": "query", "type": "string", "description": "Start date of the period for which posted transactions are fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/customer/{customer_id}": {"parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerPostingsApiResponseModel"}}}, "operationId": "get_customer_posting", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/delete/{posting_id}": {"parameters": [{"name": "posting_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPostingApiResponseModel"}}}, "operationId": "post_posting_update", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/history/credit/{bank_account_transaction_id}": {"parameters": [{"name": "bank_account_transaction_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchPostingHistoryApiResponseModel"}}}, "operationId": "get_posting_history_by_bank_account_transaction_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/history/invoice/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchPostingHistoryApiResponseModel"}}}, "operationId": "get_posting_history_by_invoice_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/history/{posting_id}": {"parameters": [{"name": "posting_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchPostingHistoryApiResponseModel"}}}, "operationId": "get_posting_history_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/invoice/bulk": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPostingBulkApiResponseModel"}}}, "operationId": "post_invoice_bulk_postings", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreatePostingModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/invoice/{invoice_id}": {"parameters": [{"name": "invoice_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchInvoicePostingApiResponseModel"}}}, "operationId": "get_posting_invoice_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/invoices": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_posting_invoices", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Sort invoices by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "page number of result to be fetched"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "number of entries per page"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "notInCredit", "in": "query", "type": "array", "description": "Invoices posted to these particular credits will be excluded", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "postingStartDate", "in": "query", "type": "string", "description": "Start date of the period for which posted invoices are fetched"}, {"name": "postingEndDate", "in": "query", "type": "string", "description": "Start date of the period for which posted invoices are fetched"}], "tags": ["posting"]}}, "/posting/invoices/export": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_posting_invoices_export", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}], "tags": ["posting"]}}, "/posting/invoices/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PostingSummaryApiResponseModel"}}}, "operationId": "get_posting_invoices_summary", "parameters": [{"name": "invoiceStatus", "in": "query", "type": "array", "description": "list of invoice statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, {"name": "paymentStatus", "in": "query", "type": "array", "description": "list of payment statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PAID", "UNPAID", "PARTIALLY_PAID"]}, {"name": "invoiceAcceptanceStatus", "in": "query", "type": "array", "description": "list of invoice acceptance statuses to filter by", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, {"name": "tag", "in": "query", "type": "array", "description": "list of tag key-value pair to filter by", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "customerIds", "in": "query", "type": "string", "description": "List of customer IDs"}, {"name": "ownerIds", "in": "query", "type": "string", "description": "List of owner IDs"}, {"name": "buyerIds", "in": "query", "type": "array", "description": "List of buyer IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "sort", "in": "query", "type": "string", "description": "Invoices support sorting by invoice date. Passing 'invoiceDate' sorts ascending. To reverse the order, prefix with a hyphen.", "enum": ["invoiceDate", "-invoiceDate"]}, {"name": "amountType", "in": "query", "type": "string", "description": "Amount type filter", "enum": ["TOTAL", "OUTSTANDING", "PAID", "ADJUSTED"]}, {"name": "amountMin", "in": "query", "type": "number", "description": "Minimum amount of the invoice amount type"}, {"name": "amountMax", "in": "query", "type": "number", "description": "Maximum amount of the invoice amount type"}, {"name": "dateType", "in": "query", "type": "string", "description": "DateType type filter", "enum": ["INVOICE_DATE", "DUE_DATE", "PROMISE_TO_PAY_DATE"]}, {"name": "startDate", "in": "query", "type": "string", "description": "start date of the invoice for date type"}, {"name": "endDate", "in": "query", "type": "string", "description": "end date of the invoice for date type"}, {"name": "onlyFetchNonZero", "in": "query", "type": "boolean", "description": "should return invoices that have non zero amount type"}, {"name": "invoiceNumber", "in": "query", "type": "string", "description": "invoice number"}, {"name": "internalInvoiceIds", "in": "query", "type": "array", "description": "invoice ids", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "hasAttachment", "in": "query", "type": "string", "description": "should return invoices that have attachments (true/false)"}, {"name": "attachmentPurpose", "in": "query", "type": "array", "description": "attachment purpose to search by (based on hasAttachment)", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, {"name": "postingStartDate", "in": "query", "type": "string", "description": "Start date of the period for which posted invoices are fetched"}, {"name": "postingEndDate", "in": "query", "type": "string", "description": "Start date of the period for which posted invoices are fetched"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/markCreditsAsReversed": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MarkCreditsAsReversedApiResponseModel"}}}, "operationId": "post_posting_credit_reversal_by_id", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MarkAsCreditsAsReversedOrUnreversedRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/markCreditsAsUnreversed": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MarkCreditsAsReversedApiResponseModel"}}}, "operationId": "post_posting_credit_unreversal_by_id", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MarkAsCreditsAsReversedOrUnreversedRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/posting/roundOff/invoices": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddPostingBulkApiResponseModel"}}}, "operationId": "post_round_off_invoices", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkRoundOffInvoicesUnderThresholdRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["posting"]}}, "/ratecard": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardResponseModel"}}}, "operationId": "post_create_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateRateCardRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/bulk": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardListResponseModel"}}}, "operationId": "post_bulk_upsert_rate_cards", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkUpsertRateCardsRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/delete/{ratecard_id}": {"parameters": [{"name": "ratecard_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MarkRateCardDefaultRequestModel"}}}, "operationId": "delete_delete_rate_card", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/feeComponent/fetch/{fee_component_id}": {"parameters": [{"name": "fee_component_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchRateCardsResponseModel"}}}, "operationId": "get_fetch_all_rate_card", "parameters": [{"name": "contractId", "in": "query", "type": "string", "description": "If passed will return all the ratecards available for a contract"}, {"name": "showEmptyCombinations", "in": "query", "type": "string", "description": "If false will return only the combinations of tags that have at least one ratecard", "default": "false"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/markDefault": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardResponseModel"}}}, "operationId": "post_mark_default_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MarkRateCardDefaultRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/test": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TestRateCardResponseModel"}}}, "operationId": "post_test_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TestRateCardRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/update/{ratecard_id}": {"parameters": [{"name": "ratecard_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCardResponseModel"}}}, "operationId": "post_update_rate_card", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateRateCardRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/ratecard/{rate_card_id}": {"parameters": [{"name": "rate_card_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateCard"}}}, "operationId": "get_fetch_rate_card", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["ratecard"]}}, "/raw/data": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_raw_data_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AnyJSON"}}], "tags": ["raw"]}}, "/raw/data/greatestId": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_raw_data_greatest_id_api", "parameters": [{"name": "companyId", "in": "query", "type": "string", "required": true}], "tags": ["raw"]}}, "/razorpay/auth": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_razorpay_auth", "tags": ["razorpay"]}}, "/suggestions/withId/{model_name}/{field_name}": {"parameters": [{"name": "model_name", "in": "path", "required": true, "type": "string"}, {"name": "field_name", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_suggestions_with_id", "parameters": [{"name": "like", "in": "query", "type": "string", "required": true, "description": "initial few characters for the field"}], "tags": ["suggestions"]}}, "/suggestions/{model_name}/{field_name}": {"parameters": [{"name": "model_name", "in": "path", "required": true, "type": "string"}, {"name": "field_name", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_suggestions", "parameters": [{"name": "like", "in": "query", "type": "string", "required": true, "description": "initial few characters for the field"}], "tags": ["suggestions"]}}, "/tickets": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Ticket"}}}, "operationId": "get_tickets", "parameters": [{"name": "ticketId", "in": "query", "type": "string", "required": true}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}, "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetTicketDetailsApiResponseMmodel"}}}, "operationId": "post_tickets", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTicketApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/reasons": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TicketReasonsResponseModel"}}}, "operationId": "get_get_ticket_reasons", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/search": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_tickets_by_filters", "parameters": [{"name": "page", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "ticketStatus", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["OPEN", "IN_PROGRESS", "WAITING_ON_CUSTOMER", "BLOCKED", "CLOSED"]}, {"name": "ticketType", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["INVOICE_DISPUTE"]}, {"name": "customerId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "invoiceId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "assigneeId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "reason", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "title", "in": "query", "type": "string"}, {"name": "description", "in": "query", "type": "string"}, {"name": "createdDateFrom", "in": "query", "type": "string"}, {"name": "createdDateTo", "in": "query", "type": "string"}, {"name": "updatedDateFrom", "in": "query", "type": "string"}, {"name": "updatedDateTo", "in": "query", "type": "string"}], "tags": ["tickets"]}}, "/tickets/statuses": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TicketStatusResponseModel"}}}, "operationId": "get_get_ticket_statuses", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/types": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TicketTypesResponseModel"}}}, "operationId": "get_get_ticket_types", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/update": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteTicketApiResponseModel"}}}, "operationId": "post_ticket_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateTicket"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/{ticket_id}": {"parameters": [{"name": "ticket_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteTicketApiResponseModel"}}}, "operationId": "delete_ticket_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/{ticket_id}/attachment/upload": {"parameters": [{"name": "ticket_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteTicketApiResponseModel"}}}, "operationId": "post_ticket_attachment_file_upload", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tickets/{ticket_id}/attachment/{attachment_id}": {"parameters": [{"name": "ticket_id", "in": "path", "required": true, "type": "string"}, {"name": "attachment_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteTicketApiResponseModel"}}}, "operationId": "delete_ticket_attachment_file_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["tickets"]}}, "/tool/posting/bulk/file": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Route for handling bulk posting sample file download", "description": "This route provides an endpoint to download a sample CSV file for bulk posting.\nThe file is generated based on the company ID associated with the authenticated user.\n\nMethods:\n    get: Handles GET requests to generate and return the sample CSV file.\n\nDecorators:\n    @authenticate_user_with_company: Ensures that the user is authenticated and associated with a company.\n\nAttributes:\n    company_id (str): The ID of the company associated with the authenticated user.\n    file (io.BytesIO): The generated CSV file for bulk posting.\n\nReturns:\n    Response: A Flask response object containing the CSV file as an attachment.", "operationId": "get_bulk_posting_sample_file_route", "tags": ["tool"]}}, "/tool/posting/bulk/upload": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "API endpoint for bulk posting file upload", "description": "This endpoint allows users to upload a file for bulk posting. The file is processed\nasynchronously in a separate thread, ensuring that the request remains non-blocking.\n\nDecorators:\n    @authenticate_user_with_company: Ensures the user is authenticated and associated with a valid company.\n\nMethods:\n    post(): Handles the file upload and initiates asynchronous processing.\n\nHandles POST requests for bulk posting file uploads.\n\nValidates the presence of a file in the request, reads the file content, and processes\nthe file in a separate thread to ensure non-blocking behavior.\n\nReturns:\n    Tuple[Dict[str, Any], int]: A tuple containing the response dictionary and HTTP status code.\n\nResponse Codes:\n    400: If no file is present in the request or if the filename is empty.\n    200: If the file is successfully submitted for processing.", "operationId": "post_bulk_posting_file_upload", "tags": ["tool"]}}, "/upiQrCode/customerDetails": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_customer_details_from_narration", "parameters": [{"name": "narration", "in": "query", "type": "string", "required": true, "description": "Bank account narration generated from payment done via QR code generated by Valyx."}], "tags": ["upiQrCode"]}}, "/upiQrCode/generateLink/customer": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_get_customer_upi_qr_link", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCustomerUpiQrLinkApiRequestModel"}}], "tags": ["upiQrCode"]}}, "/upiQrCode/generateQr": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_get_upi_qr_code", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateUpiQrCodeApiRequestModel"}}], "tags": ["upiQrCode"]}}, "/upiQrCode/generateQr/customer": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_get_customer_upi_qr_code", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCustomerUpiQrCodeApiRequestModel"}}], "tags": ["upiQrCode"]}}, "/urlShortener": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateShortUrlApiResponseModel"}}}, "operationId": "post_url_shortener_route", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateShortUrlApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["urlShortener"]}}, "/usage": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "post_add_usage", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateUsageAPIRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usage"]}}, "/usage/bulk": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "post_add_usage_bulk", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BulkUsageUpsertionRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usage"]}}, "/usage/customer/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_customer_fetch_usages", "parameters": [{"name": "encodedData", "in": "query", "type": "string", "required": true, "description": "EncodedData with the payload dict to fetch the billing report"}, {"name": "transactionDateFrom", "in": "query", "type": "string", "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "description": "To date of filter"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}], "tags": ["usage"]}}, "/usage/delete/filter": {"delete": {"responses": {"200": {"description": "Success"}}, "operationId": "delete_delete_usage_filter", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteUsageRequest"}}], "tags": ["usage"]}}, "/usage/delete/{event_id}": {"parameters": [{"name": "event_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "delete_delete_usage", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usage"]}}, "/usage/fetch/{event_id}": {"parameters": [{"name": "event_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "get_fetch_usage", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usage"]}}, "/usage/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_usage_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}], "tags": ["usage"]}}, "/usage/grouped/feeComponent/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_grouped_usage_fc_wise_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}], "tags": ["usage"]}}, "/usage/grouped/filter": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_grouped_usage_filters", "parameters": [{"name": "transactionDateFrom", "in": "query", "type": "string", "required": true, "description": "From date of filter"}, {"name": "transactionDateTo", "in": "query", "type": "string", "required": true, "description": "To date of filter"}, {"name": "customerId", "in": "query", "type": "string", "description": "Customer ID of the customer"}, {"name": "contractNumber", "in": "query", "type": "string"}, {"name": "contractId", "in": "query", "type": "string"}, {"name": "usageReferenceId", "in": "query", "type": "string"}, {"name": "feeComponentName", "in": "query", "type": "string"}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "groupId", "in": "query", "type": "string"}, {"name": "groupUsageId", "in": "query", "type": "string"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}], "tags": ["usage"]}}, "/usage/summary": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageSummaryResponseModel"}}}, "operationId": "get_usage_summary", "parameters": [{"name": "billingReportId", "in": "query", "type": "string", "required": true}, {"name": "feeComponentId", "in": "query", "type": "string"}, {"name": "usageCycleStartDate", "in": "query", "type": "string"}, {"name": "usageCycleEndDate", "in": "query", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usage"]}}, "/usage/update/{usage_id}": {"parameters": [{"name": "usage_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageResponseModel"}}}, "operationId": "post_update_usage", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateUsageRequestModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usage"]}}, "/usage/upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_usage_upload_excel_file", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UsageUploadRequest"}}], "tags": ["usage"]}}, "/usage/upload/sample": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_fetch_sample_usage_upload_excel_file", "parameters": [{"name": "usageDriverIds", "in": "query", "type": "array", "required": true, "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "feeComponentTagIds", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}], "tags": ["usage"]}}, "/usageDriver": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageDriverResponseModel"}}}, "operationId": "post_add_usage_driver", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateUsageDriverQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/usageDriver/delete/{usage_driver_id}": {"parameters": [{"name": "usage_driver_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageDriverResponseModel"}}}, "operationId": "delete_delete_usage_driver", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/usageDriver/filter": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PaginatedResponse"}}}, "operationId": "get_filter_usage_driver", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Name of the usage driver"}, {"name": "description", "in": "query", "type": "string", "description": "Description of the usage driver"}, {"name": "unit", "in": "query", "type": "string", "description": "Unit of the usage driver"}, {"name": "productId", "in": "query", "type": "string", "description": "ID of the product"}, {"name": "pageNumber", "in": "query", "type": "integer", "required": true}, {"name": "pageSize", "in": "query", "type": "integer", "required": true}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/usageDriver/product": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductResponseModel"}}}, "operationId": "post_create_product", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateProductQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/usageDriver/product/delete/{product_id}": {"parameters": [{"name": "product_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductResponseModel"}}}, "operationId": "delete_delete_product", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/usageDriver/product/fetch": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Product"}}}, "operationId": "get_fetch_product_names", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/usageDriver/update/{usage_driver_id}": {"parameters": [{"name": "usage_driver_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsageDriverResponseModel"}}}, "operationId": "post_update_usage_driver", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateUsageDriverQueryModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["usageDriver"]}}, "/user/attachPan": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserAttachPanApiResponse"}}}, "summary": "Attach PAN to a user", "description": "This API will be called to attach PAN to an already existing user who wants to create a new company.", "operationId": "post_user_pan", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserAttachPanApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/authenticate": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_user_auth", "tags": ["user"]}}, "/user/changeCompany": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_user_switch_company", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserCompanySwitchRequestModel"}}], "tags": ["user"]}}, "/user/details": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserDetailsApiResponse"}}}, "operationId": "get_user_details", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/emailSignatureImage/upload": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_upload_user_email_signature_image", "tags": ["user"]}}, "/user/emailSignatureText": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_user_email_signature", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserUpdateEmailSignatureTextApiRequestModel"}}], "tags": ["user"]}}, "/user/forgotPassword": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ForgotPasswordApiResponse"}}}, "operationId": "post_forgot_password", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ForgotPasswordApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/login": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/LoginUserApiResponse"}}}, "operationId": "post_user_login", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/LoginUserApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/logout": {"post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_user_sign_out", "tags": ["user"]}}, "/user/panDetails": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PanDetailsApiResponse"}}}, "operationId": "get_user_pan_details", "parameters": [{"name": "pan", "in": "query", "type": "string", "required": true, "description": "PAN of the user"}, {"name": "invitationCode", "in": "query", "type": "string", "required": true, "description": "Invite code"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/register": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RegisterUserApiResponse"}}}, "operationId": "post_users", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddUserApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/resetPassword": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ResetPasswordApiResponse"}}}, "operationId": "post_reset_password", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResetPasswordApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/user/suggestions": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserSuggestionApiResponse"}}}, "operationId": "get_user_suggestions", "parameters": [{"name": "emailContains", "in": "query", "type": "string", "required": true, "description": "Enter email for suggestions"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["user"]}}, "/wab/recipients/suggestions": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_wab_recipient_suggestions", "parameters": [{"name": "query", "in": "query", "type": "string", "required": true, "description": "(Required) At least three letters required (without wild cards)"}], "tags": ["wab"]}}, "/wab/send": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "Handles POST requests to send manual wab messages for a company", "description": "Steps:\n1. Extract `company_id` and `user_id` from the request context.\n2. Parse the request data into a `SendWabMessageRequestModel` object.\n3. Process and send wab message using the `SendWabService`.\n4. Log activity for each successfully sent wab message using `ActivityService`.\n\nReturns:\n    A tuple containing:\n    - A dictionary with success or error messages.\n    - HTTP status code (200 for success, appropriate error code otherwise).\n\nRaises:\n    - `ValueError`: If the request data is invalid.\n    - `RuntimeError`: If wab message processing or sending fails.", "operationId": "post_send_wab_message", "parameters": [{"name": "requestData", "in": "formData", "type": "string", "required": true, "description": "Request data sent as a json"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["wab"]}}, "/wab/template/placeholders": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetWabTemplatePlaceholdersAPIResponseModel"}}}, "operationId": "get_fetch_wab_template_placeholders", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["wab"]}}, "/wab/template/{template_id}/preview": {"parameters": [{"name": "template_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetWabTemplatePreviewAPIResponseModel"}}}, "operationId": "get_fetch_wab_template_preview", "parameters": [{"name": "customerId", "in": "query", "type": "string", "required": true, "description": "Customer ID"}, {"name": "whatsappAccountId", "in": "query", "type": "string", "required": true, "description": "WhatsApp Account ID"}, {"name": "invoices", "in": "query", "type": "array", "description": "List of invoice IDs", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "templateVariables", "in": "query", "type": "string", "description": "Template variables as JSON string (e.g., {\"name\": \"jello\", \"age\": \"30\"})"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["wab"]}}, "/wab/webhook": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_event_webhook", "tags": ["wab"]}, "post": {"responses": {"200": {"description": "Success"}}, "operationId": "post_event_webhook", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WebhookApiEventModel"}}], "tags": ["wab"]}}, "/wab/{company_id}/accounts": {"parameters": [{"name": "company_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GetWabCompaniesAPIResponseModel"}}}, "summary": "Fetches all Whatsapp accounts for a company", "description": "Returns:\n    List of objects containing the whatsapp account name and  id.", "operationId": "get_fetch_wab_companies", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["wab"]}}, "/wab/{whatsapp_account_id}/fetchTemplates": {"parameters": [{"name": "whatsapp_account_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchWabTemplatesAPIResponseModel"}}}, "operationId": "get_fetch_wab_templates", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["wab"]}}, "/workflow/action/delete/{workflow_action_id}": {"parameters": [{"name": "workflow_action_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteWorkflowModelSuccessResponse"}}}, "operationId": "delete_workflow_action_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/action/email": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_email_workflow_action_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateEmailWorkflowActionModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/action/email/update/{workflow_action_id}": {"parameters": [{"name": "workflow_action_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_email_workflow_action_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateEmailWorkflowActionModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/action/goto": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_goto_workflow_action_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateGoToWorkflowActionModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/action/goto/update/{workflow_action_id}": {"parameters": [{"name": "workflow_action_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_goto_workflow_action_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateGoToWorkflowActionModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/action/{workflow_action_id}": {"parameters": [{"name": "workflow_action_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WorkflowActionFetchResponseModel"}}}, "operationId": "get_workflow_action_fetch", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/condition": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_create_condition", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/condition/delete/{workflow_condition_id}": {"parameters": [{"name": "workflow_condition_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteWorkflowModelSuccessResponse"}}}, "operationId": "delete_workflow_condition_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/condition/update/{workflow_condition_id}": {"parameters": [{"name": "workflow_condition_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateWorkflowModelSuccessResponse"}}}, "operationId": "post_update_condition", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/condition/wait": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_create_date_condition", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateDateConditionQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/condition/wait/update/{workflow_condition_id}": {"parameters": [{"name": "workflow_condition_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateWorkflowModelSuccessResponse"}}}, "operationId": "post_update_date_condition", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateDateCondition"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/condition/{workflow_condition_id}": {"parameters": [{"name": "workflow_condition_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WorkflowActionFetchResponseModel"}}}, "operationId": "get_workflow_condition_fetch", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/create": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_workflow_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateWorkflowQueryModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/currentState/": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FetchResponseModel"}}}, "operationId": "get_workflow_invoice_state", "parameters": [{"name": "invoiceId", "in": "query", "type": "string"}, {"name": "workflowId", "in": "query", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/deactivate/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "get_workflow_deactivate", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/delete/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteWorkflowModelSuccessResponse"}}}, "operationId": "delete_workflow_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/dryrun-result/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_workflow_dryrun_result", "tags": ["workflow"]}}, "/workflow/dryrun/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_workflow_dryrun", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/execute/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "get_workflow_execute", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/initiate": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddTriggerAndExitStateSuccessResponseModel"}}}, "operationId": "post_trigger_and_exit_workflow_state_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/InitiateWorkflowStateRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/invoice/execute": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_workflow_execute_invoice", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WorkflowExecutionRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/pause/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "get_workflow_pause", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/publish/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "get_workflow_publish", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/search": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_get_all_workflows", "parameters": [{"name": "page", "in": "query", "type": "integer", "required": true, "description": "page number of result to be fetched"}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "number of entries per page"}], "tags": ["workflow"]}}, "/workflow/state/action-only": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_action_only_workflow_state_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateActionOnlyWorkflowStateRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/action-only/update/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_action_only_workflow_state_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateWorkflowState"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/conditional": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_conditional_workflow_state_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateConditionalWorkflowStateRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/conditional/update/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_conditional_workflow_state_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateWorkflowState"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/delete/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteWorkflowModelSuccessResponse"}}}, "operationId": "delete_workflow_state_delete", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/exit/update/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_exit_workflow_state_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateWorkflowState"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/trigger/update/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_trigger_workflow_state_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateWorkflowState"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/wait": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_wait_workflow_state_create", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateWaitWorkflowStateRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/wait/update/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_wait_workflow_state_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateWorkflowState"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/state/{workflow_state_id}": {"parameters": [{"name": "workflow_state_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WorkflowActionFetchResponseModel"}}}, "operationId": "get_workflow_state_fetch", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/update/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_workflow_update", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateWorkflowQueryModel_Request"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/verify-completion/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWorkflowModelSuccessResponse"}}}, "operationId": "post_workflow_verify_completion", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/VerifyWorkflowCompletionRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/workflow/{workflow_id}": {"parameters": [{"name": "workflow_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WorkflowActionFetchResponseModel"}}}, "operationId": "get_workflow_fetch", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["workflow"]}}, "/writeoff": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWriteOffApiResponseModel"}}}, "summary": "add write off for invoice", "operationId": "post_write_off_main", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AddWriteOffApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/approve": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWriteOffApiResponseModel"}}}, "summary": "bulk approval of write off requests", "operationId": "post_write_off_approve", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WriteOffStatusUpdateApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/cancel": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWriteOffApiResponseModel"}}}, "summary": "bulk cancellation of write off requests", "operationId": "post_write_off_cancel", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WriteOffStatusUpdateApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/filter": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WriteOffsListApiPaginatedResponseModel"}}}, "operationId": "get_write_off_filter", "parameters": [{"name": "customerId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "approvalStatus", "in": "query", "type": "array", "description": "Approval status of the the write off.", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, {"name": "invoiceStartDate", "in": "query", "type": "string", "description": "Invoice date should be after start date"}, {"name": "requesterIds", "in": "query", "type": "array", "description": "User id of the requester", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "invoiceEndDate", "in": "query", "type": "string", "description": "Invoice date should be before end date"}, {"name": "writeOffStartDate", "in": "query", "type": "string", "description": "Write off request should be after start date"}, {"name": "writeOffEndDate", "in": "query", "type": "string", "description": "Write off request should be before end date"}, {"name": "page", "in": "query", "type": "integer", "required": true, "description": "Page number for pagination."}, {"name": "pageSize", "in": "query", "type": "integer", "required": true, "description": "Page size for pagination."}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/invoice": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/InvoiceWriteOffsListApiPaginatedResponseModel"}}}, "operationId": "get_invoice_write_off_filter", "parameters": [{"name": "invoiceId", "in": "query", "type": "string", "required": true}, {"name": "approvalStatus", "in": "query", "type": "array", "description": "Approval status of the the write off.", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/isApprover": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WriteOffsIsApproverApiResponseModel"}}}, "operationId": "get_write_off_is_approver", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/reject": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AddWriteOffApiResponseModel"}}}, "summary": "bulk rejection of write off requests", "operationId": "post_write_off_reject", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WriteOffStatusUpdateApiRequestModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/requester/suggestions": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RequesterSuggestionsApiResponseModel"}}}, "operationId": "get_write_off_requester_suggestions", "parameters": [{"name": "nameContains", "in": "query", "type": "string", "description": "Enter name for suggestions"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}, "/writeoff/summary/filter": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WriteOffSummaryResponseModel"}}}, "operationId": "get_write_off_summary", "parameters": [{"name": "customerId", "in": "query", "type": "array", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "approvalStatus", "in": "query", "type": "array", "description": "Approval status of the the write off.", "items": {"type": "string"}, "collectionFormat": "multi", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, {"name": "invoiceStartDate", "in": "query", "type": "string", "description": "Invoice date should be after start date"}, {"name": "requesterIds", "in": "query", "type": "array", "description": "User id of the requester", "items": {"type": "string"}, "collectionFormat": "multi"}, {"name": "invoiceEndDate", "in": "query", "type": "string", "description": "Invoice date should be before end date"}, {"name": "writeOffStartDate", "in": "query", "type": "string", "description": "Write off request should be after start date"}, {"name": "writeOffEndDate", "in": "query", "type": "string", "description": "Write off request should be before end date"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["writeoff"]}}}, "info": {"title": "API", "version": "1.0"}, "produces": ["application/json"], "consumes": ["application/json"], "tags": [{"name": "analytics", "description": "APIs for analytics"}, {"name": "category", "description": "APIs for categories"}, {"name": "budget", "description": "APIs for CRUD budget data"}, {"name": "plan", "description": "APIs for plans"}, {"name": "cashflow", "description": "APIs for handling cashflow"}, {"name": "bankAccountTransaction", "description": "APIs for CRUD BAT data"}, {"name": "bankAccount", "description": "APIs for CRUD Bank Account data"}, {"name": "invitation", "description": "APIs for invites"}, {"name": "invoiceTag", "description": "APIs for invoice tags"}, {"name": "customerTag", "description": "APIs for customer tags"}, {"name": "user", "description": "APIs for Users"}, {"name": "company", "description": "APIs for company"}, {"name": "customer", "description": "APIs for customers"}, {"name": "invoice", "description": "APIs for invoices"}, {"name": "members", "description": "APIs for Users"}, {"name": "categorysuggestion", "description": "APIs for generating category suggestions for bank statement narrations"}, {"name": "contacts", "description": "APIs for contacts"}, {"name": "cron", "description": "APIs for cron jobs"}, {"name": "owner", "description": "APIs for owners"}, {"name": "razorpay", "description": "APIs for razorpay integration"}, {"name": "email", "description": "APIs for email"}, {"name": "creditTerms", "description": "APIs for credit terms"}, {"name": "hognose", "description": "APIs for category predictions and suggestions"}, {"name": "posting", "description": "APIs for posting"}, {"name": "placeholder", "description": "APIs for placeholders used for posting."}, {"name": "writeoff", "description": "APIs for write off"}, {"name": "workflow", "description": "APIs for workflows"}, {"name": "emailTemplates", "description": "APIs for email templates"}, {"name": "ireckoner", "description": "APIs for importing data from Ireckoner"}, {"name": "ageing", "description": "APIs for ageing analysis"}, {"name": "attachments", "description": "APIs for handling attachments"}, {"name": "activity", "description": "APIs for activity"}, {"name": "creditNote", "description": "APIs for credit notes"}, {"name": "feeComponent", "description": "APIs for Fee Components"}, {"name": "ratecard", "description": "APIs for Rate Cards"}, {"name": "usage", "description": "APIs for usages"}, {"name": "contract", "description": "APIs for contracts"}, {"name": "upiQrCode", "description": "APIs for UPI QR code"}, {"name": "payment", "description": "APIs for loading payment page"}, {"name": "erp", "description": "APIs for erp integration"}, {"name": "ledger", "description": "APIs for ledger"}, {"name": "urlShortener", "description": "APIs for shortening URLs"}, {"name": "pg", "description": "APIs for pg integration"}, {"name": "feeComponentTag", "description": "APIs for Fee Component Tag"}, {"name": "external", "description": "External APIs"}, {"name": "external", "description": "External APIs"}, {"name": "customerLedger", "description": "APIs for Customer Ledger"}, {"name": "adjustment", "description": "APIs for adjustments"}, {"name": "tool", "description": "APIs for tools like posting through csv, etc."}, {"name": "billingReport", "description": "APIs for billing reports"}, {"name": "usageDriver", "description": "APIs for Usage Drivers"}, {"name": "billing", "description": "External Billing APIs"}, {"name": "external", "description": "External APIs"}, {"name": "buyer", "description": "Buyer portal routes"}, {"name": "tickets", "description": "APIs for ticketing system"}, {"name": "customerPortal", "description": "APIs for customer portal"}, {"name": "comment", "description": "APIs for comments"}, {"name": "suggestions", "description": "APIs for getting suggestions for a field"}, {"name": "raw", "description": "APIs for raw data push integration"}, {"name": "wab", "description": "APIs for wab message"}, {"name": "callLogs", "description": "APIs for call logs"}, {"name": "files", "description": "APIs for fetching stored files"}, {"name": "external", "description": "External APIs"}, {"name": "external", "description": "External APIs"}], "definitions": {"AnalyticsApiDataRequest": {"properties": {"splits": {"type": "array", "items": {"type": "string", "description": "splits"}}, "metrics": {"type": "array", "items": {"type": "string", "description": "metrics"}}, "filters": {"type": "array", "items": {"$ref": "#/definitions/AnalyticsApiDataRequestfilters"}}, "startIndex": {"type": "integer", "description": "startIndex"}, "endIndex": {"type": "integer", "description": "endIndex"}, "isCumulative": {"type": "boolean", "description": "isCumulative", "default": false}, "startDate": {"type": "string", "description": "startDate"}, "endDate": {"type": "string", "description": "endDate"}}, "type": "object"}, "AnalyticsApiDataRequestfilters": {"required": ["columnName"], "properties": {"columnName": {"type": "string", "description": "columnName"}, "operation": {"type": "string", "example": "EQ", "enum": ["EQ", "IN", "BETWEEN"]}, "values": {"type": "object"}}, "type": "object"}, "AnalyticsApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AnalyticsApiResponseData"}}, "type": "object"}, "AnalyticsApiResponseData": {"required": ["type"], "properties": {"type": {"type": "string", "description": "type"}, "entityType": {"type": "string", "description": "entityType"}, "totalAmounts": {"type": "array", "items": {"$ref": "#/definitions/AnalyticsApiResponseDatatotalAmounts"}}, "data": {"type": "array", "items": {"$ref": "#/definitions/AnalyticsApiResponseDatadata"}}}, "type": "object"}, "AnalyticsApiResponseDatatotalAmounts": {"required": ["amount", "metric"], "properties": {"metric": {"type": "string", "description": "metric"}, "amount": {"type": "number", "description": "amount"}}, "type": "object"}, "AnalyticsApiResponseDatadata": {"required": ["id", "key"], "properties": {"id": {"type": "string", "description": "id"}, "key": {"type": "string", "description": "key"}, "values": {"type": "array", "items": {"$ref": "#/definitions/AnalyticsApiResponseDatadatavalues"}}}, "type": "object"}, "AnalyticsApiResponseDatadatavalues": {"required": ["entityName", "value"], "properties": {"entityId": {"type": "string", "description": "entityId"}, "entityName": {"type": "string", "description": "entityName"}, "value": {"type": "number", "description": "value"}}, "type": "object"}, "AnalyticsApiRawDataRequest": {"required": ["page", "pageSize"], "properties": {"metric": {"type": "string", "example": "REVENUE", "enum": ["REVENUE", "COLLECTION", "INVOICE_DUE", "OUTSTANDING", "PROMISE_TO_PAY", "UNAPPLIED_CREDIT_NOTES", "UNAPPLIED_PAYMENTS", "UNBILLED_ACTUAL", "UNBILLED_TOPLINE", "UNBILLED_PROVISION", "UNBILLED_UNRAISED"]}, "filters": {"type": "array", "items": {"$ref": "#/definitions/AnalyticsApiRawDataRequestfilters"}}, "page": {"type": "integer", "description": "page", "default": 1}, "pageSize": {"type": "integer", "description": "pageSize", "default": 20}}, "type": "object"}, "AnalyticsApiRawDataRequestfilters": {"required": ["columnName"], "properties": {"columnName": {"type": "string", "description": "columnName"}, "operation": {"type": "string", "example": "EQ", "enum": ["EQ", "IN", "BETWEEN"]}, "values": {"type": "object"}}, "type": "object"}, "AddCategoryRequest": {"required": ["companyId", "value"], "properties": {"companyId": {"type": "string", "description": "ID of company"}, "value": {"type": "string", "description": "string value/label of the category"}}, "type": "object"}, "AddCategoryResponse": {"properties": {"error": {"type": "string", "description": "error code"}, "message": {"type": "string", "description": "message for API response"}, "data": {"$ref": "#/definitions/AddCategoryResponseData"}}, "type": "object"}, "AddCategoryResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateReceivableDaysApiRequestModel": {"properties": {"categoryId": {"type": "string"}, "receivableDays": {"type": "integer"}}, "type": "object"}, "UpdateReceivableDaysApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UpdateReceivableDaysApiResponseData"}}, "type": "object"}, "UpdateReceivableDaysApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "GetCompanyCategoriesResponse": {"properties": {"error": {"type": "string", "description": "error code"}, "message": {"type": "string", "description": "message for API response"}, "data": {"type": "array", "items": {"$ref": "#/definitions/GetCompanyCategoriesResponseData"}}}, "type": "object"}, "GetCompanyCategoriesResponseData": {"properties": {"id": {"type": "string"}, "value": {"type": "string"}}, "type": "object"}, "AddCategoryRelationshipRequest": {"required": ["childCategoryId", "companyId", "parentCategoryId"], "properties": {"parentCategoryId": {"type": "string", "description": "ID of parent category"}, "childCategoryId": {"type": "string", "description": "ID of child category"}, "companyId": {"type": "string", "description": "ID of company"}}, "type": "object"}, "AddCategoryRelationshipResponse": {"properties": {"error": {"type": "string", "description": "error code"}, "message": {"type": "string", "description": "message for API response"}, "data": {"$ref": "#/definitions/AddCategoryRelationshipResponseData"}}, "type": "object"}, "AddCategoryRelationshipResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "ResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BudgetsAndRelationsData"}}, "type": "object"}, "BudgetsAndRelationsData": {"properties": {"planName": {"type": "string"}, "financialYear": {"type": "number"}, "budgetsAndRelations": {"type": "array", "items": {"$ref": "#/definitions/BudgetAndRelations"}}}, "type": "object"}, "BudgetAndRelations": {"properties": {"categoryId": {"type": "string"}, "children": {"type": "array", "items": {"$ref": "#/definitions/Category"}}, "categoryValue": {"type": "string"}, "budget": {"type": "array", "items": {"$ref": "#/definitions/BudgetItem"}}}, "type": "object"}, "Category": {"properties": {"categoryId": {"type": "string"}, "categoryValue": {"type": "string"}, "budget": {"type": "array", "items": {"$ref": "#/definitions/BudgetItem"}}, "children": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}, "type": "object"}, "BudgetItem": {"properties": {"id": {"type": "string"}, "planId": {"type": "string"}, "value": {"type": "integer"}, "periodStartDate": {"type": "string"}, "periodEndDate": {"type": "string"}, "month": {"type": "integer"}, "quarter": {"type": "integer"}, "frequency": {"type": "string"}}, "type": "object"}, "UpdateBudgetApiModel": {"properties": {"categoryBudgetId": {"type": "string"}, "value": {"type": "number"}}, "type": "object"}, "UpdateBudgetApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UpdateBudgetApiResponseData"}}, "type": "object"}, "UpdateBudgetApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "PlansListApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PlansListModel"}}, "type": "object"}, "PlansListModel": {"properties": {"plans": {"type": "array", "items": {"$ref": "#/definitions/PlanModel"}}}, "type": "object"}, "PlanModel": {"properties": {"id": {"type": "string"}, "companyId": {"type": "string"}, "name": {"type": "string"}, "periodStartDate": {"type": "string", "format": "date"}, "periodEndDate": {"type": "string", "format": "date"}}, "type": "object"}, "AddPlanForFinancialYearRequest": {"required": ["companyId", "financialYear"], "properties": {"companyId": {"type": "string", "description": "ID of the company for which plan is to be added"}, "financialYear": {"type": "integer", "description": "Financial year of plan. If financial year is 2024, plan will be added for 1-Apr-2023 to 30-Mar-2024"}, "name": {"type": "string", "description": "Name/Alias of plan"}}, "type": "object"}, "AddPlanForFinancialYearResponse": {"properties": {"error": {"type": "string", "description": "error code"}, "message": {"type": "string", "description": "message for API response"}, "data": {"$ref": "#/definitions/AddPlanForFinancialYearResponseData"}}, "type": "object"}, "AddPlanForFinancialYearResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "ActivePlanApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ActivePlanApiResponseData"}}, "type": "object"}, "ActivePlanApiResponseData": {"properties": {"id": {"type": "string"}, "companyId": {"type": "string"}, "name": {"type": "string"}, "financialYear": {"type": "integer"}}, "type": "object"}, "CategoryGraphApiResponse": {"properties": {"error": {"type": "object", "description": "Error details"}, "message": {"type": "string", "description": "Message"}, "data": {"description": "Data details", "allOf": [{"$ref": "#/definitions/CategoryGraphApiValue"}]}}, "type": "object"}, "CategoryGraphApiValue": {"properties": {"date": {"type": "string", "description": "Date of the planned value"}, "totalClosingBalance": {"type": "number", "description": "Closing balance for the date"}, "banks": {"type": "array", "items": {"description": "List of values", "allOf": [{"$ref": "#/definitions/BankClosingBalance"}]}}}, "type": "object"}, "BankClosingBalance": {"properties": {"closingBalance": {"type": "number", "description": "Closing balance for the planned value"}, "bankId": {"type": "string", "description": "Bank Id"}}, "type": "object"}, "SummaryGraphApiResponse": {"properties": {"error": {"type": "object", "description": "Error details"}, "message": {"type": "string", "description": "Message"}, "data": {"description": "Data details", "allOf": [{"$ref": "#/definitions/SummaryGraphApiData"}]}}, "type": "object"}, "SummaryGraphApiData": {"properties": {"plannedValues": {"type": "array", "items": {"description": "List of values", "allOf": [{"$ref": "#/definitions/SummaryGraphApiValue"}]}}, "actualValues": {"type": "array", "items": {"description": "List of values", "allOf": [{"$ref": "#/definitions/SummaryGraphApiValue"}]}}}, "type": "object"}, "SummaryGraphApiValue": {"properties": {"date": {"type": "string", "description": "Date of the transaction"}, "creditAmount": {"type": "number", "description": "Credit amount for the transaction"}, "debitAmount": {"type": "number", "description": "Debit amount for the transaction"}, "closingBalance": {"type": "number", "description": "Closing balance for the transaction"}, "openingBalance": {"type": "number", "description": "Opening balance for the transaction"}}, "type": "object"}, "DetailsApiResponse": {"properties": {"error": {"type": "object", "description": "Error details"}, "message": {"type": "string", "description": "Message"}, "data": {"type": "array", "items": {"description": "List of actuals", "allOf": [{"$ref": "#/definitions/CategoryActuals"}]}}}, "type": "object"}, "CategoryActuals": {"properties": {"id": {"type": "string"}, "name": {"type": "string", "description": "Category label"}, "actuals": {"type": "array", "items": {"description": "List of actuals", "allOf": [{"$ref": "#/definitions/ActualTransaction"}]}}, "children": {"type": "array", "items": {"description": "List of actuals", "allOf": [{"$ref": "#/definitions/CategoryActuals"}]}}}, "type": "object"}, "ActualTransaction": {"properties": {"dateRange": {"$ref": "#/definitions/DateRange"}, "amount": {"type": "number", "description": "Amount"}, "isCredit": {"type": "boolean", "description": "Is credit"}}, "type": "object"}, "DateRange": {"properties": {"startDate": {"type": "string", "description": "Start date"}, "endDate": {"type": "string", "description": "End date"}}, "type": "object"}, "SummaryApiResponse": {"properties": {"error": {"type": "object", "description": "Error details"}, "message": {"type": "string", "description": "Message"}, "data": {"description": "Transaction summary", "allOf": [{"$ref": "#/definitions/TransactionSummaryModel"}]}}, "type": "object"}, "TransactionSummaryModel": {"properties": {"openingBalance": {"type": "number", "description": "Opening balance"}, "closingBalance": {"type": "number", "description": "Closing balance"}, "totalDebits": {"type": "number", "description": "Total debit"}, "totalCredits": {"type": "number", "description": "Total credit"}, "dateRange": {"description": "Date range", "allOf": [{"$ref": "#/definitions/SummaryApiDate"}]}}, "type": "object"}, "SummaryApiDate": {"properties": {"startDate": {"type": "string", "description": "Start date"}, "endDate": {"type": "string", "description": "End date"}}, "type": "object"}, "BankAccountTransactionListApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PaginatedResponseModel"}}, "type": "object"}, "PaginatedResponseModel": {"properties": {"totalDocs": {"type": "integer"}, "docs": {"type": "array", "items": {"$ref": "#/definitions/WriteOffsListApiResponse"}}, "hasNext": {"type": "boolean"}, "hasPrev": {"type": "boolean"}, "pageNumber": {"type": "integer"}, "pageSize": {"type": "integer"}, "totalPages": {"type": "integer"}, "prevPageNumber": {"type": "integer"}, "nextPageNumber": {"type": "integer"}}, "type": "object"}, "WriteOffsListApiResponse": {"required": ["customerName", "invoiceDate", "invoiceId", "requestId", "writeOffAmount"], "properties": {"requestId": {"type": "string", "description": "requestId"}, "writeOffAmount": {"type": "number", "description": "writeOffAmount"}, "approvalStatus": {"type": "string", "example": "PENDING", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, "invoiceId": {"type": "string", "description": "invoiceId"}, "customerName": {"type": "string", "description": "customerName"}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}, "requestedBy": {"type": "string", "description": "requestedBy"}, "createdBy": {"type": "string", "description": "createdBy"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceTotal": {"type": "number", "description": "invoiceTotal"}, "createdAt": {"type": "string", "description": "createdAt"}, "comment": {"type": "array", "items": {"$ref": "#/definitions/WriteOffsListApiResponsecomment"}}}, "type": "object"}, "WriteOffsListApiResponsecomment": {"properties": {"userId": {"type": "string", "description": "userId"}, "userName": {"type": "string", "description": "userName"}, "verdict": {"type": "string", "example": "PENDING", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, "comment": {"type": "string", "description": "comment"}, "timestamp": {"type": "object"}}, "type": "object"}, "bankAccountTransactionsDateRangeApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BankAccountTransactionDateRangeApiResponseData"}}, "type": "object"}, "BankAccountTransactionDateRangeApiResponseData": {"properties": {"bankAccountDateRanges": {"type": "array", "items": {"$ref": "#/definitions/BankAccountTransactionDateRange_BankAccount_ApiResponseData"}}, "companyDateRange": {"$ref": "#/definitions/BankAccountTransactionDateRange_Company_ApiResponseData"}}, "type": "object"}, "BankAccountTransactionDateRange_BankAccount_ApiResponseData": {"properties": {"bankAccountId": {"type": "string"}, "startDate": {"type": "string", "format": "date"}, "endDate": {"type": "string", "format": "date"}}, "type": "object"}, "BankAccountTransactionDateRange_Company_ApiResponseData": {"properties": {"startDate": {"type": "string", "format": "date"}, "endDate": {"type": "string", "format": "date"}, "startDateFinancialYear": {"type": "integer"}, "endDateFinancialYear": {"type": "integer"}}, "type": "object"}, "UpdateBatCategoryApiModelList": {"properties": {"data": {"type": "array", "items": {"$ref": "#/definitions/UpdateBatCategoryApiModel"}}}, "type": "object"}, "UpdateBatCategoryApiModel": {"properties": {"categoryId": {"type": "string"}, "bankAccountTransactionId": {"type": "string"}}, "type": "object"}, "UpdateTransactionCategoryApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UpdateTransactionCategoryApiResponseData"}}, "type": "object"}, "UpdateTransactionCategoryApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CustomerNameSuggestionUpdateAPIRequestModel": {"properties": {"positive": {"type": "array", "items": {"type": "string", "description": "positive"}}, "negative": {"type": "array", "items": {"type": "string", "description": "negative"}}}, "type": "object"}, "BankAccountTransactionResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BankAccountTransactionResponseData"}}, "type": "object"}, "BankAccountTransactionResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CustomerSuggestionAPIRequestModel": {"required": ["bankName", "narration"], "properties": {"narration": {"type": "string", "description": "narration"}, "bankName": {"type": "string", "description": "bankName"}}, "type": "object"}, "CustomerSuggestionAPIResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CustomerSuggestionAPIResponseModelData"}}, "type": "object"}, "CustomerSuggestionAPIResponseModelData": {"properties": {"customers": {"type": "array", "items": {"$ref": "#/definitions/CustomerSuggestionAPIResponseModelDatacustomers"}}}, "type": "object"}, "CustomerSuggestionAPIResponseModelDatacustomers": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "name"}, "id": {"type": "string", "description": "id"}, "updatedBy": {"type": "string", "description": "updatedBy"}}, "type": "object"}, "BankAccountListApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BankAccountsData"}}, "type": "object"}, "BankAccountsData": {"properties": {"bankAccounts": {"type": "array", "items": {"$ref": "#/definitions/BankAccountListApiResponse"}}}, "type": "object"}, "BankAccountListApiResponse": {"properties": {"id": {"type": "string", "description": "ID of the bank account"}, "name": {"type": "string", "description": "Name of the bank account"}}, "type": "object"}, "AddInviteApiRequestModel": {"required": ["email"], "properties": {"email": {"type": "string", "description": "Email of invitee"}, "companyId": {"type": "string", "description": "ID of the company for which the invitation is sent."}}, "type": "object"}, "SendInviteApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/InvitationApiResponseData"}}, "type": "object"}, "InvitationApiResponseData": {"properties": {"invitationId": {"type": "string"}}, "type": "object"}, "ValidateInviteApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ValidateInviteApiResponseData"}}, "type": "object"}, "ValidateInviteApiResponseData": {"properties": {"isValid": {"type": "boolean"}, "isCompanyAttached": {"type": "boolean"}, "skipSignup": {"$ref": "#/definitions/SkipSignUpResponseModel"}}, "type": "object"}, "SkipSignUpResponseModel": {"properties": {"canSkip": {"type": "boolean"}, "companyId": {"type": "string"}}, "type": "object"}, "InvitesOfCompanyResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ActiveInvitesInCompanyApiResponseData"}}, "type": "object"}, "ActiveInvitesInCompanyApiResponseData": {"properties": {"invitations": {"type": "array", "items": {"$ref": "#/definitions/InviteResponseModel"}}}, "type": "object"}, "InviteResponseModel": {"properties": {"invitationId": {"type": "string", "description": "Id of the invite"}, "inviteLink": {"type": "string", "description": "Id of the invite"}, "createdAt": {"type": "string", "description": "Creation date time"}, "email": {"type": "string", "description": "Email of invitee"}}, "type": "object"}, "RevokeInviteApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/RevokeInviteApiResponseData"}}, "type": "object"}, "RevokeInviteApiResponseData": {"properties": {"invitationId": {"type": "string"}}, "type": "object"}, "AddInvoiceTagApiModel": {"required": ["invoiceId", "tagKey", "tagValue"], "properties": {"tagKey": {"type": "string", "description": "tagKey"}, "tagValue": {"type": "string", "description": "tagValue"}, "invoiceId": {"type": "string", "description": "invoiceId"}}, "type": "object"}, "AddCustomerTagApiModel": {"required": ["customerId", "tagKey", "tagValue"], "properties": {"tagKey": {"type": "string", "description": "tagKey"}, "tagValue": {"type": "string", "description": "tagValue"}, "customerId": {"type": "string", "description": "customerId"}}, "type": "object"}, "AddCustomerTagApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddCustomerApiResponseData"}}, "type": "object"}, "AddCustomerApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "AddUserApiRequestModel": {"required": ["invitationCode", "password"], "properties": {"firstName": {"type": "string", "description": "First name of the user"}, "lastName": {"type": "string", "description": "Last name of the user"}, "password": {"type": "string", "description": "Password of the user"}, "invitationCode": {"type": "string", "description": "Invitation Code sent to the user"}, "pan": {"type": "string", "description": "PAN number of the user"}}, "type": "object"}, "RegisterUserApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/RegisterUserApiResponseData"}}, "type": "object"}, "RegisterUserApiResponseData": {"properties": {"userId": {"type": "string"}, "status": {"type": "string"}, "companyId": {"type": "string"}}, "type": "object"}, "LoginUserApiRequestModel": {"required": ["email", "password"], "properties": {"email": {"type": "string", "description": "Email of the user"}, "password": {"type": "string", "description": "Password of the user"}}, "type": "object"}, "LoginUserApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/LoginUserApiResponseData"}}, "type": "object"}, "LoginUserApiResponseData": {"properties": {"userId": {"type": "string"}, "companyId": {"type": "string"}, "status": {"type": "string"}}, "type": "object"}, "UserDetailsApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UserDetailsApiResponseData"}}, "type": "object"}, "UserDetailsApiResponseData": {"properties": {"userId": {"type": "string", "description": "id of the user"}, "firstName": {"type": "string", "description": "First name of the user"}, "lastName": {"type": "string", "description": "Last name of the user"}, "email": {"type": "string", "description": "Email of the user"}, "emailSignatureText": {"type": "string", "description": "Email Signature text of the user"}}, "type": "object"}, "UserAttachPanApiRequestModel": {"required": ["pan"], "properties": {"pan": {"type": "string", "description": "PAN (Permanent Account number) of the user"}}, "type": "object"}, "UserAttachPanApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UserAttachPanApiResponseData"}}, "type": "object"}, "UserAttachPanApiResponseData": {"properties": {"attached": {"type": "boolean"}, "status": {"type": "string"}}, "type": "object"}, "UserUpdateEmailSignatureTextApiRequestModel": {"required": ["emailSignatureText"], "properties": {"emailSignatureText": {"type": "string", "description": "Email Signature Text"}}, "type": "object"}, "PanDetailsApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PanDetailsApiResponseData"}}, "type": "object"}, "PanDetailsApiResponseData": {"properties": {"firstName": {"type": "string"}, "lastName": {"type": "string"}}, "type": "object"}, "UserCompanySwitchRequestModel": {"required": ["companyId"], "properties": {"companyId": {"type": "string", "description": "Company ID mapped to the user"}}, "type": "object"}, "ForgotPasswordApiRequestModel": {"required": ["email"], "properties": {"email": {"type": "string", "description": "Email of the user"}}, "type": "object"}, "ForgotPasswordApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ForgotPasswordApiResponseData"}}, "type": "object"}, "ForgotPasswordApiResponseData": {"properties": {"success": {"type": "boolean"}}, "type": "object"}, "ResetPasswordApiRequestModel": {"required": ["confirmPassword", "newPassword", "token"], "properties": {"token": {"type": "string", "description": "Password reset token"}, "newPassword": {"type": "string", "description": "New password"}, "confirmPassword": {"type": "string", "description": "Confirm new password"}}, "type": "object"}, "ResetPasswordApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ResetPasswordApiResponseData"}}, "type": "object"}, "ResetPasswordApiResponseData": {"properties": {"success": {"type": "boolean"}}, "type": "object"}, "UserSuggestionApiResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/UserSuggestionsModelResponseData"}}}, "type": "object"}, "UserSuggestionsModelResponseData": {"required": ["email", "id", "name"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "email": {"type": "string", "description": "email"}}, "type": "object"}, "AddCompanyApiModel": {"required": ["cin"], "properties": {"cin": {"type": "string"}}, "type": "object"}, "GetCompaniesApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/LastBatDateUpdateData"}}, "type": "object"}, "LastBatDateUpdateData": {"properties": {"date": {"type": "string", "format": "date"}}, "type": "object"}, "AddCompanyApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddCompanyApiResponse"}}, "type": "object"}, "AddCompanyApiResponse": {"properties": {"id": {"type": "string", "description": "ID of the company"}, "name": {"type": "string", "description": "Name of the company"}, "status": {"type": "string", "description": "Onboarding Status"}}, "type": "object"}, "UpdateLastBatUpdateDateApiModel": {"required": ["companyId", "lastBatUpdate"], "properties": {"lastBatUpdate": {"type": "string", "format": "date"}, "companyId": {"type": "string"}}, "type": "object"}, "VpaListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/VpaListResponseDataModel"}}, "type": "object"}, "VpaListResponseDataModel": {"properties": {"vpaList": {"type": "array", "items": {"$ref": "#/definitions/VpaDataModel"}}}, "type": "object"}, "VpaDataModel": {"properties": {"vpa": {"type": "string"}, "bankAccountId": {"type": "string"}, "accountNumber": {"type": "string"}, "ifscCode": {"type": "string"}, "accountHolderName": {"type": "string"}}, "type": "object"}, "CompanyLogoUrlResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CompanyLogoUrlResponseDataModel"}}, "type": "object"}, "CompanyLogoUrlResponseDataModel": {"properties": {"logoUrl": {"type": "string"}}, "type": "object"}, "AddInvoiceNumberConfigModel": {"required": ["number", "prefix"], "properties": {"prefix": {"type": "string"}, "number": {"type": "string"}, "suffix": {"type": "string"}}, "type": "object"}, "CompanyInvoiceNumberConfigResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CompanyInvoiceNumberConfigResponseData"}}, "type": "object"}, "CompanyInvoiceNumberConfigResponseData": {"required": ["number", "prefix", "suffix"], "properties": {"prefix": {"type": "string", "description": "prefix"}, "number": {"type": "string", "description": "number"}, "suffix": {"type": "string", "description": "suffix"}}, "type": "object"}, "UpdateCompanyDetailsRequest_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateCompanyDetailsRequest_FieldsUpdateModel"}}, "type": "object"}, "UpdateCompanyDetailsRequest_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateCompanyDetailsRequest"}}, "type": "object"}, "UpdateCompanyDetailsRequest": {"properties": {"taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateCompanyDetailsRequesttaxIdentifiers"}}, "registeredAddress": {"$ref": "#/definitions/UpdateCompanyDetailsRequestregisteredAddress"}, "logoUrl": {"type": "string", "description": "logoUrl"}, "authorizedSignatoryUrl": {"type": "string", "description": "authorizedSignatoryUrl"}, "activeBankAccountId": {"type": "string", "description": "activeBankAccountId"}, "invoiceNumberConfig": {"$ref": "#/definitions/UpdateCompanyDetailsRequestinvoiceNumberConfig"}, "invoiceRoundingConfig": {"$ref": "#/definitions/UpdateCompanyDetailsRequestinvoiceRoundingConfig"}}, "type": "object"}, "UpdateCompanyDetailsRequesttaxIdentifiers": {"required": ["taxIdentifierValue"], "properties": {"taxIdentifierType": {"type": "string", "example": "GST", "enum": ["GST"]}, "taxIdentifierValue": {"type": "string", "description": "taxIdentifierValue"}}, "type": "object"}, "UpdateCompanyDetailsRequestregisteredAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "UpdateCompanyDetailsRequestinvoiceNumberConfig": {"required": ["number", "prefix", "suffix"], "properties": {"prefix": {"type": "string", "description": "prefix"}, "number": {"type": "string", "description": "number"}, "suffix": {"type": "string", "description": "suffix"}}, "type": "object"}, "UpdateCompanyDetailsRequestinvoiceRoundingConfig": {"properties": {"roundingType": {"type": "string", "example": "HALF_UP", "enum": ["HALF_UP", "HALF_DOWN", "HALF_EVEN", "UP", "DOWN"]}, "nearest": {"type": "number", "description": "nearest"}}, "type": "object"}, "CompanyResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CompanyResponseData"}}, "type": "object"}, "CompanyResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CreateCustomerQueryModel": {"required": ["buyerId", "gstin"], "properties": {"buyerId": {"type": "string", "description": "Buyer ID"}, "gstin": {"type": "string", "description": "GSTIN"}, "name": {"type": "string", "description": "Name of the customer"}, "pan": {"type": "string", "description": "PAN"}, "registeredAddress": {"description": "Registered Address", "allOf": [{"$ref": "#/definitions/Address"}]}, "stateCode": {"type": "string", "description": "State Code"}, "countryCode": {"type": "string", "description": "Country Code", "default": "IN"}, "primaryPhone": {"type": "string", "description": "Primary Phone"}, "primaryEmail": {"type": "string", "description": "Primary Email"}}, "type": "object"}, "Address": {"properties": {"line1": {"type": "string"}, "line2": {"type": "string"}, "state": {"type": "string"}, "city": {"type": "string"}, "country": {"type": "string"}, "zipCode": {"type": "string"}}, "type": "object"}, "AddCustomerApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddCustomerApiResponseData"}}, "type": "object"}, "CustomerPaginatedListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PaginatedResponseModel"}}, "type": "object"}, "UpdateCustomer": {"properties": {"customer": {"$ref": "#/definitions/UpdateCustomerModel"}}, "type": "object"}, "UpdateCustomerModel": {"properties": {"taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateCustomerModeltaxIdentifiers"}}, "name": {"type": "string", "description": "name"}, "alias": {"type": "string", "description": "alias"}, "registeredAddress": {"$ref": "#/definitions/UpdateCustomerModelregisteredAddress"}, "addresses": {"type": "array", "items": {"$ref": "#/definitions/UpdateCustomerModeladdresses"}}, "contactsDataUpdate": {"type": "array", "items": {"$ref": "#/definitions/UpdateCustomerModelcontactsDataUpdate"}}, "contactsDataDelete": {"type": "array", "items": {"$ref": "#/definitions/UpdateCustomerModelcontactsDataDelete"}}, "internalStakeholdersDataUpdate": {"type": "array", "items": {"$ref": "#/definitions/UpdateCustomerModelinternalStakeholdersDataUpdate"}}, "internalStakeholdersDataDelete": {"type": "array", "items": {"$ref": "#/definitions/UpdateCustomerModelinternalStakeholdersDataDelete"}}, "stateCode": {"type": "string", "description": "stateCode"}, "countryCode": {"type": "string", "description": "countryCode", "default": "IN"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "tagsUpdate": {"type": "object"}, "tagsDelete": {"type": "object"}}, "type": "object"}, "UpdateCustomerModeltaxIdentifiers": {"required": ["value"], "properties": {"value": {"type": "string", "description": "value"}, "type": {"type": "string", "example": "GSTIN", "enum": ["GSTIN", "PAN", "VAT", "OTHER"]}}, "type": "object"}, "UpdateCustomerModelregisteredAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "UpdateCustomerModeladdresses": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "UpdateCustomerModelcontactsDataUpdate": {"required": ["name", "role"], "properties": {"name": {"type": "string", "description": "name"}, "role": {"type": "string", "description": "role"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}}, "type": "object"}, "UpdateCustomerModelcontactsDataDelete": {"properties": {"name": {"type": "string", "description": "name"}, "role": {"type": "string", "description": "role"}}, "type": "object"}, "UpdateCustomerModelinternalStakeholdersDataUpdate": {"required": ["name", "primaryEmail", "role"], "properties": {"name": {"type": "string", "description": "name"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}}, "type": "object"}, "UpdateCustomerModelinternalStakeholdersDataDelete": {"properties": {"name": {"type": "string", "description": "name"}, "role": {"type": "string", "description": "role"}}, "type": "object"}, "CustomerByIdApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/Customer"}}, "type": "object"}, "Customer": {"properties": {"id": {"type": "string"}, "pan": {"type": "string"}, "name": {"type": "string"}, "gstin": {"type": "string"}, "registeredAddress": {"$ref": "#/definitions/Address"}, "addresses": {"type": "array", "items": {"$ref": "#/definitions/Address"}}, "country": {"type": "string"}, "buyerId": {"type": "string"}, "stateCode": {"type": "string"}, "countryCode": {"type": "string"}, "companyId": {"type": "string"}, "primaryPhone": {"type": "string"}, "primaryEmail": {"type": "string"}, "contactsData": {"type": "array", "items": {"$ref": "#/definitions/CustomerContactModel"}}, "ownersData": {"type": "array", "items": {"$ref": "#/definitions/CustomerOwnerModel"}}, "alias": {"type": "string"}, "tags": {"type": "object"}, "taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/TaxIdentifierModel"}}}, "type": "object"}, "CustomerContactModel": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}, "primaryPhone": {"type": "string"}, "primaryEmail": {"type": "string"}, "role": {"type": "string"}}, "type": "object"}, "CustomerOwnerModel": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}, "primaryPhone": {"type": "string"}, "primaryEmail": {"type": "string"}, "role": {"type": "string"}, "isRegistered": {"type": "boolean"}}, "type": "object"}, "TaxIdentifierModel": {"properties": {"type": {"type": "string"}, "value": {"type": "string"}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseData"}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseData": {"properties": {"due": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseDatadue"}, "overdue": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseDataoverdue"}, "paid": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseDatapaid"}, "total": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseDatatotal"}, "adjusted": {"$ref": "#/definitions/CustomerInvoicesSummaryByIdApiResponseDataadjusted"}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseDatadue": {"required": ["amount", "count"], "properties": {"count": {"type": "integer", "description": "count", "default": 0}, "amount": {"type": "number", "description": "amount", "default": 0}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseDataoverdue": {"required": ["amount", "count"], "properties": {"count": {"type": "integer", "description": "count", "default": 0}, "amount": {"type": "number", "description": "amount", "default": 0}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseDatapaid": {"required": ["amount", "count"], "properties": {"count": {"type": "integer", "description": "count", "default": 0}, "amount": {"type": "number", "description": "amount", "default": 0}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseDatatotal": {"required": ["amount", "count"], "properties": {"count": {"type": "integer", "description": "count", "default": 0}, "amount": {"type": "number", "description": "amount", "default": 0}}, "type": "object"}, "CustomerInvoicesSummaryByIdApiResponseDataadjusted": {"required": ["amount", "count"], "properties": {"count": {"type": "integer", "description": "count", "default": 0}, "amount": {"type": "number", "description": "amount", "default": 0}}, "type": "object"}, "CustomerCreditNotesSummaryByIdApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CustomerCreditNotesSummaryByIdApiResponseData"}}, "type": "object"}, "CustomerCreditNotesSummaryByIdApiResponseData": {"required": ["customerId", "unappliedCreditNoteAmountForCustomer", "unappliedCreditNoteCountForCustomer"], "properties": {"customerId": {"type": "string", "description": "customerId"}, "unappliedCreditNoteAmountForCustomer": {"type": "number", "description": "unappliedCreditNoteAmountForCustomer"}, "unappliedCreditNoteCountForCustomer": {"type": "integer", "description": "unappliedCreditNoteCountForCustomer"}}, "type": "object"}, "CustomerAddressSuggestionResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/CustomerAddressSuggestionResponseData"}}}, "type": "object"}, "CustomerAddressSuggestionResponseData": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "AddCustomerSegmentQueryModel": {"properties": {"description": {"type": "string", "description": "Description for customer segment"}, "name": {"type": "string", "description": "Name of customer segment"}, "rule": {"type": "object", "description": "Rule description"}}, "type": "object"}, "GetCustomerSegmentApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/GetCustomerSegmentApiResponseData"}}, "type": "object"}, "GetCustomerSegmentApiResponseData": {"properties": {"segment": {"$ref": "#/definitions/CustomerSegmentResponseData"}}, "type": "object"}, "CustomerSegmentResponseData": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "createdBy": {"type": "object"}, "name": {"type": "object"}, "description": {"type": "object"}, "rule": {"type": "object"}, "tagKey": {"type": "object"}, "isActive": {"type": "object"}, "metaData": {"type": "object"}}, "type": "object"}, "AddCustomerSegmentApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddCustomerSegmentApiResponseData"}}, "type": "object"}, "AddCustomerSegmentApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "GetCustomerSegmentsApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/GetCustomersInSegmentApiResponseData"}}, "type": "object"}, "GetCustomersInSegmentApiResponseData": {"properties": {"customers": {"type": "object"}}, "type": "object"}, "GetSegmentWiseCustomerCountApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/GetSegmentWiseCustomerCountApiData"}}, "type": "object"}, "GetSegmentWiseCustomerCountApiData": {"properties": {"customerCount": {"type": "object"}}, "type": "object"}, "UpdateCustomerSegment": {"required": ["segmentId"], "properties": {"segmentId": {"type": "string", "description": "ID of the customer segment"}, "updates": {"$ref": "#/definitions/UpdateCustomerSegmentFieldsAndValuesModel"}}, "type": "object"}, "UpdateCustomerSegmentFieldsAndValuesModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "Values to update", "allOf": [{"$ref": "#/definitions/UpdateCustomerSegmentQueryModel"}]}}, "type": "object"}, "UpdateCustomerSegmentQueryModel": {"properties": {"name": {"type": "string"}, "description": {"type": "string"}, "rule": {"type": "object"}}, "type": "object"}, "CustomerSummaryResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CustomerSummaryModel"}}, "type": "object"}, "CustomerSummaryModel": {"properties": {"customerCount": {"type": "integer"}, "customerInvoiceAmount": {"type": "number"}, "customerInvoiceOutstandingAmount": {"type": "number"}}, "type": "object"}, "UploadCustomerAttachmentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UploadCustomerAttachmentResponseDataModel"}}, "type": "object"}, "UploadCustomerAttachmentResponseDataModel": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CreateInvoiceQueryModel": {"required": ["invoiceAdjustedAmount", "invoiceId", "invoiceNumber", "invoicePaidAmount", "invoiceSubtotal", "invoiceTotal"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceDate": {"type": "object"}, "invoiceDueDate": {"type": "object"}, "promiseToPayDate": {"type": "object"}, "invoiceSubtotal": {"type": "number", "description": "invoiceSubtotal"}, "invoiceTax": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceTax"}, "invoiceAdjustedAmount": {"type": "number", "description": "invoiceAdjustedAmount", "default": 0.0}, "invoicePaidAmount": {"type": "number", "description": "invoicePaidAmount", "default": 0.0}, "discount": {"$ref": "#/definitions/CreateInvoiceQueryModeldiscount"}, "discounts": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModeldiscounts"}}, "invoiceTotal": {"type": "number", "description": "invoiceTotal", "default": 0.0}, "invoiceAcceptanceStatus": {"type": "string", "example": "PENDING", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, "customerId": {"type": "string", "description": "customerId"}, "customerDetails": {"$ref": "#/definitions/CreateInvoiceQueryModelcustomerDetails"}, "customerName": {"type": "string", "description": "customerName"}, "invoiceType": {"type": "string", "description": "invoiceType"}, "supplyStateCode": {"type": "string", "description": "supplyStateCode"}, "placeOfSupply": {"type": "string", "description": "placeOfSupply"}, "invoiceCurrency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "lineItems": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModellineItems"}}, "referenceType": {"type": "string", "description": "referenceType"}, "referenceId": {"type": "string", "description": "referenceId"}, "referenceText": {"type": "string", "description": "referenceText"}, "eInvoiceQrCode": {"type": "string", "description": "eInvoiceQrCode"}, "irnNumber": {"type": "string", "description": "irnNumber"}, "companyId": {"type": "string", "description": "companyId"}, "tags": {"type": "object"}, "metaData": {"type": "object"}, "sort": {"type": "string", "description": "sort"}, "invoiceRoundingConfig": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceRoundingConfig"}, "prepaidAmount": {"type": "number", "description": "prepaidAmount"}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceTax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceTaxgstTax"}, "cessTax": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceTaxcessTax"}, "serviceTax": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceTaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceTaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModelinvoiceTaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceTaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceTaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceTaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceTaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceTaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModeldiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateInvoiceQueryModeldiscounts": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateInvoiceQueryModelcustomerDetails": {"required": ["buyerId", "isManuallyCreated"], "properties": {"buyerId": {"type": "string", "description": "buyerId"}, "taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModelcustomerDetailstaxIdentifiers"}}, "isManuallyCreated": {"type": "boolean", "description": "isManuallyCreated", "default": true}, "companyId": {"type": "string", "description": "companyId"}, "name": {"type": "string", "description": "name"}, "alias": {"type": "string", "description": "alias"}, "registeredAddress": {"$ref": "#/definitions/CreateInvoiceQueryModelcustomerDetailsregisteredAddress"}, "addresses": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModelcustomerDetailsaddresses"}}, "contactsData": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModelcustomerDetailscontactsData"}}, "ownersData": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModelcustomerDetailsownersData"}}, "stateCode": {"type": "string", "description": "stateCode"}, "countryCode": {"type": "string", "description": "countryCode", "default": "IN"}, "country": {"type": "string", "description": "country"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "customerContactPerson": {"type": "string", "description": "customerContactPerson"}, "tags": {"type": "object"}}, "type": "object"}, "CreateInvoiceQueryModelcustomerDetailstaxIdentifiers": {"required": ["value"], "properties": {"value": {"type": "string", "description": "value"}, "type": {"type": "string", "example": "GSTIN", "enum": ["GSTIN", "PAN", "VAT", "OTHER"]}}, "type": "object"}, "CreateInvoiceQueryModelcustomerDetailsregisteredAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateInvoiceQueryModelcustomerDetailsaddresses": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateInvoiceQueryModelcustomerDetailscontactsData": {"required": ["id", "name", "primaryEmail", "primaryPhone", "role"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}}, "type": "object"}, "CreateInvoiceQueryModelcustomerDetailsownersData": {"required": ["id", "name", "primaryEmail", "primaryPhone"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}, "isRegistered": {"type": "boolean", "description": "isRegistered", "default": false}}, "type": "object"}, "CreateInvoiceQueryModellineItems": {"required": ["subTotal", "total"], "properties": {"lineItemDetails": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemslineItemDetails"}, "subTotal": {"type": "number", "description": "subTotal", "default": 0.0}, "total": {"type": "number", "description": "total", "default": 0.0}, "tax": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemstax"}, "discount": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemsdiscount"}, "quantity": {"type": "number", "description": "quantity", "default": 1.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemslineItemDetails": {"required": ["name", "pricePerItem", "taxRate"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "number", "description": "taxRate"}, "pricePerItem": {"type": "number", "description": "pricePerItem", "default": 0.0}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "description": {"type": "string", "description": "description"}, "companyId": {"type": "string", "description": "companyId"}}, "type": "object"}, "CreateInvoiceQueryModellineItemstax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemstaxgstTax"}, "cessTax": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemstaxcessTax"}, "serviceTax": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemstaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemstaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceQueryModellineItemstaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemstaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemstaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemstaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemstaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemstaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceQueryModellineItemsdiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateInvoiceQueryModelinvoiceRoundingConfig": {"properties": {"roundingType": {"type": "string", "example": "HALF_UP", "enum": ["HALF_UP", "HALF_DOWN", "HALF_EVEN", "UP", "DOWN"]}, "nearest": {"type": "number", "description": "nearest"}}, "type": "object"}, "AddInvoiceApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddInvoiceApiResponseData"}}, "type": "object"}, "AddInvoiceApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateInvoice": {"required": ["invoiceId"], "properties": {"invoiceId": {"type": "string", "description": "ID of the invoice"}, "updates": {"$ref": "#/definitions/UpdateInvoiceFieldsAndValuesModel"}}, "type": "object"}, "UpdateInvoiceFieldsAndValuesModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "updates to invoices", "allOf": [{"$ref": "#/definitions/UpdateInvoiceQueryModel"}]}, "comments": {"description": "Comments for fields", "allOf": [{"$ref": "#/definitions/UpdateInvoiceQueryCommentModel"}]}}, "type": "object"}, "UpdateInvoiceQueryModel": {"properties": {"invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "promiseToPayDate": {"type": "string", "format": "date", "description": "promiseToPayDate"}, "invoiceSubtotal": {"type": "number", "description": "invoiceSubtotal"}, "discount": {"$ref": "#/definitions/UpdateInvoiceQueryModeldiscount"}, "invoiceTax": {"$ref": "#/definitions/UpdateInvoiceQueryModelinvoiceTax"}, "invoiceStatus": {"type": "string", "example": "OVERDUE", "enum": ["OVERDUE", "DUE", "NO_DUES", "VOID"]}, "invoiceType": {"type": "string", "description": "invoiceType"}, "referenceType": {"type": "string", "description": "referenceType"}, "referenceId": {"type": "string", "description": "referenceId"}, "referenceText": {"type": "string", "description": "referenceText"}, "irnNumber": {"type": "string", "description": "irnNumber"}, "lineItems": {"type": "array", "items": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItems"}}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}, "invoiceDueDate": {"type": "string", "format": "date", "description": "invoiceDueDate"}, "eInvoiceQrCode": {"type": "string", "description": "eInvoiceQrCode"}, "invoiceAcceptanceStatus": {"type": "string", "example": "PENDING", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}}, "type": "object"}, "UpdateInvoiceQueryModeldiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "UpdateInvoiceQueryModelinvoiceTax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/UpdateInvoiceQueryModelinvoiceTaxgstTax"}, "cessTax": {"$ref": "#/definitions/UpdateInvoiceQueryModelinvoiceTaxcessTax"}, "serviceTax": {"$ref": "#/definitions/UpdateInvoiceQueryModelinvoiceTaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/UpdateInvoiceQueryModelinvoiceTaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/UpdateInvoiceQueryModelinvoiceTaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModelinvoiceTaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModelinvoiceTaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModelinvoiceTaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModelinvoiceTaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModelinvoiceTaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItems": {"required": ["subTotal", "total"], "properties": {"lineItemDetails": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemslineItemDetails"}, "subTotal": {"type": "number", "description": "subTotal", "default": 0.0}, "total": {"type": "number", "description": "total", "default": 0.0}, "tax": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemstax"}, "discount": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemsdiscount"}, "quantity": {"type": "number", "description": "quantity", "default": 1.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemslineItemDetails": {"required": ["name", "pricePerItem", "taxRate"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "number", "description": "taxRate"}, "pricePerItem": {"type": "number", "description": "pricePerItem", "default": 0.0}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "description": {"type": "string", "description": "description"}, "companyId": {"type": "string", "description": "companyId"}}, "type": "object"}, "UpdateInvoiceQueryModellineItemstax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemstaxgstTax"}, "cessTax": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemstaxcessTax"}, "serviceTax": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemstaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemstaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/UpdateInvoiceQueryModellineItemstaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemstaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemstaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemstaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemstaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemstaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "UpdateInvoiceQueryModellineItemsdiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "UpdateInvoiceQueryCommentModel": {"properties": {"invoiceNumber": {"type": "string"}, "promiseToPayDate": {"type": "string"}, "invoiceSubtotal": {"type": "string"}, "discount": {"type": "string"}, "invoiceTax": {"type": "string"}, "invoiceStatus": {"type": "string"}, "invoiceType": {"type": "string"}, "referenceType": {"type": "string"}, "referenceId": {"type": "string"}, "referenceText": {"type": "string"}, "irnNumber": {"type": "string"}, "lineItems": {"type": "string"}, "invoiceDate": {"type": "string"}, "invoiceDueDate": {"type": "string"}, "eInvoiceQrCode": {"type": "string"}, "invoiceAcceptanceStatus": {"type": "string"}}, "type": "object"}, "UpdateInvoiceTDSModel": {"required": ["invoiceId", "tdsAmount"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "tdsAmount": {"type": "number", "description": "tdsAmount"}}, "type": "object"}, "BulkInvoiceAcceptanceStatusUpdateRequest": {"properties": {"invoiceIds": {"type": "array", "items": {"type": "string", "description": "invoiceIds"}}, "invoiceAcceptanceStatus": {"type": "string", "example": "PENDING", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, "comment": {"type": "string", "description": "comment"}}, "type": "object"}, "InvoiceBulkInvoiceAcceptanceStatusResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/InvoiceBulkInvoiceAcceptanceStatusResponseDataModel"}}, "type": "object"}, "InvoiceBulkInvoiceAcceptanceStatusResponseDataModel": {"properties": {"succeeded": {"type": "integer"}, "failed": {"type": "integer"}}, "type": "object"}, "InvoicesSummaryResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/InvoicesSummaryModel"}}, "type": "object"}, "InvoicesSummaryModel": {"properties": {"invoiceCount": {"type": "string"}, "invoiceAmount": {"type": "number"}, "invoiceOutstandingAmount": {"type": "number"}}, "type": "object"}, "UploadInvoiceAttachmentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UploadInvoiceAttachmentResponseDataModel"}}, "type": "object"}, "UploadInvoiceAttachmentResponseDataModel": {"properties": {"invoiceId": {"type": "string"}, "invoiceNumber": {"type": "string"}, "customerName": {"type": "string"}, "buyerId": {"type": "string"}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/AttachmentForInvoice"}}}, "type": "object"}, "AttachmentForInvoice": {"properties": {"filename": {"type": "string"}, "purpose": {"type": "string"}, "createdAt": {"type": "string"}}, "type": "object"}, "InvoiceAttachmentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UploadInvoiceAttachmentResponseDataModel"}}, "type": "object"}, "BulkPromiseToPayUpdateApiRequestModel": {"properties": {"promiseToPayUpdates": {"type": "array", "items": {"$ref": "#/definitions/BulkPromiseToPayUpdateApiRequestModelpromiseToPayUpdates"}}}, "type": "object"}, "BulkPromiseToPayUpdateApiRequestModelpromiseToPayUpdates": {"required": ["invoiceId", "updatedPromiseToPayDate"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "updatedPromiseToPayDate": {"type": "string", "format": "date", "description": "updatedPromiseToPayDate"}, "comment": {"type": "string", "description": "comment"}}, "type": "object"}, "InvoiceBulkPtpUpdateResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/InvoiceBulkPtpUpdateResponseDataModel"}}, "type": "object"}, "InvoiceBulkPtpUpdateResponseDataModel": {"properties": {"succeeded": {"type": "integer"}, "failed": {"type": "integer"}}, "type": "object"}, "PtpReasonRequiredResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PtpReasonRequiredResponseDataModel"}}, "type": "object"}, "PtpReasonRequiredResponseDataModel": {"properties": {"isRequired": {"type": "boolean"}}, "type": "object"}, "PtpReasonListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PtpReasonListResponseDataModel"}}, "type": "object"}, "PtpReasonListResponseDataModel": {"properties": {"reasons": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "InvoiceAttachmentValidationRequestModel": {"properties": {"invoiceIds": {"type": "array", "items": {"type": "string", "description": "invoiceIds"}}, "attachmentPurpose": {"type": "array", "items": {"type": "string", "description": "attachmentPurpose"}}}, "type": "object"}, "InvoiceAttachmentValidationResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/InvoiceAttachmentValidationResponseDataModel"}}, "type": "object"}, "InvoiceAttachmentValidationResponseDataModel": {"properties": {"isValid": {"type": "boolean"}, "missingAttachments": {"type": "object"}}, "type": "object"}, "GetMembersApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/MembersData"}}, "type": "object"}, "MembersData": {"properties": {"members": {"type": "array", "items": {"$ref": "#/definitions/MemberListApiResponse"}}}, "type": "object"}, "MemberListApiResponse": {"properties": {"userId": {"type": "string", "description": "ID of the member"}, "firstName": {"type": "string", "description": "First name of the member"}, "lastName": {"type": "string", "description": "Last name of the member"}, "email": {"type": "string", "description": "Email of the member"}}, "type": "object"}, "DefaultCategoryUpdateApiRequestModel": {"properties": {"bankAccountId": {"type": "string"}}, "type": "object"}, "DefaultCategoryUpdateApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/DefaultCategoryUpdateApiResponseData"}}}, "type": "object"}, "DefaultCategoryUpdateApiResponseData": {"required": ["bankAccountTransactionId", "categoryValue"], "properties": {"bankAccountTransactionId": {"type": "string", "description": "bankAccountTransactionId"}, "categoryValue": {"type": "string", "description": "categoryValue"}}, "type": "object"}, "CreateContactQueryModel": {"required": ["customerId", "name"], "properties": {"customerId": {"type": "string", "description": "Customer ID"}, "name": {"type": "string", "description": "Name of the Contact"}, "primaryPhone": {"type": "string", "description": "Primary Phone"}, "primaryEmail": {"type": "string", "description": "Primary Email"}, "role": {"type": "string", "description": "Role of Contact"}}, "type": "object"}, "AddContactApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddContactApiResponseData"}}, "type": "object"}, "AddContactApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateContact": {"required": ["contactId"], "properties": {"contactId": {"type": "string", "description": "ID of the contact"}, "updates": {"$ref": "#/definitions/UpdateContactFieldsAndValuesModel"}}, "type": "object"}, "UpdateContactFieldsAndValuesModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "Values to update", "allOf": [{"$ref": "#/definitions/UpdateContactQueryModel"}]}}, "type": "object"}, "UpdateContactQueryModel": {"properties": {"name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}, "contactStatus": {"type": "string"}}, "type": "object"}, "DeleteContact": {"required": ["contactId"], "properties": {"contactId": {"type": "string", "description": "ID of the contact"}}, "type": "object"}, "CreateOwnerQueryModel": {"required": ["customerId", "name"], "properties": {"name": {"type": "string", "description": "Name of the Owner"}, "customerId": {"type": "string", "description": "Customer to which Owner is to be mapped"}, "primaryPhone": {"type": "string", "description": "Primary Phone"}, "primaryEmail": {"type": "string", "description": "Primary Email"}, "role": {"type": "string", "description": "Role of Owner"}}, "type": "object"}, "GetOwnerApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CustomerOwnerModel"}}, "type": "object"}, "AddOwnerApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddOwnerApiResponseModel"}}, "type": "object"}, "DeleteOwnerQueryModel": {"required": ["customerId", "ownerId", "role"], "properties": {"ownerId": {"type": "string", "description": "ID of the owner"}, "customerId": {"type": "string", "description": "ID of the customer"}, "role": {"type": "string", "description": "Role of the customer"}}, "type": "object"}, "RemoveOwnerApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "string"}}, "type": "object"}, "OwnerSuggestionsApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/CustomerOwnerModel"}}}, "type": "object"}, "OwnerOrUserByEmailApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/CustomerOwnerModel"}}}, "type": "object"}, "UpdateOwnerRoleApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "string"}}, "type": "object"}, "EmailToggleApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "string"}}, "type": "object"}, "WriteOffEmailApprovalResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/WriteOffSummaryModel"}}, "type": "object"}, "WriteOffSummaryModel": {"properties": {"invoiceCount": {"type": "string"}, "invoiceAmount": {"type": "number"}, "writeOffTotalAmount": {"type": "number"}, "customerCount": {"type": "string"}}, "type": "object"}, "SendEmailPreviewRequestModel": {"properties": {"variables": {"type": "array", "items": {"$ref": "#/definitions/PreviewVariablesModel"}}, "to": {"type": "array", "items": {"type": "string"}}, "cc": {"type": "array", "items": {"type": "string"}}, "fromEmail": {"type": "string"}}, "type": "object"}, "PreviewVariablesModel": {"properties": {"modelType": {"type": "string"}, "name": {"type": "string"}, "identifiers": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "SendEmailRequestModel": {"required": ["body", "fromEmail", "subject", "templateId"], "properties": {"body": {"type": "string", "description": "Body for the email"}, "templateId": {"type": "string", "description": "Template id used for  the email"}, "subject": {"type": "string", "description": "Subject for the email"}, "to": {"type": "array", "items": {"type": "string", "description": "To recipient for the email"}}, "cc": {"type": "array", "items": {"type": "string"}}, "fromEmail": {"type": "string", "description": "Email id of the sender"}}, "type": "object"}, "EmailObjectResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FetchEmailObjectResponseModel"}}, "type": "object"}, "FetchEmailObjectResponseModel": {"properties": {"email": {"$ref": "#/definitions/FetchEmailResponseModel"}, "events": {"type": "array", "items": {"$ref": "#/definitions/FetchEventResponseModel"}}, "serviceProviderEvents": {"type": "array", "items": {"$ref": "#/definitions/FetchEventResponseModel"}}, "customer": {"$ref": "#/definitions/FetchEmailCustomerResponseModel"}, "replies": {"$ref": "#/definitions/FetchEmailReplyResponseModel"}, "workflowName": {"type": "string"}, "timestamp": {"type": "integer"}}, "type": "object"}, "FetchEmailResponseModel": {"required": ["fromEmail", "id", "sentBy", "subject"], "properties": {"id": {"type": "string", "description": "id"}, "emailType": {"type": "string", "example": "WRITE_OFF", "enum": ["WRITE_OFF", "INVITATION", "WORKFLOW", "MANUAL_WORKFLOW", "MANUAL_EMAIL", "BILLING", "CONTRACT", "CUSTOMER_LOGIN_LINK"]}, "fromEmail": {"type": "string", "description": "fromEmail"}, "templateType": {"type": "string", "example": "INTERNAL", "enum": ["INTERNAL", "SENDGRID"]}, "subject": {"type": "string", "description": "subject"}, "recipients": {"$ref": "#/definitions/FetchEmailResponseModelrecipients"}, "sentBy": {"type": "string", "description": "sentBy"}, "templateId": {"type": "string", "description": "templateId"}, "htmlContent": {"type": "string", "description": "htmlContent"}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/FetchEmailResponseModelattachments"}}, "emailRefId": {"type": "string", "description": "emailRefId"}}, "type": "object"}, "FetchEmailResponseModelrecipients": {"properties": {"to": {"type": "array", "items": {"type": "string", "description": "to"}}, "cc": {"type": "array", "items": {"type": "string", "description": "cc"}}, "bcc": {"type": "array", "items": {"type": "string", "description": "bcc"}}, "replyTo": {"type": "array", "items": {"type": "string", "description": "replyTo"}}}, "type": "object"}, "FetchEmailResponseModelattachments": {"required": ["attachmentId", "attachmentName"], "properties": {"attachmentId": {"type": "string", "description": "attachmentId"}, "attachmentName": {"type": "string", "description": "attachmentName"}}, "type": "object"}, "FetchEventResponseModel": {"properties": {"eventStatus": {"type": "string", "example": "NONE", "enum": ["NONE", "PARTIAL", "ALL"]}, "eventType": {"type": "string", "example": "DELIVERED", "enum": ["DELIVERED", "OPENED", "SPAMMED", "BOUNCED", "PROCESSED", "DEFERRED", "CLICK", "DROPPED", "UNSUBSCRIBE", "GROUP_UNSUBSCRIBE", "GROUP_RESUBSCRIBE"]}, "eventParticipants": {"type": "array", "items": {"$ref": "#/definitions/FetchEventResponseModeleventParticipants"}}, "lastEventTimestamp": {"type": "integer", "description": "lastEventTimestamp"}}, "type": "object"}, "FetchEventResponseModeleventParticipants": {"required": ["email", "timestamp"], "properties": {"email": {"type": "string", "description": "email"}, "timestamp": {"type": "integer", "description": "timestamp"}, "description": {"type": "string", "description": "description"}}, "type": "object"}, "FetchEmailCustomerResponseModel": {"required": ["customerId", "customerName"], "properties": {"customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}}, "type": "object"}, "FetchEmailReplyResponseModel": {"required": ["fromEmailId", "id", "mailHtml", "mailThreadHtml", "timestamp"], "properties": {"id": {"type": "string", "description": "id"}, "emailReferenceId": {"type": "string", "description": "emailReferenceId"}, "fromEmailId": {"type": "string", "description": "fromEmailId"}, "mailHtml": {"type": "string", "description": "mailHtml"}, "mailThreadHtml": {"type": "string", "description": "mailThreadHtml"}, "timestamp": {"type": "integer", "description": "timestamp"}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/FetchEmailReplyResponseModelattachments"}}, "response": {"type": "string", "description": "response"}, "toEmailList": {"type": "array", "items": {"type": "string", "description": "toEmailList"}}, "ccEmailList": {"type": "array", "items": {"type": "string", "description": "ccEmailList"}}}, "type": "object"}, "FetchEmailReplyResponseModelattachments": {"required": ["attachmentId", "attachmentName"], "properties": {"attachmentId": {"type": "string", "description": "attachmentId"}, "attachmentName": {"type": "string", "description": "attachmentName"}}, "type": "object"}, "AddTerms": {"properties": {"terms": {"type": "array", "items": {"$ref": "#/definitions/AddCreditTermModel"}}}, "type": "object"}, "AddCreditTermModel": {"required": ["description", "title"], "properties": {"title": {"type": "string", "description": "title"}, "description": {"type": "string", "description": "description"}, "terms": {"$ref": "#/definitions/AddCreditTermModelterms"}, "type": {"type": "string", "example": "PAYMENT_TERM", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, "creditTermType": {"type": "string", "example": "PAYMENT_TERM", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, "applicableFrom": {"type": "string", "format": "date", "description": "applicableFrom"}, "customerId": {"type": "string", "description": "customerId"}}, "type": "object"}, "AddCreditTermModelterms": {"properties": {"Type": {"type": "string", "example": "PAYMENT_TERM", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}}, "type": "object"}, "CreditTermsForCompaniesApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/CreditTermVariantsGroupedByType"}}}, "type": "object"}, "CreditTermVariantsGroupedByType": {"properties": {"type": {"type": "string"}, "terms": {"type": "array", "items": {"$ref": "#/definitions/CreditTermGroupedWithVariants"}}}, "type": "object"}, "CreditTermGroupedWithVariants": {"properties": {"variants": {"type": "array", "items": {"$ref": "#/definitions/CreditTermsForCompaniesModel"}}, "title": {"type": "string"}}, "type": "object"}, "CreditTermsForCompaniesModel": {"properties": {"id": {"type": "string"}, "type": {"type": "string"}, "terms": {"type": "object"}, "title": {"type": "string"}, "description": {"type": "string"}, "isDefault": {"type": "boolean"}, "customerCount": {"type": "integer"}}, "type": "object"}, "AddCreditTermApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "CreditTermByIdApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CreditTermByIdApiResponseModel"}}, "type": "object"}, "CreditTermsForCustomerApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/CreditTermsForCustomerApiResponseModel"}}}, "type": "object"}, "UpdateCreditTerm": {"required": ["creditTermId", "creditTermType"], "properties": {"creditTermId": {"type": "string", "description": "ID of the credit_term"}, "creditTermType": {"type": "string", "description": "Type of the credit_term"}, "updates": {"$ref": "#/definitions/UpdateCreditTermFieldsAndValuesModel"}}, "type": "object"}, "UpdateCreditTermFieldsAndValuesModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "Values to update", "allOf": [{"$ref": "#/definitions/UpdateCreditTermQueryModel"}]}}, "type": "object"}, "UpdateCreditTermQueryModel": {"properties": {"title": {"type": "string", "description": "title"}, "description": {"type": "string", "description": "description"}, "terms": {"$ref": "#/definitions/UpdateCreditTermQueryModelterms"}, "type": {"type": "string", "example": "PAYMENT_TERM", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, "creditTermType": {"type": "string", "example": "PAYMENT_TERM", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}, "applicableFrom": {"type": "string", "format": "date", "description": "applicableFrom"}}, "type": "object"}, "UpdateCreditTermQueryModelterms": {"properties": {"Type": {"type": "string", "example": "PAYMENT_TERM", "enum": ["PAYMENT_TERM", "MIN_GUARANTEE_TERM"]}}, "type": "object"}, "CreditTermIdAsApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CreditTermIdAsApiResponseModel"}}, "type": "object"}, "MarkCreditTermAsDefault": {"required": ["creditTermId"], "properties": {"creditTermId": {"type": "string", "description": "ID of the credit_term"}}, "type": "object"}, "RemoveCreditTermCustomerRelationship": {"required": ["creditTermId", "customerId"], "properties": {"creditTermId": {"type": "string", "description": "ID of the credit_term"}, "customerId": {"type": "string", "description": "ID of the customer"}}, "type": "object"}, "CreditTermTitleSuggestionsApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CreditTermSuggestions"}}, "type": "object"}, "CreditTermSuggestions": {"properties": {"suggestions": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "AddPostingApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddPostingApiResponseData"}}, "type": "object"}, "AddPostingApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "BankAccountCreditApiDataResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BankAccountCreditApiResponse"}}, "type": "object"}, "BankAccountCreditApiResponse": {"required": ["adjustedAmount", "bankAccountId", "category", "creditAmount", "creditUsedAmount", "id", "isReversed", "narration", "postedAmount", "remainingAmount", "transactionDate"], "properties": {"id": {"type": "string", "description": "id"}, "narration": {"type": "string", "description": "narration"}, "transactionDate": {"type": "string", "format": "date", "description": "transactionDate"}, "category": {"type": "string", "description": "category"}, "creditAmount": {"type": "number", "description": "creditAmount"}, "bankAccountId": {"type": "string", "description": "bankAccountId"}, "postedAmount": {"type": "number", "description": "postedAmount"}, "adjustedAmount": {"type": "number", "description": "adjustedAmount", "default": 0.0}, "creditUsedAmount": {"type": "number", "description": "creditUsedAmount", "default": 0.0}, "isReversed": {"type": "boolean", "description": "isReversed", "default": false}, "remainingAmount": {"type": "number", "description": "remainingAmount", "default": 0.0}, "customerSuggestions": {"type": "array", "items": {"$ref": "#/definitions/BankAccountCreditApiResponsecustomerSuggestions"}}, "customers": {"type": "array", "items": {"$ref": "#/definitions/BankAccountCreditApiResponsecustomers"}}, "postingStatus": {"type": "string", "example": "UNPOSTED", "enum": ["UNPOSTED", "POSTED", "PARTIALLY_POSTED", "EXCLUDED", "REVERSED"]}}, "type": "object"}, "BankAccountCreditApiResponsecustomerSuggestions": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "name"}, "id": {"type": "string", "description": "id"}, "updatedBy": {"type": "string", "description": "updatedBy"}}, "type": "object"}, "BankAccountCreditApiResponsecustomers": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "name"}, "id": {"type": "string", "description": "id"}, "updatedBy": {"type": "string", "description": "updatedBy"}}, "type": "object"}, "BankAccountCreditsListApiPaginatedResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PaginatedResponseModel"}}, "type": "object"}, "PostingSummaryApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PostingSummaryApiResponseData"}}, "type": "object"}, "PostingSummaryApiResponseData": {"required": ["count", "totalRemaining", "totalValue"], "properties": {"count": {"type": "integer", "description": "count"}, "totalValue": {"type": "number", "description": "totalValue"}, "totalRemaining": {"type": "number", "description": "totalRemaining"}}, "type": "object"}, "FetchInvoicePostingApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseData"}}}, "type": "object"}, "FetchInvoicePostingApiResponseData": {"required": ["createdBy", "postedAmount", "postingId"], "properties": {"postingId": {"type": "string", "description": "postingId"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "credit": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacredit"}, "placeholder": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDataplaceholder"}, "postedAmount": {"type": "number", "description": "postedAmount"}, "createdBy": {"type": "string", "description": "createdBy"}, "timestamp": {"type": "object"}, "creditNote": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNote"}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacredit": {"required": ["adjustedAmount", "bankAccountId", "category", "creditAmount", "creditUsedAmount", "id", "isReversed", "narration", "postedAmount", "remainingAmount", "transactionDate"], "properties": {"id": {"type": "string", "description": "id"}, "narration": {"type": "string", "description": "narration"}, "transactionDate": {"type": "string", "format": "date", "description": "transactionDate"}, "category": {"type": "string", "description": "category"}, "creditAmount": {"type": "number", "description": "creditAmount"}, "bankAccountId": {"type": "string", "description": "bankAccountId"}, "postedAmount": {"type": "number", "description": "postedAmount"}, "adjustedAmount": {"type": "number", "description": "adjustedAmount", "default": 0.0}, "creditUsedAmount": {"type": "number", "description": "creditUsedAmount", "default": 0.0}, "isReversed": {"type": "boolean", "description": "isReversed", "default": false}, "remainingAmount": {"type": "number", "description": "remainingAmount", "default": 0.0}, "customerSuggestions": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditcustomerSuggestions"}}, "customers": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditcustomers"}}, "postingStatus": {"type": "string", "example": "UNPOSTED", "enum": ["UNPOSTED", "POSTED", "PARTIALLY_POSTED", "EXCLUDED", "REVERSED"]}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditcustomerSuggestions": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "name"}, "id": {"type": "string", "description": "id"}, "updatedBy": {"type": "string", "description": "updatedBy"}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditcustomers": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "name"}, "id": {"type": "string", "description": "id"}, "updatedBy": {"type": "string", "description": "updatedBy"}}, "type": "object"}, "FetchInvoicePostingApiResponseDataplaceholder": {"properties": {"id": {"type": "object"}, "placeholderName": {"type": "object"}, "description": {"type": "object"}, "companyId": {"type": "object"}, "createdBy": {"type": "object"}, "placeholderType": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNote": {"required": ["buyerId", "companyId", "creditNoteAppliedAmount", "creditNoteDate", "creditNoteDescription", "creditNoteId", "creditNoteNumber", "creditNoteRemainingAmount", "creditNoteSubtotal", "creditNoteTotal", "creditNoteType", "customerId", "customerName", "id"], "properties": {"id": {"type": "string", "description": "id"}, "companyId": {"type": "string", "description": "companyId"}, "creditNoteId": {"type": "string", "description": "creditNoteId"}, "creditNoteNumber": {"type": "string", "description": "creditNoteNumber"}, "creditNoteDescription": {"type": "string", "description": "creditNoteDescription"}, "creditNoteStatus": {"type": "string", "example": "NOT_APPLIED", "enum": ["NOT_APPLIED", "PARTIALLY_APPLIED", "FULLY_APPLIED"]}, "creditNoteType": {"type": "string", "description": "creditNoteType"}, "creditNoteDate": {"type": "string", "format": "date", "description": "creditNoteDate"}, "currency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "creditNoteSubtotal": {"type": "number", "description": "creditNoteSubtotal"}, "creditNoteTotal": {"type": "number", "description": "creditNoteTotal"}, "creditNoteAppliedAmount": {"type": "number", "description": "creditNoteAppliedAmount"}, "creditNoteRemainingAmount": {"type": "number", "description": "creditNoteRemainingAmount"}, "creditNoteTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteTax"}, "customerId": {"type": "string", "description": "customerId"}, "buyerId": {"type": "string", "description": "buyerId"}, "customerName": {"type": "string", "description": "customerName"}, "irnNumber": {"type": "string", "description": "irnNumber"}, "discount": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotediscount"}, "creditNoteInvoicesReferences": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteInvoicesReferences"}}, "creditNoteAppliedInvoices": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteAppliedInvoices"}}, "lineItemDetails": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetails"}}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteTax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxgstTax"}, "cessTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxcessTax"}, "serviceTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteTaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotediscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteInvoicesReferences": {"properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotecreditNoteAppliedInvoices": {"required": ["appliedAmount"], "properties": {"appliedAmount": {"type": "number", "description": "appliedAmount"}, "appliedOn": {"type": "string", "format": "date", "description": "appliedOn"}, "createdBy": {"type": "string", "description": "createdBy"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "postingId": {"type": "string", "description": "postingId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetails": {"required": ["name", "pricePerItem", "taxRate"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "number", "description": "taxRate"}, "pricePerItem": {"type": "number", "description": "pricePerItem", "default": 0.0}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "description": {"type": "string", "description": "description"}, "subTotal": {"type": "number", "description": "subTotal", "default": 0.0}, "total": {"type": "number", "description": "total", "default": 0.0}, "tax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstax"}, "discount": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailsdiscount"}, "quantity": {"type": "number", "description": "quantity", "default": 1.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxgstTax"}, "cessTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxcessTax"}, "serviceTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailstaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "FetchInvoicePostingApiResponseDatacreditNotelineItemDetailsdiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "FetchCreditPostingApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/FetchCreditPostingApiResponseData"}}}, "type": "object"}, "FetchCreditPostingApiResponseData": {"required": ["createdBy", "postedAmount", "postingId"], "properties": {"postingId": {"type": "string", "description": "postingId"}, "invoice": {"$ref": "#/definitions/FetchCreditPostingApiResponseDatainvoice"}, "transactionId": {"type": "string", "description": "transactionId"}, "placeholderId": {"type": "string", "description": "placeholderId"}, "customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}, "postedAmount": {"type": "number", "description": "postedAmount"}, "createdBy": {"type": "string", "description": "createdBy"}, "timestamp": {"type": "object"}}, "type": "object"}, "FetchCreditPostingApiResponseDatainvoice": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "invoiceId": {"type": "object"}, "invoiceNumber": {"type": "object"}, "invoiceStatus": {"type": "object"}, "paymentStatus": {"type": "object"}, "invoiceType": {"type": "object"}, "placeOfSupply": {"type": "object"}, "invoiceDate": {"type": "object"}, "invoiceDueDate": {"type": "object"}, "promiseToPayDate": {"type": "object"}, "invoiceCurrency": {"type": "object"}, "invoiceSubtotal": {"type": "object"}, "invoiceTotal": {"type": "object"}, "invoicePaidAmount": {"type": "object"}, "invoiceAdjustedAmount": {"type": "object"}, "invoiceAdhocAdjustedAmount": {"type": "object"}, "invoiceOutstandingAmount": {"type": "object"}, "writtenOffAmount": {"type": "object"}, "roundOffAmount": {"type": "object"}, "creditNoteAdjustedAmount": {"type": "object"}, "invoiceTax": {"type": "object"}, "discount": {"type": "object"}, "discounts": {"type": "object"}, "customerId": {"type": "object"}, "buyerId": {"type": "object"}, "customerName": {"type": "object"}, "lineItems": {"type": "object"}, "invoiceRoundingConfig": {"type": "object"}, "irnNumber": {"type": "object"}, "eInvoiceQrCode": {"type": "object"}, "referenceType": {"type": "object"}, "referenceId": {"type": "object"}, "referenceText": {"type": "object"}, "tags": {"type": "object"}, "metaData": {"type": "object"}, "invoiceAcceptanceStatus": {"type": "object"}}, "type": "object"}, "MarkAsCreditsAsReversedOrUnreversedRequestModel": {"properties": {"creditIds": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "MarkCreditsAsReversedApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "FetchPostingHistoryApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/FetchPostingHistoryApiResponseData"}}}, "type": "object"}, "FetchPostingHistoryApiResponseData": {"properties": {"event": {"type": "string"}, "bankAccountTransactionId": {"type": "string"}, "invoiceId": {"type": "string"}, "placeholderId": {"type": "string"}, "fieldsUpdates": {"type": "array", "items": {"$ref": "#/definitions/FieldUpdates"}}, "timestamp": {"type": "string", "format": "date-time"}, "userId": {"type": "string"}, "userName": {"type": "string"}, "creditNoteId": {"type": "string"}, "creditNoteNumber": {"type": "string"}}, "type": "object"}, "FieldUpdates": {"properties": {"field": {"type": "string"}, "oldValue": {"type": "string"}, "newValue": {"type": "string"}}, "type": "object"}, "CustomerPostingsApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/CustomerPlaceholderPostingsApiResponseModel"}}}, "type": "object"}, "CustomerPlaceholderPostingsApiResponseModel": {"required": ["placeholderId", "placeholderName", "postedAmount"], "properties": {"placeholderId": {"type": "string", "description": "placeholderId"}, "placeholderName": {"type": "string", "description": "placeholderName"}, "postedAmount": {"type": "string", "description": "postedAmount"}, "postings": {"type": "array", "items": {"$ref": "#/definitions/CustomerPlaceholderPostingsApiResponseModelpostings"}}}, "type": "object"}, "CustomerPlaceholderPostingsApiResponseModelpostings": {"required": ["bankAccountTransactionId", "createdBy", "id", "invoiceId", "postedAmount"], "properties": {"id": {"type": "string", "description": "id"}, "createdBy": {"type": "string", "description": "createdBy"}, "bankAccountTransactionId": {"type": "string", "description": "bankAccountTransactionId"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "postedAmount": {"type": "number", "description": "postedAmount"}}, "type": "object"}, "BulkRoundOffInvoicesUnderThresholdRequestModel": {"properties": {"invoiceIds": {"type": "array", "items": {"type": "string"}}, "thresholdAmount": {"type": "number"}}, "type": "object"}, "AddPostingBulkApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddPostingBulkApiResponseData"}}, "type": "object"}, "AddPostingBulkApiResponseData": {"properties": {"ids": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "CreatePostingModel": {"properties": {"bankAccountTransactionsPostings": {"type": "array", "items": {"$ref": "#/definitions/CreateBulkInvoicePostingQueryModel"}}, "placeholderPostings": {"type": "array", "items": {"$ref": "#/definitions/CreateBulkInvoicePostingQueryModel"}}, "creditNotePostings": {"type": "array", "items": {"$ref": "#/definitions/CreateBulkInvoicePostingQueryModel"}}, "invoiceTdsUpdates": {"$ref": "#/definitions/InvoiceTdsUpdateRequestQueryModel"}}, "type": "object"}, "CreateBulkInvoicePostingQueryModel": {"required": ["postedAmount"], "properties": {"postedAmount": {"type": "number", "description": "postedAmount"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "bankAccountTransactionId": {"type": "string", "description": "bankAccountTransactionId"}, "placeholderId": {"type": "string", "description": "placeholderId"}, "creditNoteId": {"type": "string", "description": "creditNoteId"}, "customerId": {"type": "string", "description": "customerId"}}, "type": "object"}, "InvoiceTdsUpdateRequestQueryModel": {"required": ["invoiceId", "tdsAmount"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "tdsAmount": {"type": "number", "description": "tdsAmount"}}, "type": "object"}, "CreateBulkCreditPostingRequestModel": {"properties": {"invoicePostings": {"type": "array", "items": {"$ref": "#/definitions/CreateBulkCreditPostingQueryModel"}}, "placeholderPostings": {"type": "array", "items": {"$ref": "#/definitions/CreateBulkCreditPostingQueryModel"}}, "invoiceTdsUpdates": {"type": "array", "items": {"$ref": "#/definitions/InvoiceTdsUpdateRequestQueryModel"}}}, "type": "object"}, "CreateBulkCreditPostingQueryModel": {"required": ["postedAmount"], "properties": {"postedAmount": {"type": "number", "description": "postedAmount"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "bankAccountTransactionId": {"type": "string", "description": "bankAccountTransactionId"}, "placeholderId": {"type": "string", "description": "placeholderId"}, "creditNoteId": {"type": "string", "description": "creditNoteId"}, "customerId": {"type": "string", "description": "customerId"}}, "type": "object"}, "AddPlaceholderApiModel": {"required": ["placeholderName"], "properties": {"placeholderName": {"type": "string", "description": "placeholderName"}, "placeholderType": {"type": "string", "example": "INVOICE", "enum": ["INVOICE", "CREDIT", "CREDIT_NOTE", "MANUAL_DEBIT", "MANUAL_CREDIT"]}, "description": {"type": "string", "description": "description", "default": ""}}, "type": "object"}, "GetPlaceholderApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/GetPlaceholderApiResponseData"}}, "type": "object"}, "GetPlaceholderApiResponseData": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}, "status": {"type": "string"}}, "type": "object"}, "AddPlaceholderApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddPlaceholderApiResponseData"}}, "type": "object"}, "AddPlaceholderApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "GetAllPlaceholdersApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/GetAllPlaceholdersApiResponseData"}}}, "type": "object"}, "GetAllPlaceholdersApiResponseData": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}, "status": {"type": "string"}, "type": {"type": "string"}}, "type": "object"}, "PostedPlaceholdersSummaryReponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/PostedPlaceholderResponse"}}}, "type": "object"}, "PostedPlaceholderResponse": {"properties": {"countPostings": {"type": "integer"}, "postedAmount": {"type": "number"}, "placeholderName": {"type": "string"}, "placeholderId": {"type": "string"}}, "type": "object"}, "AddWriteOffApiRequestModel": {"required": ["amount", "invoiceId"], "properties": {"invoiceId": {"type": "string", "description": "ID of the invoice against which write off is to be created"}, "amount": {"type": "number", "description": "Amount to be written off"}, "comment": {"type": "string"}}, "type": "object"}, "AddWriteOffApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UpdateWriteOffStatusApiResponseData"}}, "type": "object"}, "UpdateWriteOffStatusApiResponseData": {"properties": {"success": {"type": "integer"}, "failure": {"type": "integer"}, "failure_data": {"type": "array", "items": {"$ref": "#/definitions/UpdateWriteOffStatusFailureData"}}}, "type": "object"}, "UpdateWriteOffStatusFailureData": {"properties": {"id": {"type": "string"}, "reason": {"type": "string"}}, "type": "object"}, "WriteOffStatusUpdateApiRequestModel": {"properties": {"requests": {"type": "array", "items": {"$ref": "#/definitions/WriteOffStatusUpdateDataApiRequestModel"}}}, "type": "object"}, "WriteOffStatusUpdateDataApiRequestModel": {"required": ["id"], "properties": {"id": {"type": "string"}, "comment": {"type": "string"}}, "type": "object"}, "WriteOffsListApiPaginatedResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PaginatedResponseModel"}}, "type": "object"}, "InvoiceWriteOffsListApiPaginatedResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/InvoiceWriteOffsListApiResponse"}}}, "type": "object"}, "InvoiceWriteOffsListApiResponse": {"required": ["customerName", "invoiceDate", "invoiceId", "requestId", "writeOffAmount"], "properties": {"requestId": {"type": "string", "description": "requestId"}, "writeOffAmount": {"type": "number", "description": "writeOffAmount"}, "approvalStatus": {"type": "string", "example": "PENDING", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, "invoiceId": {"type": "string", "description": "invoiceId"}, "customerName": {"type": "string", "description": "customerName"}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}, "requestedBy": {"type": "string", "description": "requestedBy"}, "createdBy": {"type": "string", "description": "createdBy"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceTotal": {"type": "number", "description": "invoiceTotal"}, "createdAt": {"type": "string", "description": "createdAt"}, "comment": {"type": "array", "items": {"$ref": "#/definitions/InvoiceWriteOffsListApiResponsecomment"}}}, "type": "object"}, "InvoiceWriteOffsListApiResponsecomment": {"properties": {"userId": {"type": "string", "description": "userId"}, "userName": {"type": "string", "description": "userName"}, "verdict": {"type": "string", "example": "PENDING", "enum": ["PENDING", "APPROVED", "REJECTED", "CANCELLED"]}, "comment": {"type": "string", "description": "comment"}, "timestamp": {"type": "object"}}, "type": "object"}, "WriteOffsIsApproverApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/WriteOffsIsApproverApiResponseModel"}}, "type": "object"}, "RequesterSuggestionsApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/UserSuggestionsModel"}}}, "type": "object"}, "UserSuggestionsModel": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "WriteOffSummaryResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/WriteOffSummaryModel"}}, "type": "object"}, "AddWorkflowModelSuccessResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddWorkflowModelSuccessResponseData"}, "warnings": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "AddWorkflowModelSuccessResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateWorkflowModelSuccessResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UpdateWorkflowModelSuccessResponseData"}}, "type": "object"}, "UpdateWorkflowModelSuccessResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CreateDateConditionQueryModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "waitTillValue": {"type": "string", "format": "date", "description": "waitTillValue"}, "waitTillPlaceholder": {"type": "string", "description": "waitTillPlaceholder"}, "waitTillDelta": {"type": "integer", "description": "waitTillDelta", "default": 0}, "waitFor": {"type": "integer", "description": "waitFor", "default": 1}, "dateOperator": {"type": "string", "example": "DIFF_DAYS", "enum": ["DIFF_DAYS", "DIFF_WEEKS", "DIFF_MONTHS", "DIFF_YEARS"]}}, "type": "object"}, "UpdateDateCondition": {"properties": {"rule": {"description": "updates to workflow date condition", "allOf": [{"$ref": "#/definitions/UpdateDateConditionQueryModel"}]}}, "type": "object"}, "UpdateDateConditionQueryModel": {"properties": {"waitTillValue": {"type": "string", "format": "date", "description": "waitTillValue"}, "waitTillPlaceholder": {"type": "string", "description": "waitTillPlaceholder"}, "waitTillDelta": {"type": "integer", "description": "waitTillDelta", "default": 0}, "waitFor": {"type": "integer", "description": "waitFor", "default": 1}, "dateOperator": {"type": "string", "example": "DIFF_DAYS", "enum": ["DIFF_DAYS", "DIFF_WEEKS", "DIFF_MONTHS", "DIFF_YEARS"]}}, "type": "object"}, "InitiateWorkflowStateRequestModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "triggerState": {"$ref": "#/definitions/InitiateWorkflowStateRequestModeltriggerState"}, "exitState": {"$ref": "#/definitions/InitiateWorkflowStateRequestModelexitState"}}, "type": "object"}, "InitiateWorkflowStateRequestModeltriggerState": {"properties": {"label": {"type": "string", "description": "label"}, "conditionActionTree": {"$ref": "#/definitions/InitiateWorkflowStateRequestModeltriggerStateconditionActionTree"}}, "type": "object"}, "InitiateWorkflowStateRequestModeltriggerStateconditionActionTree": {"properties": {"actions": {"type": "array", "items": {"type": "string", "description": "actions"}}, "onFalse": {"type": "object"}, "condition": {"type": "string", "description": "condition"}}, "type": "object"}, "InitiateWorkflowStateRequestModelexitState": {"properties": {"label": {"type": "string", "description": "label"}, "conditionActionTree": {"$ref": "#/definitions/InitiateWorkflowStateRequestModelexitStateconditionActionTree"}}, "type": "object"}, "InitiateWorkflowStateRequestModelexitStateconditionActionTree": {"properties": {"actions": {"type": "array", "items": {"type": "string", "description": "actions"}}, "onFalse": {"type": "object"}, "condition": {"type": "string", "description": "condition"}}, "type": "object"}, "AddTriggerAndExitStateSuccessResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddTriggerAndExitStateSuccessResponseData"}}, "type": "object"}, "AddTriggerAndExitStateSuccessResponseData": {"properties": {"triggerId": {"type": "string"}, "exitId": {"type": "string"}}, "type": "object"}, "CreateWaitWorkflowStateRequestModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "previousState": {"type": "string", "description": "previousState"}, "nextState": {"type": "string", "description": "nextState"}, "label": {"type": "string", "description": "label"}, "dateCondition": {"type": "string", "description": "dateCondition"}, "conditionActionTree": {"$ref": "#/definitions/CreateWaitWorkflowStateRequestModelconditionActionTree"}, "actions": {"type": "array", "items": {"type": "string", "description": "actions"}}}, "type": "object"}, "CreateWaitWorkflowStateRequestModelconditionActionTree": {"properties": {"actions": {"type": "array", "items": {"type": "string", "description": "actions"}}, "onFalse": {"type": "object"}, "condition": {"type": "string", "description": "condition"}}, "type": "object"}, "CreateConditionalWorkflowStateRequestModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "previousState": {"type": "string", "description": "previousState"}, "nextState": {"type": "string", "description": "nextState"}, "label": {"type": "string", "description": "label"}, "conditionActionTrees": {"type": "array", "items": {"$ref": "#/definitions/CreateConditionalWorkflowStateRequestModelconditionActionTrees"}}}, "type": "object"}, "CreateConditionalWorkflowStateRequestModelconditionActionTrees": {"properties": {"actions": {"type": "array", "items": {"type": "string", "description": "actions"}}, "onFalse": {"type": "object"}, "condition": {"type": "string", "description": "condition"}}, "type": "object"}, "CreateActionOnlyWorkflowStateRequestModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "previousState": {"type": "string", "description": "previousState"}, "nextState": {"type": "string", "description": "nextState"}, "label": {"type": "string", "description": "label"}, "action": {"type": "string", "description": "action"}}, "type": "object"}, "CreateEmailWorkflowActionModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "label": {"type": "string", "description": "label"}, "templateId": {"type": "string", "description": "templateId"}, "recipients": {"$ref": "#/definitions/CreateEmailWorkflowActionModelrecipients"}, "emailRecipients": {"$ref": "#/definitions/CreateEmailWorkflowActionModelemailRecipients"}, "fromEmail": {"type": "string", "description": "fromEmail"}, "templateData": {"type": "object"}, "attachmentData": {"$ref": "#/definitions/CreateEmailWorkflowActionModelattachmentData"}}, "type": "object"}, "CreateEmailWorkflowActionModelrecipients": {"properties": {"to": {"type": "array", "items": {"type": "string", "description": "to"}}, "cc": {"type": "array", "items": {"type": "string", "description": "cc"}}, "bcc": {"type": "array", "items": {"type": "string", "description": "bcc"}}, "replyTo": {"type": "array", "items": {"type": "string", "description": "replyTo"}}}, "type": "object"}, "CreateEmailWorkflowActionModelemailRecipients": {"properties": {"to": {"$ref": "#/definitions/CreateEmailWorkflowActionModelemailRecipientsto"}, "cc": {"$ref": "#/definitions/CreateEmailWorkflowActionModelemailRecipientscc"}, "bcc": {"$ref": "#/definitions/CreateEmailWorkflowActionModelemailRecipientsbcc"}, "replyTo": {"$ref": "#/definitions/CreateEmailWorkflowActionModelemailRecipientsreplyTo"}}, "type": "object"}, "CreateEmailWorkflowActionModelemailRecipientsto": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "CreateEmailWorkflowActionModelemailRecipientscc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "CreateEmailWorkflowActionModelemailRecipientsbcc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "CreateEmailWorkflowActionModelemailRecipientsreplyTo": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "CreateEmailWorkflowActionModelattachmentData": {"properties": {"customer": {"type": "array", "items": {"type": "string", "example": "INVOICE_FOR_BUYER", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}}, "invoice": {"type": "array", "items": {"type": "string", "example": "INVOICE_FOR_BUYER", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}}}, "type": "object"}, "UpdateEmailWorkflowActionModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateEmailWorkflowActionModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateEmailWorkflowActionModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "Update email workflow action", "allOf": [{"$ref": "#/definitions/UpdateEmailWorkflowActionModel"}]}}, "type": "object"}, "UpdateEmailWorkflowActionModel": {"properties": {"label": {"type": "string", "description": "label"}, "templateId": {"type": "string", "description": "templateId"}, "recipients": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelrecipients"}, "emailRecipients": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelemailRecipients"}, "fromEmail": {"type": "string", "description": "fromEmail"}, "templateData": {"type": "object"}, "attachmentData": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelattachmentData"}}, "type": "object"}, "UpdateEmailWorkflowActionModelrecipients": {"properties": {"to": {"type": "array", "items": {"type": "string", "description": "to"}}, "cc": {"type": "array", "items": {"type": "string", "description": "cc"}}, "bcc": {"type": "array", "items": {"type": "string", "description": "bcc"}}, "replyTo": {"type": "array", "items": {"type": "string", "description": "replyTo"}}}, "type": "object"}, "UpdateEmailWorkflowActionModelemailRecipients": {"properties": {"to": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelemailRecipientsto"}, "cc": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelemailRecipientscc"}, "bcc": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelemailRecipientsbcc"}, "replyTo": {"$ref": "#/definitions/UpdateEmailWorkflowActionModelemailRecipientsreplyTo"}}, "type": "object"}, "UpdateEmailWorkflowActionModelemailRecipientsto": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateEmailWorkflowActionModelemailRecipientscc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateEmailWorkflowActionModelemailRecipientsbcc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateEmailWorkflowActionModelemailRecipientsreplyTo": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateEmailWorkflowActionModelattachmentData": {"properties": {"customer": {"type": "array", "items": {"type": "string", "example": "INVOICE_FOR_BUYER", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}}, "invoice": {"type": "array", "items": {"type": "string", "example": "INVOICE_FOR_BUYER", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}}}, "type": "object"}, "CreateGoToWorkflowActionModel": {"required": ["workflowId"], "properties": {"workflowId": {"type": "string", "description": "workflowId"}, "label": {"type": "string", "description": "label"}, "fromState": {"type": "string", "description": "fromState"}, "toState": {"type": "string", "description": "toState"}, "letSystemDecide": {"type": "boolean", "description": "letSystemDecide", "default": false}}, "type": "object"}, "UpdateGoToWorkflowActionModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateGoToWorkflowActionModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateGoToWorkflowActionModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "Update email workflow action", "allOf": [{"$ref": "#/definitions/UpdateGoToWorkflowActionModel"}]}}, "type": "object"}, "UpdateGoToWorkflowActionModel": {"properties": {"label": {"type": "string", "description": "label"}, "fromState": {"type": "string", "description": "fromState"}, "toState": {"type": "string", "description": "toState"}, "letSystemDecide": {"type": "boolean", "description": "letSystemDecide", "default": false}}, "type": "object"}, "CreateWorkflowQueryModel": {"required": ["name"], "properties": {"name": {"type": "string", "description": "name"}, "workflowDescription": {"type": "string", "description": "workflowDescription"}, "customerSegments": {"type": "array", "items": {"type": "string", "description": "customerSegments"}}, "schedule": {"$ref": "#/definitions/CreateWorkflowQueryModelschedule"}}, "type": "object"}, "CreateWorkflowQueryModelschedule": {"properties": {"frequency": {"type": "string", "example": "HOUR", "enum": ["HOUR", "DAY", "WEEK", "MONTH"]}, "dayOfTheMonth": {"type": "integer", "description": "dayOfTheMonth"}, "dayOfTheWeek": {"type": "string", "example": "SUNDAY", "enum": ["SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"]}, "hourOfTheDay": {"type": "integer", "description": "hourOfTheDay"}, "minuteOfTheHour": {"type": "integer", "description": "minuteOfTheHour"}}, "type": "object"}, "DeleteWorkflowModelSuccessResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/DeleteWorkflowModelSuccessResponseData"}}, "type": "object"}, "DeleteWorkflowModelSuccessResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateWorkflowState": {"properties": {"updates": {"$ref": "#/definitions/UpdateWorkflowStateRequestModel"}}, "type": "object"}, "UpdateWorkflowStateRequestModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "updates to workflow states", "allOf": [{"$ref": "#/definitions/UpdateStateQueryModel"}]}}, "type": "object"}, "UpdateStateQueryModel": {"properties": {"label": {"type": "string", "description": "label"}, "conditionActionTree": {"$ref": "#/definitions/UpdateStateQueryModelconditionActionTree"}}, "type": "object"}, "UpdateStateQueryModelconditionActionTree": {"properties": {"actions": {"type": "array", "items": {"type": "string", "description": "actions"}}, "onFalse": {"type": "object"}, "condition": {"type": "string", "description": "condition"}}, "type": "object"}, "WorkflowActionFetchResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/WorkflowActionFetchResponseData"}, "warnings": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "WorkflowActionFetchResponseData": {"properties": {"id": {"type": "object"}, "rule": {"type": "object"}, "workflowId": {"type": "object"}, "companyId": {"type": "object"}, "status": {"type": "object"}, "createdBy": {"type": "object"}}, "type": "object"}, "UpdateWorkflowQueryModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateWorkflowQueryModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateWorkflowQueryModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "Update workflow", "allOf": [{"$ref": "#/definitions/UpdateWorkflowQueryModel"}]}}, "type": "object"}, "UpdateWorkflowQueryModel": {"required": ["name"], "properties": {"name": {"type": "string", "description": "name"}, "workflowDescription": {"type": "string", "description": "workflowDescription"}, "customerSegments": {"type": "array", "items": {"type": "string", "description": "customerSegments"}}, "schedule": {"$ref": "#/definitions/UpdateWorkflowQueryModelschedule"}}, "type": "object"}, "UpdateWorkflowQueryModelschedule": {"properties": {"frequency": {"type": "string", "example": "HOUR", "enum": ["HOUR", "DAY", "WEEK", "MONTH"]}, "dayOfTheMonth": {"type": "integer", "description": "dayOfTheMonth"}, "dayOfTheWeek": {"type": "string", "example": "SUNDAY", "enum": ["SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"]}, "hourOfTheDay": {"type": "integer", "description": "hourOfTheDay"}, "minuteOfTheHour": {"type": "integer", "description": "minuteOfTheHour"}}, "type": "object"}, "WorkflowExecutionRequestModel": {"required": ["invoiceId", "workflowId"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "workflowId": {"type": "string", "description": "workflowId"}, "isDryRun": {"type": "boolean", "description": "isDryRun", "default": false}, "workflowRunId": {"type": "string", "description": "workflowRunId"}, "invoiceCounter": {"type": "integer", "description": "invoiceCounter", "default": 0}}, "type": "object"}, "VerifyWorkflowCompletionRequestModel": {"properties": {"isDryRun": {"type": "boolean", "description": "isDryRun", "default": false}, "workflowRunId": {"type": "string", "description": "workflowRunId"}}, "type": "object"}, "FetchResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FetchResponseData"}}, "type": "object"}, "FetchResponseData": {"required": ["currentState", "invoiceId", "workflowId", "workflowRunId"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "workflowId": {"type": "string", "description": "workflowId"}, "currentState": {"type": "string", "description": "currentState"}, "currentStateType": {"type": "string", "example": "WAIT", "enum": ["WAIT", "TRIGGER", "ACTION_ONLY", "CONDITIONAL", "EXIT"]}, "lastUpdatedDate": {"type": "object"}, "workflowRunId": {"type": "string", "description": "workflowRunId"}}, "type": "object"}, "CreateEmailTemplateQueryModel": {"required": ["contentHtml", "description", "name", "subjectContentHtml"], "properties": {"name": {"type": "string", "description": "name"}, "description": {"type": "string", "description": "description"}, "subjectContentHtml": {"type": "string", "description": "subjectContentHtml"}, "contentHtml": {"type": "string", "description": "contentHtml"}, "contentJson": {"$ref": "#/definitions/CreateEmailTemplateQueryModelcontentJson"}, "config": {"$ref": "#/definitions/CreateEmailTemplateQueryModelconfig"}, "status": {"type": "string", "example": "ACTIVE", "enum": ["ACTIVE", "INACTIVE", "DRAFT"]}, "updatedBy": {"type": "string", "description": "updatedBy"}, "companyId": {"type": "string", "description": "companyId"}}, "type": "object"}, "CreateEmailTemplateQueryModelcontentJson": {"properties": {"sectionsOrder": {"type": "array", "items": {"type": "string", "description": "sectionsOrder"}}, "sections": {"type": "object"}}, "type": "object"}, "CreateEmailTemplateQueryModelconfig": {"properties": {"variables": {"type": "array", "items": {"$ref": "#/definitions/CreateEmailTemplateQueryModelconfigvariables"}}}, "type": "object"}, "CreateEmailTemplateQueryModelconfigvariables": {"required": ["modelType", "name"], "properties": {"name": {"type": "string", "description": "name"}, "dataType": {"type": "string", "example": "OBJECT", "enum": ["OBJECT", "STRING", "NUMBER", "ARRAY", "DATE"]}, "modelType": {"type": "string", "description": "modelType"}, "properties": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "AddEmailTemplateApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AddEmailTemplateApiResponseData"}}, "type": "object"}, "AddEmailTemplateApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateEmailTemplate": {"properties": {"updates": {"$ref": "#/definitions/UpdateEmailTemplateFieldsAndValuesModel"}}, "type": "object"}, "UpdateEmailTemplateFieldsAndValuesModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "updates to email_templates", "allOf": [{"$ref": "#/definitions/UpdateEmailTemplateQueryModel"}]}}, "type": "object"}, "UpdateEmailTemplateQueryModel": {"properties": {"name": {"type": "string", "description": "name"}, "description": {"type": "string", "description": "description"}, "contentHtml": {"type": "string", "description": "contentHtml"}, "subjectContentHtml": {"type": "string", "description": "subjectContentHtml"}, "contentJson": {"$ref": "#/definitions/UpdateEmailTemplateQueryModelcontentJson"}, "config": {"$ref": "#/definitions/UpdateEmailTemplateQueryModelconfig"}, "status": {"type": "string", "example": "ACTIVE", "enum": ["ACTIVE", "INACTIVE", "DRAFT"]}}, "type": "object"}, "UpdateEmailTemplateQueryModelcontentJson": {"properties": {"sectionsOrder": {"type": "array", "items": {"type": "string", "description": "sectionsOrder"}}, "sections": {"type": "object"}}, "type": "object"}, "UpdateEmailTemplateQueryModelconfig": {"properties": {"variables": {"type": "array", "items": {"$ref": "#/definitions/UpdateEmailTemplateQueryModelconfigvariables"}}}, "type": "object"}, "UpdateEmailTemplateQueryModelconfigvariables": {"required": ["modelType", "name"], "properties": {"name": {"type": "string", "description": "name"}, "dataType": {"type": "string", "example": "OBJECT", "enum": ["OBJECT", "STRING", "NUMBER", "ARRAY", "DATE"]}, "modelType": {"type": "string", "description": "modelType"}, "properties": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "EmailPreviewRequestModel": {"properties": {"variables": {"type": "array", "items": {"$ref": "#/definitions/PreviewVariablesModel"}}}, "type": "object"}, "IreckonerPostingSyncRequestModel": {"properties": {"buyerIds": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "CreateAgeingBucketQueryModel": {"properties": {"startDays": {"type": "integer", "description": "startDays"}, "endDays": {"type": "integer", "description": "endDays"}, "metaData": {"type": "object"}}, "type": "object"}, "AgeingBucketFetchApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/AgeingBucketFetchApiResponseModel"}}}, "type": "object"}, "AgeingBucketGetApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AgeingBucketGetApiResponseModel"}}, "type": "object"}, "CreateAgeingConfigurationQueryModel": {"properties": {"configuration": {"type": "array", "items": {"type": "string", "description": "configuration"}}, "type": {"type": "string", "example": "AGEING", "enum": ["AGEING", "PROMISE_TO_PAY"]}, "metaData": {"type": "object"}}, "type": "object"}, "AgeingConfigurationGetApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/AgeingConfigurationGetApiResponseModel"}}, "type": "object"}, "AttachmentSearchResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/FetchAttachmentSearchResponseData"}}}, "type": "object"}, "FetchAttachmentSearchResponseData": {"required": ["createdAt", "createdBy", "fileName", "fileType", "id"], "properties": {"id": {"type": "string", "description": "id"}, "purpose": {"type": "string", "example": "INVOICE_FOR_BUYER", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, "fileType": {"type": "string", "description": "fileType"}, "createdBy": {"type": "string", "description": "createdBy"}, "createdAt": {"type": "string", "description": "createdAt"}, "fileName": {"type": "string", "description": "fileName"}}, "type": "object"}, "GetCreditNoteResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/GetCreditNoteResponseData"}}, "type": "object"}, "GetCreditNoteResponseData": {"required": ["buyerId", "companyId", "creditNoteAppliedAmount", "creditNoteDate", "creditNoteDescription", "creditNoteId", "creditNoteNumber", "creditNoteRemainingAmount", "creditNoteSubtotal", "creditNoteTotal", "creditNoteType", "customerId", "customerName", "id"], "properties": {"id": {"type": "string", "description": "id"}, "companyId": {"type": "string", "description": "companyId"}, "creditNoteId": {"type": "string", "description": "creditNoteId"}, "creditNoteNumber": {"type": "string", "description": "creditNoteNumber"}, "creditNoteDescription": {"type": "string", "description": "creditNoteDescription"}, "creditNoteStatus": {"type": "string", "example": "NOT_APPLIED", "enum": ["NOT_APPLIED", "PARTIALLY_APPLIED", "FULLY_APPLIED"]}, "creditNoteType": {"type": "string", "description": "creditNoteType"}, "creditNoteDate": {"type": "string", "format": "date", "description": "creditNoteDate"}, "currency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "creditNoteSubtotal": {"type": "number", "description": "creditNoteSubtotal"}, "creditNoteTotal": {"type": "number", "description": "creditNoteTotal"}, "creditNoteAppliedAmount": {"type": "number", "description": "creditNoteAppliedAmount"}, "creditNoteRemainingAmount": {"type": "number", "description": "creditNoteRemainingAmount"}, "creditNoteTax": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteTax"}, "customerId": {"type": "string", "description": "customerId"}, "buyerId": {"type": "string", "description": "buyerId"}, "customerName": {"type": "string", "description": "customerName"}, "irnNumber": {"type": "string", "description": "irnNumber"}, "discount": {"$ref": "#/definitions/GetCreditNoteResponseDatadiscount"}, "creditNoteInvoicesReferences": {"type": "array", "items": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteInvoicesReferences"}}, "creditNoteAppliedInvoices": {"type": "array", "items": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteAppliedInvoices"}}, "lineItemDetails": {"type": "array", "items": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetails"}}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteTax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteTaxgstTax"}, "cessTax": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteTaxcessTax"}, "serviceTax": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteTaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteTaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/GetCreditNoteResponseDatacreditNoteTaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteTaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteTaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteTaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteTaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteTaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatadiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteInvoicesReferences": {"properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}}, "type": "object"}, "GetCreditNoteResponseDatacreditNoteAppliedInvoices": {"required": ["appliedAmount"], "properties": {"appliedAmount": {"type": "number", "description": "appliedAmount"}, "appliedOn": {"type": "string", "format": "date", "description": "appliedOn"}, "createdBy": {"type": "string", "description": "createdBy"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "postingId": {"type": "string", "description": "postingId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceDate": {"type": "string", "format": "date", "description": "invoiceDate"}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetails": {"required": ["name", "pricePerItem", "taxRate"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "number", "description": "taxRate"}, "pricePerItem": {"type": "number", "description": "pricePerItem", "default": 0.0}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "description": {"type": "string", "description": "description"}, "subTotal": {"type": "number", "description": "subTotal", "default": 0.0}, "total": {"type": "number", "description": "total", "default": 0.0}, "tax": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailstax"}, "discount": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailsdiscount"}, "quantity": {"type": "number", "description": "quantity", "default": 1.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailstax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailstaxgstTax"}, "cessTax": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailstaxcessTax"}, "serviceTax": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailstaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailstaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/GetCreditNoteResponseDatalineItemDetailstaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailstaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailstaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailstaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailstaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailstaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "GetCreditNoteResponseDatalineItemDetailsdiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateBulkCreditNoteToInvoicePostingQueryModel": {"properties": {"createBulkCreditNotePosting": {"type": "array", "items": {"$ref": "#/definitions/CreatePostingQueryModel"}}}, "type": "object"}, "CreatePostingQueryModel": {"required": ["postedAmount"], "properties": {"postedAmount": {"type": "number", "description": "postedAmount"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "bankAccountTransactionId": {"type": "string", "description": "bankAccountTransactionId"}, "placeholderId": {"type": "string", "description": "placeholderId"}, "creditNoteId": {"type": "string", "description": "creditNoteId"}, "customerId": {"type": "string", "description": "customerId"}}, "type": "object"}, "DeleteCreditNoteAdjustmentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/DeleteCreditNoteAdjustmentResponseData"}}, "type": "object"}, "DeleteCreditNoteAdjustmentResponseData": {"properties": {"postingId": {"type": "string"}}, "type": "object"}, "UploadCreditNoteAttachmentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UploadCreditNoteAttachmentResponseDataModel"}}, "type": "object"}, "UploadCreditNoteAttachmentResponseDataModel": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CreateFeeComponentAPIRequestModel": {"required": ["name"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "array", "items": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModeltaxRate"}}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "sku": {"type": "string", "description": "sku"}, "billLimit": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModelbillLimit"}, "unit": {"type": "string", "description": "unit"}, "description": {"type": "string", "description": "description"}, "driverUpsertRequest": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModeldriverUpsertRequest"}}, "type": "object"}, "CreateFeeComponentAPIRequestModeltaxRate": {"required": ["name", "value"], "properties": {"name": {"type": "string", "description": "name"}, "value": {"type": "number", "description": "value"}, "isActive": {"type": "boolean", "description": "isActive", "default": true}, "taxCategory": {"type": "string", "example": "GST", "enum": ["GST", "CESS", "SERVICE", "TDS", "OTHER"]}}, "type": "object"}, "CreateFeeComponentAPIRequestModelbillLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModelbillLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "CreateFeeComponentAPIRequestModelbillLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "CreateFeeComponentAPIRequestModeldriverUpsertRequest": {"properties": {"upsertRequests": {"type": "array", "items": {"$ref": "#/definitions/CreateFeeComponentAPIRequestModeldriverUpsertRequestupsertRequests"}}}, "type": "object"}, "CreateFeeComponentAPIRequestModeldriverUpsertRequestupsertRequests": {"required": ["usageDriverId", "weight"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "weight": {"type": "number", "description": "weight"}}, "type": "object"}, "FeeComponentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FeeComponentResponseModelData"}}, "type": "object"}, "FeeComponentResponseModelData": {"properties": {"feeComponent": {"$ref": "#/definitions/FeeComponentResponseModelDatafeeComponent"}, "usageDrivers": {"type": "array", "items": {"$ref": "#/definitions/FeeComponentResponseModelDatausageDrivers"}}, "productName": {"type": "string", "description": "productName"}}, "type": "object"}, "FeeComponentResponseModelDatafeeComponent": {"properties": {"id": {"type": "object"}, "sku": {"type": "object"}, "productId": {"type": "object"}, "name": {"type": "object"}, "description": {"type": "object"}, "hsnOrSacCode": {"type": "object"}, "taxRate": {"type": "object"}, "status": {"type": "object"}, "billLimit": {"type": "object"}, "unit": {"type": "object"}, "companyId": {"type": "object"}, "createdBy": {"type": "object"}, "updatedBy": {"type": "object"}}, "type": "object"}, "FeeComponentResponseModelDatausageDrivers": {"properties": {"driverId": {"type": "string", "description": "driverId"}, "driverName": {"type": "string", "description": "driverName"}, "weight": {"type": "number", "description": "weight"}, "unit": {"type": "string", "description": "unit"}, "productId": {"type": "string", "description": "productId"}}, "type": "object"}, "UpdateFeeComponentAPIRequestModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateFeeComponentAPIRequestModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateFeeComponentAPIRequestModel"}}, "type": "object"}, "UpdateFeeComponentAPIRequestModel": {"properties": {"name": {"type": "string", "description": "name"}, "unit": {"type": "string", "description": "unit"}, "sku": {"type": "string", "description": "sku"}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "taxRate": {"type": "array", "items": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModeltaxRate"}}, "billLimit": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModelbillLimit"}, "description": {"type": "string", "description": "description"}, "driverUpsertRequest": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModeldriverUpsertRequest"}}, "type": "object"}, "UpdateFeeComponentAPIRequestModeltaxRate": {"required": ["name", "value"], "properties": {"name": {"type": "string", "description": "name"}, "value": {"type": "number", "description": "value"}, "isActive": {"type": "boolean", "description": "isActive", "default": true}, "taxCategory": {"type": "string", "example": "GST", "enum": ["GST", "CESS", "SERVICE", "TDS", "OTHER"]}}, "type": "object"}, "UpdateFeeComponentAPIRequestModelbillLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModelbillLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "UpdateFeeComponentAPIRequestModelbillLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "UpdateFeeComponentAPIRequestModeldriverUpsertRequest": {"properties": {"upsertRequests": {"type": "array", "items": {"$ref": "#/definitions/UpdateFeeComponentAPIRequestModeldriverUpsertRequestupsertRequests"}}}, "type": "object"}, "UpdateFeeComponentAPIRequestModeldriverUpsertRequestupsertRequests": {"required": ["usageDriverId", "weight"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "weight": {"type": "number", "description": "weight"}}, "type": "object"}, "UpsertBulkFeeComponentUsageDriverRelationshipQueryModel": {"properties": {"upsertRequests": {"type": "array", "items": {"$ref": "#/definitions/UpsertBulkFeeComponentUsageDriverRelationshipQueryModelupsertRequests"}}}, "type": "object"}, "UpsertBulkFeeComponentUsageDriverRelationshipQueryModelupsertRequests": {"required": ["usageDriverId", "weight"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "weight": {"type": "number", "description": "weight"}}, "type": "object"}, "FeeComponent": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FeeComponentData"}}, "type": "object"}, "FeeComponentData": {"properties": {"id": {"type": "object"}, "sku": {"type": "object"}, "productId": {"type": "object"}, "name": {"type": "object"}, "description": {"type": "object"}, "hsnOrSacCode": {"type": "object"}, "taxRate": {"type": "object"}, "status": {"type": "object"}, "billLimit": {"type": "object"}, "unit": {"type": "object"}, "companyId": {"type": "object"}, "createdBy": {"type": "object"}, "updatedBy": {"type": "object"}}, "type": "object"}, "FeeComponentUsageDriverRelationship": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FeeComponentUsageDriverRelationshipData"}}, "type": "object"}, "FeeComponentUsageDriverRelationshipData": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "feeComponentId": {"type": "object"}, "usageDriverId": {"type": "object"}, "weight": {"type": "object"}, "createdBy": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "CloneFeeComponentRequestModel": {"required": ["description", "name"], "properties": {"name": {"type": "string", "description": "name"}, "description": {"type": "string", "description": "description"}}, "type": "object"}, "CreateRateCardRequestModel": {"required": ["feeComponentId", "name"], "properties": {"name": {"type": "string", "description": "name"}, "description": {"$ref": "#/definitions/CreateRateCardRequestModeldescription"}, "feeComponentId": {"type": "string", "description": "feeComponentId"}, "currency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "tags": {"type": "object"}, "ratecardDescription": {"type": "string", "description": "ratecardDescription"}, "contractId": {"type": "string", "description": "contractId"}}, "type": "object"}, "CreateRateCardRequestModeldescription": {"properties": {"billingScheme": {"type": "string", "example": "PER_UNIT", "enum": ["PER_UNIT", "VOLUME", "GRADUATED", "FIXED_RATE", "MINMAX"]}, "tiers": {"type": "array", "items": {"$ref": "#/definitions/CreateRateCardRequestModeldescriptiontiers"}}, "isProrated": {"type": "boolean", "description": "isProrated", "default": false}}, "type": "object"}, "CreateRateCardRequestModeldescriptiontiers": {"required": ["name", "upTo"], "properties": {"name": {"type": "string", "description": "name"}, "upTo": {"type": "number", "description": "upTo"}, "unitPrice": {"type": "number", "description": "unitPrice", "default": 0}, "flatPrice": {"type": "number", "description": "flatPrice", "default": 0}, "isPercentage": {"type": "boolean", "description": "isPercentage", "default": false}, "repeatTier": {"type": "boolean", "description": "repeatTier", "default": false}}, "type": "object"}, "RateCardResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/RateCardResponseData"}}, "type": "object"}, "RateCardResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "BulkUpsertRateCardsRequestModel": {"required": ["feeComponentId"], "properties": {"ratecards": {"type": "array", "items": {"$ref": "#/definitions/BulkUpsertRateCardsRequestModelratecards"}}, "feeComponentId": {"type": "string", "description": "feeComponentId"}}, "type": "object"}, "BulkUpsertRateCardsRequestModelratecards": {"required": ["feeComponentId", "name"], "properties": {"name": {"type": "string", "description": "name"}, "description": {"$ref": "#/definitions/BulkUpsertRateCardsRequestModelratecardsdescription"}, "feeComponentId": {"type": "string", "description": "feeComponentId"}, "currency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "tags": {"type": "object"}, "ratecardDescription": {"type": "string", "description": "ratecardDescription"}, "contractId": {"type": "string", "description": "contractId"}}, "type": "object"}, "BulkUpsertRateCardsRequestModelratecardsdescription": {"properties": {"billingScheme": {"type": "string", "example": "PER_UNIT", "enum": ["PER_UNIT", "VOLUME", "GRADUATED", "FIXED_RATE", "MINMAX"]}, "tiers": {"type": "array", "items": {"$ref": "#/definitions/BulkUpsertRateCardsRequestModelratecardsdescriptiontiers"}}, "isProrated": {"type": "boolean", "description": "isProrated", "default": false}}, "type": "object"}, "BulkUpsertRateCardsRequestModelratecardsdescriptiontiers": {"required": ["name", "upTo"], "properties": {"name": {"type": "string", "description": "name"}, "upTo": {"type": "number", "description": "upTo"}, "unitPrice": {"type": "number", "description": "unitPrice", "default": 0}, "flatPrice": {"type": "number", "description": "flatPrice", "default": 0}, "isPercentage": {"type": "boolean", "description": "isPercentage", "default": false}, "repeatTier": {"type": "boolean", "description": "repeatTier", "default": false}}, "type": "object"}, "RateCardListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/RateCardData"}}}, "type": "object"}, "RateCardData": {"properties": {"id": {"type": "object"}, "name": {"type": "object"}, "ratecardDescription": {"type": "object"}, "feeComponentId": {"type": "object"}, "description": {"type": "object"}, "ratecardDetail": {"type": "object"}, "tags": {"type": "object"}, "companyId": {"type": "object"}, "contractId": {"type": "object"}, "currency": {"type": "object"}, "createdBy": {"type": "object"}, "isDefault": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "UpdateRateCardRequestModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateRateCardRequestModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateRateCardRequestModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateRateCardRequestModel"}}, "type": "object"}, "UpdateRateCardRequestModel": {"properties": {"name": {"type": "string", "description": "name"}, "description": {"$ref": "#/definitions/UpdateRateCardRequestModeldescription"}, "currency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "ratecardDescription": {"type": "string", "description": "ratecardDescription"}}, "type": "object"}, "UpdateRateCardRequestModeldescription": {"properties": {"billingScheme": {"type": "string", "example": "PER_UNIT", "enum": ["PER_UNIT", "VOLUME", "GRADUATED", "FIXED_RATE", "MINMAX"]}, "tiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateRateCardRequestModeldescriptiontiers"}}, "isProrated": {"type": "boolean", "description": "isProrated", "default": false}}, "type": "object"}, "UpdateRateCardRequestModeldescriptiontiers": {"required": ["name", "upTo"], "properties": {"name": {"type": "string", "description": "name"}, "upTo": {"type": "number", "description": "upTo"}, "unitPrice": {"type": "number", "description": "unitPrice", "default": 0}, "flatPrice": {"type": "number", "description": "flatPrice", "default": 0}, "isPercentage": {"type": "boolean", "description": "isPercentage", "default": false}, "repeatTier": {"type": "boolean", "description": "repeatTier", "default": false}}, "type": "object"}, "RateCard": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/RateCardData"}}, "type": "object"}, "FetchRateCardsResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FetchRateCardsResponseModelData"}}, "type": "object"}, "FetchRateCardsResponseModelData": {"properties": {"tags": {"type": "object"}, "ratecards": {"type": "array", "items": {"$ref": "#/definitions/FetchRateCardsResponseModelDataratecards"}}}, "type": "object"}, "FetchRateCardsResponseModelDataratecards": {"properties": {"id": {"type": "object"}, "name": {"type": "object"}, "ratecardDescription": {"type": "object"}, "feeComponentId": {"type": "object"}, "description": {"type": "object"}, "ratecardDetail": {"type": "object"}, "tags": {"type": "object"}, "companyId": {"type": "object"}, "contractId": {"type": "object"}, "currency": {"type": "object"}, "createdBy": {"type": "object"}, "isDefault": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "MarkRateCardDefaultRequestModel": {"required": ["feeComponentId", "ratecardId"], "properties": {"feeComponentId": {"type": "string", "description": "feeComponentId"}, "ratecardId": {"type": "string", "description": "ratecardId"}}, "type": "object"}, "TestRateCardRequestModel": {"required": ["feeComponentId", "totalUsage"], "properties": {"tags": {"type": "object"}, "feeComponentId": {"type": "string", "description": "feeComponentId"}, "totalUsage": {"type": "number", "description": "totalUsage"}, "contractId": {"type": "string", "description": "contractId"}}, "type": "object"}, "TestRateCardResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/TestRateCardResponseModelData"}}, "type": "object"}, "TestRateCardResponseModelData": {"required": ["totalPrice"], "properties": {"ratecard": {"$ref": "#/definitions/TestRateCardResponseModelDataratecard"}, "totalPrice": {"type": "number", "description": "totalPrice"}}, "type": "object"}, "TestRateCardResponseModelDataratecard": {"properties": {"id": {"type": "object"}, "name": {"type": "object"}, "ratecardDescription": {"type": "object"}, "feeComponentId": {"type": "object"}, "description": {"type": "object"}, "ratecardDetail": {"type": "object"}, "tags": {"type": "object"}, "companyId": {"type": "object"}, "contractId": {"type": "object"}, "currency": {"type": "object"}, "createdBy": {"type": "object"}, "isDefault": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "CreateUsageAPIRequestModel": {"required": ["transactionDate"], "properties": {"transactionDate": {"type": "string", "format": "date", "description": "transactionDate"}, "quantities": {"type": "object"}, "productName": {"type": "string", "description": "productName"}, "productId": {"type": "string", "description": "productId"}, "eventId": {"type": "string", "description": "eventId"}, "contractId": {"type": "string", "description": "contractId"}, "buyerId": {"type": "string", "description": "buyerId"}, "usageReferenceId": {"type": "string", "description": "usageReferenceId"}, "tags": {"type": "object"}, "metaData": {"type": "object"}}, "type": "object"}, "UsageResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UsageResponseModelData"}}, "type": "object"}, "UsageResponseModelData": {"properties": {"ids": {"type": "array", "items": {"type": "string", "description": "ids"}}, "eventId": {"type": "string", "description": "eventId"}, "contractId": {"type": "string", "description": "contractId"}, "contractNumber": {"type": "string", "description": "contractNumber"}, "contractTitle": {"type": "string", "description": "contractTitle"}, "usageReferenceId": {"type": "string", "description": "usageReferenceId"}, "transactionDate": {"type": "string", "format": "date", "description": "transactionDate"}, "feeComponentId": {"type": "string", "description": "feeComponentId"}, "feeComponentName": {"type": "string", "description": "feeComponentName"}, "quantities": {"type": "array", "items": {"$ref": "#/definitions/UsageResponseModelDataquantities"}}, "buyerId": {"type": "string", "description": "buyerId"}, "customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}, "tags": {"type": "object"}, "metaData": {"type": "object"}, "createdBy": {"type": "string", "description": "createdBy"}, "updatedBy": {"type": "string", "description": "updatedBy"}, "updatedAt": {"type": "object"}}, "type": "object"}, "UsageResponseModelDataquantities": {"required": ["id", "name", "quantity", "unit"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "quantity": {"type": "number", "description": "quantity"}, "unit": {"type": "string", "description": "unit"}}, "type": "object"}, "BulkUsageUpsertionRequest": {"properties": {"upsertionRequests": {"type": "array", "items": {"$ref": "#/definitions/BulkUsageUpsertionRequestupsertionRequests"}}}, "type": "object"}, "BulkUsageUpsertionRequestupsertionRequests": {"required": ["transactionDate"], "properties": {"transactionDate": {"type": "string", "format": "date", "description": "transactionDate"}, "quantities": {"type": "object"}, "productName": {"type": "string", "description": "productName"}, "productId": {"type": "string", "description": "productId"}, "eventId": {"type": "string", "description": "eventId"}, "contractId": {"type": "string", "description": "contractId"}, "buyerId": {"type": "string", "description": "buyerId"}, "usageReferenceId": {"type": "string", "description": "usageReferenceId"}, "tags": {"type": "object"}, "metaData": {"type": "object"}}, "type": "object"}, "UpdateUsageRequestModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateUsageRequestModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateUsageRequestModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateUsageRequestModel"}}, "type": "object"}, "UpdateUsageRequestModel": {"properties": {"quantity": {"type": "number", "description": "quantity"}, "transactionDate": {"type": "string", "format": "date", "description": "transactionDate"}, "tags": {"type": "object"}, "metaData": {"type": "object"}}, "type": "object"}, "DeleteUsageRequest": {"required": ["contractId"], "properties": {"billingPeriod": {"$ref": "#/definitions/DeleteUsageRequestbillingPeriod"}, "contractId": {"type": "string", "description": "contractId"}}, "type": "object"}, "DeleteUsageRequestbillingPeriod": {"required": ["endDate", "startDate"], "properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "durationInWords": {"type": "string", "description": "durationInWords"}}, "type": "object"}, "UsageUploadRequest": {"properties": {"feeComponentTagIds": {"type": "array", "items": {"type": "string", "description": "feeComponentTagIds"}}, "usageDriverIds": {"type": "array", "items": {"type": "string", "description": "usageDriverIds"}}}, "type": "object"}, "UsageSummaryResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UsageSummaryResponseModelData"}}, "type": "object"}, "UsageSummaryResponseModelData": {"required": ["quantity"], "properties": {"quantity": {"type": "number", "description": "quantity"}, "driverWiseSummary": {"type": "array", "items": {"$ref": "#/definitions/UsageSummaryResponseModelDatadriverWiseSummary"}}}, "type": "object"}, "UsageSummaryResponseModelDatadriverWiseSummary": {"required": ["quantity", "usageDriverId", "usageDriverName"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "usageDriverName": {"type": "string", "description": "usageDriverName"}, "quantity": {"type": "number", "description": "quantity"}, "unit": {"type": "string", "description": "unit"}}, "type": "object"}, "CreateContractAPIRequestModel": {"required": ["contractNumber", "contractTitle", "customerId", "isPreusage"], "properties": {"customerId": {"type": "string", "description": "customerId"}, "contractNumber": {"type": "string", "description": "contractNumber"}, "contractTitle": {"type": "string", "description": "contractTitle"}, "contractPeriod": {"$ref": "#/definitions/CreateContractAPIRequestModelcontractPeriod"}, "billingFrequency": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingFrequency"}, "startDate": {"type": "string", "format": "date", "description": "startDate"}, "virtualStartDate": {"type": "string", "format": "date", "description": "virtualStartDate"}, "creditTermId": {"type": "string", "description": "creditTermId"}, "poNumber": {"type": "string", "description": "poNumber"}, "noteInvoice": {"type": "string", "description": "noteInvoice"}, "terms": {"type": "string", "description": "terms"}, "placeOfSupply": {"$ref": "#/definitions/CreateContractAPIRequestModelplaceOfSupply"}, "billingAddress": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingAddress"}, "shippingAddress": {"$ref": "#/definitions/CreateContractAPIRequestModelshippingAddress"}, "noteContract": {"type": "string", "description": "noteContract"}, "gstin": {"type": "string", "description": "gstin"}, "companyGstin": {"type": "string", "description": "companyGstin"}, "billingDiscounts": {"type": "array", "items": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingDiscounts"}}, "isPreusage": {"type": "boolean", "description": "isPreusage", "default": false}, "billingTime": {"type": "string", "example": "BEGINNING_OF_PERIOD", "enum": ["BEGINNING_OF_PERIOD", "SUBSCRIPTION_DATE"]}, "billingReportLimit": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingReportLimit"}, "contractLimit": {"$ref": "#/definitions/CreateContractAPIRequestModelcontractLimit"}, "advanceConfig": {"$ref": "#/definitions/CreateContractAPIRequestModeladvanceConfig"}, "usageBillingCycle": {"$ref": "#/definitions/CreateContractAPIRequestModelusageBillingCycle"}, "autoRenew": {"type": "boolean", "description": "autoRenew", "default": false}, "renewalPeriod": {"$ref": "#/definitions/CreateContractAPIRequestModelrenewalPeriod"}}, "type": "object"}, "CreateContractAPIRequestModelcontractPeriod": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "CreateContractAPIRequestModelbillingFrequency": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "CreateContractAPIRequestModelplaceOfSupply": {"required": ["stateCode"], "properties": {"stateName": {"type": "string", "example": "JAMMU_KASHMIR", "enum": ["JAMMU_KASHMIR", "HIMACHAL_PRADESH", "PUNJAB", "CHANDIGARH", "UTTARAKHAND", "HARYANA", "DELHI", "RAJASTHAN", "UTTAR_PRADESH", "BIHAR", "SIKKIM", "ARUNACHAL_PRADESH", "NAGALAND", "MANIPUR", "MIZORAM", "TRIPURA", "MEGHALAYA", "ASSAM", "WEST_BENGAL", "JHARKHAND", "ODISHA", "CHHATTISGARH", "MADHYA_PRADESH", "GUJARAT", "MAHARASHTRA", "ANDHRA_PRADESH_OLD", "KARNATAKA", "GOA", "LAKSHADWEEP", "KERALA", "TAMIL_NADU", "PUDUCHERRY", "ANDAMAN_NICOBAR", "TELANGANA", "ANDHRA_PRADESH_NEW", "LADAKH"]}, "stateCode": {"type": "string", "description": "stateCode"}}, "type": "object"}, "CreateContractAPIRequestModelbillingAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateContractAPIRequestModelshippingAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateContractAPIRequestModelbillingDiscounts": {"required": ["amount", "isPostTax", "isStackable", "isUsageBased", "percentage", "priority"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}, "discountType": {"type": "string", "example": "ADJUSTMENT", "enum": ["ADJUSTMENT"]}, "discountName": {"type": "string", "description": "discountName"}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "tiers": {"type": "array", "items": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingDiscountstiers"}}, "priority": {"type": "integer", "description": "priority", "default": 1}, "isStackable": {"type": "boolean", "description": "isStackable", "default": false}, "duration": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingDiscountsduration"}}, "type": "object"}, "CreateContractAPIRequestModelbillingDiscountstiers": {"required": ["amount", "isPostTax", "percentage", "upTo"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "CreateContractAPIRequestModelbillingDiscountsduration": {"required": ["endIndex", "startIndex"], "properties": {"startIndex": {"type": "integer", "description": "startIndex"}, "endIndex": {"type": "integer", "description": "endIndex"}}, "type": "object"}, "CreateContractAPIRequestModelbillingReportLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/CreateContractAPIRequestModelbillingReportLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "CreateContractAPIRequestModelbillingReportLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "CreateContractAPIRequestModelcontractLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/CreateContractAPIRequestModelcontractLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "CreateContractAPIRequestModelcontractLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "CreateContractAPIRequestModeladvanceConfig": {"properties": {"trueUpEnabled": {"type": "boolean", "description": "trueUpEnabled", "default": false}, "trueDownEnabled": {"type": "boolean", "description": "trueDownEnabled", "default": false}, "actualUsageOverride": {"type": "boolean", "description": "actualUsageOverride", "default": false}, "isUsageEstimateProrated": {"type": "boolean", "description": "isUsageEstimateProrated", "default": true}, "fileName": {"type": "string", "description": "fileName"}, "attachmentId": {"type": "string", "description": "attachmentId"}}, "type": "object"}, "CreateContractAPIRequestModelusageBillingCycle": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "CreateContractAPIRequestModelrenewalPeriod": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "ContractResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ContractResponseData"}}, "type": "object"}, "ContractResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateContractAPIRequestModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateContractAPIRequestModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateContractAPIRequestModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateContractAPIRequestModel"}}, "type": "object"}, "UpdateContractAPIRequestModel": {"properties": {"customerId": {"type": "string", "description": "customerId"}, "contractNumber": {"type": "string", "description": "contractNumber"}, "contractTitle": {"type": "string", "description": "contractTitle"}, "contractPeriod": {"$ref": "#/definitions/UpdateContractAPIRequestModelcontractPeriod"}, "renewalPeriod": {"$ref": "#/definitions/UpdateContractAPIRequestModelrenewalPeriod"}, "billingFrequency": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingFrequency"}, "usageBillingCycle": {"$ref": "#/definitions/UpdateContractAPIRequestModelusageBillingCycle"}, "startDate": {"type": "string", "format": "date", "description": "startDate"}, "virtualStartDate": {"type": "string", "format": "date", "description": "virtualStartDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "nextBillingDate": {"type": "string", "format": "date", "description": "nextBillingDate"}, "creditTermId": {"type": "string", "description": "creditTermId"}, "poNumber": {"type": "string", "description": "poNumber"}, "noteInvoice": {"type": "string", "description": "noteInvoice"}, "terms": {"type": "string", "description": "terms"}, "noteContract": {"type": "string", "description": "noteContract"}, "placeOfSupply": {"$ref": "#/definitions/UpdateContractAPIRequestModelplaceOfSupply"}, "billingAddress": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingAddress"}, "shippingAddress": {"$ref": "#/definitions/UpdateContractAPIRequestModelshippingAddress"}, "gstin": {"type": "string", "description": "gstin"}, "companyGstin": {"type": "string", "description": "companyGstin"}, "billingDiscounts": {"type": "array", "items": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingDiscounts"}}, "isPreusage": {"type": "boolean", "description": "isPreusage"}, "billingTime": {"type": "string", "example": "BEGINNING_OF_PERIOD", "enum": ["BEGINNING_OF_PERIOD", "SUBSCRIPTION_DATE"]}, "billingReportLimit": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingReportLimit"}, "contractLimit": {"$ref": "#/definitions/UpdateContractAPIRequestModelcontractLimit"}, "autoRenew": {"type": "boolean", "description": "autoRenew"}, "advanceConfig": {"$ref": "#/definitions/UpdateContractAPIRequestModeladvanceConfig"}}, "type": "object"}, "UpdateContractAPIRequestModelcontractPeriod": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "UpdateContractAPIRequestModelrenewalPeriod": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "UpdateContractAPIRequestModelbillingFrequency": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "UpdateContractAPIRequestModelusageBillingCycle": {"required": ["value"], "properties": {"unit": {"type": "string", "example": "DAY", "enum": ["DAY", "WEEK", "MONTH", "YEAR"]}, "value": {"type": "integer", "description": "value"}}, "type": "object"}, "UpdateContractAPIRequestModelplaceOfSupply": {"required": ["stateCode"], "properties": {"stateName": {"type": "string", "example": "JAMMU_KASHMIR", "enum": ["JAMMU_KASHMIR", "HIMACHAL_PRADESH", "PUNJAB", "CHANDIGARH", "UTTARAKHAND", "HARYANA", "DELHI", "RAJASTHAN", "UTTAR_PRADESH", "BIHAR", "SIKKIM", "ARUNACHAL_PRADESH", "NAGALAND", "MANIPUR", "MIZORAM", "TRIPURA", "MEGHALAYA", "ASSAM", "WEST_BENGAL", "JHARKHAND", "ODISHA", "CHHATTISGARH", "MADHYA_PRADESH", "GUJARAT", "MAHARASHTRA", "ANDHRA_PRADESH_OLD", "KARNATAKA", "GOA", "LAKSHADWEEP", "KERALA", "TAMIL_NADU", "PUDUCHERRY", "ANDAMAN_NICOBAR", "TELANGANA", "ANDHRA_PRADESH_NEW", "LADAKH"]}, "stateCode": {"type": "string", "description": "stateCode"}}, "type": "object"}, "UpdateContractAPIRequestModelbillingAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "UpdateContractAPIRequestModelshippingAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "UpdateContractAPIRequestModelbillingDiscounts": {"required": ["amount", "isPostTax", "isStackable", "isUsageBased", "percentage", "priority"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}, "discountType": {"type": "string", "example": "ADJUSTMENT", "enum": ["ADJUSTMENT"]}, "discountName": {"type": "string", "description": "discountName"}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "tiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingDiscountstiers"}}, "priority": {"type": "integer", "description": "priority", "default": 1}, "isStackable": {"type": "boolean", "description": "isStackable", "default": false}, "duration": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingDiscountsduration"}}, "type": "object"}, "UpdateContractAPIRequestModelbillingDiscountstiers": {"required": ["amount", "isPostTax", "percentage", "upTo"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "UpdateContractAPIRequestModelbillingDiscountsduration": {"required": ["endIndex", "startIndex"], "properties": {"startIndex": {"type": "integer", "description": "startIndex"}, "endIndex": {"type": "integer", "description": "endIndex"}}, "type": "object"}, "UpdateContractAPIRequestModelbillingReportLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateContractAPIRequestModelbillingReportLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "UpdateContractAPIRequestModelbillingReportLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "UpdateContractAPIRequestModelcontractLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateContractAPIRequestModelcontractLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "UpdateContractAPIRequestModelcontractLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "UpdateContractAPIRequestModeladvanceConfig": {"properties": {"trueUpEnabled": {"type": "boolean", "description": "trueUpEnabled", "default": false}, "trueDownEnabled": {"type": "boolean", "description": "trueDownEnabled", "default": false}, "actualUsageOverride": {"type": "boolean", "description": "actualUsageOverride", "default": false}, "isUsageEstimateProrated": {"type": "boolean", "description": "isUsageEstimateProrated", "default": true}, "fileName": {"type": "string", "description": "fileName"}, "attachmentId": {"type": "string", "description": "attachmentId"}}, "type": "object"}, "UpdateContractAPIRequestModelResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UpdateContractAPIRequestModelResponseData"}}, "type": "object"}, "UpdateContractAPIRequestModelResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "ContractRateCardBulkUpsertionRequestModel": {"required": ["feeComponentId"], "properties": {"ratecardRelations": {"type": "array", "items": {"$ref": "#/definitions/ContractRateCardBulkUpsertionRequestModelratecardRelations"}}, "feeComponentId": {"type": "string", "description": "feeComponentId"}}, "type": "object"}, "ContractRateCardBulkUpsertionRequestModelratecardRelations": {"properties": {"ratecardId": {"type": "string", "description": "ratecardId"}}, "type": "object"}, "FeeComponentToContractRequestModel": {"required": ["contractId", "feeComponentId"], "properties": {"feeComponentId": {"type": "string", "description": "feeComponentId"}, "contractId": {"type": "string", "description": "contractId"}}, "type": "object"}, "FeeComponentIncludeUsageRequestModel": {"required": ["contractId"], "properties": {"feeComponentIds": {"type": "array", "items": {"type": "string", "description": "feeComponentIds"}}, "contractId": {"type": "string", "description": "contractId"}}, "type": "object"}, "ContractFeeComponentResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ContractFeeComponentResponseModelData"}}, "type": "object"}, "ContractFeeComponentResponseModelData": {"properties": {"id": {"type": "string", "description": "id"}, "productId": {"type": "string", "description": "productId"}, "productName": {"type": "string", "description": "productName"}, "sku": {"type": "string", "description": "sku"}, "includedInUsage": {"type": "boolean", "description": "includedInUsage"}, "name": {"type": "string", "description": "name"}, "description": {"type": "string", "description": "description"}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "usage": {"type": "number", "description": "usage"}, "billedAmount": {"type": "number", "description": "billedAmount"}, "estimatedUsage": {"type": "number", "description": "estimatedUsage"}, "estimatedBilledAmount": {"type": "number", "description": "estimatedBilledAmount"}, "adjustment": {"type": "number", "description": "adjustment"}, "taxRate": {"type": "array", "items": {"$ref": "#/definitions/ContractFeeComponentResponseModelDatataxRate"}}, "billLimit": {"$ref": "#/definitions/ContractFeeComponentResponseModelDatabillLimit"}, "activePeriod": {"$ref": "#/definitions/ContractFeeComponentResponseModelDataactivePeriod"}, "unit": {"type": "string", "description": "unit"}, "companyId": {"type": "string", "description": "companyId"}, "createdBy": {"type": "string", "description": "createdBy"}, "updatedBy": {"type": "string", "description": "updatedBy"}, "ratecards": {"type": "array", "items": {"$ref": "#/definitions/ContractFeeComponentResponseModelDataratecards"}}}, "type": "object"}, "ContractFeeComponentResponseModelDatataxRate": {"required": ["name", "value"], "properties": {"name": {"type": "string", "description": "name"}, "value": {"type": "number", "description": "value"}, "isActive": {"type": "boolean", "description": "isActive", "default": true}, "taxCategory": {"type": "string", "example": "GST", "enum": ["GST", "CESS", "SERVICE", "TDS", "OTHER"]}}, "type": "object"}, "ContractFeeComponentResponseModelDatabillLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/ContractFeeComponentResponseModelDatabillLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "ContractFeeComponentResponseModelDatabillLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "ContractFeeComponentResponseModelDataactivePeriod": {"properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}}, "type": "object"}, "ContractFeeComponentResponseModelDataratecards": {"properties": {"id": {"type": "object"}, "name": {"type": "object"}, "ratecardDescription": {"type": "object"}, "feeComponentId": {"type": "object"}, "description": {"type": "object"}, "ratecardDetail": {"type": "object"}, "tags": {"type": "object"}, "companyId": {"type": "object"}, "contractId": {"type": "object"}, "currency": {"type": "object"}, "createdBy": {"type": "object"}, "isDefault": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModel"}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModel": {"properties": {"taxRate": {"type": "array", "items": {"$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModeltaxRate"}}, "billLimit": {"$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModelbillLimit"}, "includedInUsage": {"type": "boolean", "description": "includedInUsage", "default": false}, "activePeriod": {"$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModelactivePeriod"}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModeltaxRate": {"required": ["name", "value"], "properties": {"name": {"type": "string", "description": "name"}, "value": {"type": "number", "description": "value"}, "isActive": {"type": "boolean", "description": "isActive", "default": true}, "taxCategory": {"type": "string", "example": "GST", "enum": ["GST", "CESS", "SERVICE", "TDS", "OTHER"]}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModelbillLimit": {"required": ["isUsageBased"], "properties": {"tiers": {"type": "array", "items": {"$ref": "#/definitions/UpdateContractFeeComponentRelationshipRequestModelbillLimittiers"}}, "isUsageBased": {"type": "boolean", "description": "isUsageBased", "default": false}, "minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "isProrated": {"type": "boolean", "description": "isProrated"}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModelbillLimittiers": {"required": ["upTo"], "properties": {"minValue": {"type": "number", "description": "minValue"}, "maxValue": {"type": "number", "description": "maxValue"}, "upTo": {"type": "number", "description": "upTo", "default": Infinity}}, "type": "object"}, "UpdateContractFeeComponentRelationshipRequestModelactivePeriod": {"properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModelData"}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModelData": {"required": ["fromEmail", "htmlContent", "subject", "template"], "properties": {"subject": {"type": "string", "description": "subject"}, "htmlContent": {"type": "string", "description": "htmlContent"}, "fromEmail": {"type": "string", "description": "fromEmail"}, "template": {"type": "string", "description": "template"}, "recipients": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModelDatarecipients"}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModelDatarecipients": {"properties": {"to": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModelDatarecipientsto"}, "cc": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModelDatarecipientscc"}, "bcc": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModelDatarecipientsbcc"}, "replyTo": {"$ref": "#/definitions/ContractRenewNotificationSettingsResponseModelDatarecipientsreplyTo"}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModelDatarecipientsto": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModelDatarecipientscc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModelDatarecipientsbcc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "ContractRenewNotificationSettingsResponseModelDatarecipientsreplyTo": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateCompanyConfigurationQueryModel": {"properties": {"contractRenewNotificationSettings": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettings"}}, "type": "object"}, "UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettings": {"required": ["fromEmail", "subject", "template"], "properties": {"subject": {"type": "string", "description": "subject"}, "template": {"type": "string", "description": "template"}, "recipients": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipients"}, "fromEmail": {"type": "string", "description": "fromEmail"}}, "type": "object"}, "UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipients": {"properties": {"to": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientsto"}, "cc": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientscc"}, "bcc": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientsbcc"}, "replyTo": {"$ref": "#/definitions/UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientsreplyTo"}}, "type": "object"}, "UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientsto": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientscc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientsbcc": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "UpdateCompanyConfigurationQueryModelcontractRenewNotificationSettingsrecipientsreplyTo": {"properties": {"owner": {"type": "array", "items": {"type": "string", "description": "owner"}}, "contact": {"type": "array", "items": {"type": "string", "description": "contact"}}, "emails": {"type": "array", "items": {"type": "string", "description": "emails"}}}, "type": "object"}, "CompanyConfigurationResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CompanyConfigurationResponseData"}}, "type": "object"}, "CompanyConfigurationResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "PlaceOfSupplyListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/PlaceOfSupplyData"}}}, "type": "object"}, "PlaceOfSupplyData": {"required": ["stateCode"], "properties": {"stateName": {"type": "string", "example": "JAMMU_KASHMIR", "enum": ["JAMMU_KASHMIR", "HIMACHAL_PRADESH", "PUNJAB", "CHANDIGARH", "UTTARAKHAND", "HARYANA", "DELHI", "RAJASTHAN", "UTTAR_PRADESH", "BIHAR", "SIKKIM", "ARUNACHAL_PRADESH", "NAGALAND", "MANIPUR", "MIZORAM", "TRIPURA", "MEGHALAYA", "ASSAM", "WEST_BENGAL", "JHARKHAND", "ODISHA", "CHHATTISGARH", "MADHYA_PRADESH", "GUJARAT", "MAHARASHTRA", "ANDHRA_PRADESH_OLD", "KARNATAKA", "GOA", "LAKSHADWEEP", "KERALA", "TAMIL_NADU", "PUDUCHERRY", "ANDAMAN_NICOBAR", "TELANGANA", "ANDHRA_PRADESH_NEW", "LADAKH"]}, "stateCode": {"type": "string", "description": "stateCode"}}, "type": "object"}, "ContractUsageCyclePeriodSuggestions": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ContractUsageCyclePeriodSuggestionsData"}}, "type": "object"}, "ContractUsageCyclePeriodSuggestionsData": {"properties": {"suggestions": {"type": "array", "items": {"$ref": "#/definitions/ContractUsageCyclePeriodSuggestionsDatasuggestions"}}, "activeUsageCyclePeriod": {"$ref": "#/definitions/ContractUsageCyclePeriodSuggestionsDataactiveUsageCyclePeriod"}}, "type": "object"}, "ContractUsageCyclePeriodSuggestionsDatasuggestions": {"required": ["endDate", "startDate"], "properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "durationInWords": {"type": "string", "description": "durationInWords"}}, "type": "object"}, "ContractUsageCyclePeriodSuggestionsDataactiveUsageCyclePeriod": {"required": ["endDate", "startDate"], "properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "durationInWords": {"type": "string", "description": "durationInWords"}}, "type": "object"}, "UsageEstimateTableInfoListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/UsageEstimateTableInfoData"}}}, "type": "object"}, "UsageEstimateTableInfoData": {"properties": {"tagCombinations": {"type": "array", "items": {"type": "object"}}, "tagValues": {"type": "array", "items": {"$ref": "#/definitions/UsageEstimateTableInfoDatatagValues"}}, "usageDrivers": {"type": "array", "items": {"$ref": "#/definitions/UsageEstimateTableInfoDatausageDrivers"}}, "productId": {"type": "string", "description": "productId"}, "productName": {"type": "string", "description": "productName"}, "existingEstimates": {"type": "array", "items": {"$ref": "#/definitions/UsageEstimateTableInfoDataexistingEstimates"}}}, "type": "object"}, "UsageEstimateTableInfoDatatagValues": {"required": ["key"], "properties": {"key": {"type": "string", "description": "key"}, "values": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "UsageEstimateTableInfoDatausageDrivers": {"properties": {"id": {"type": "object"}, "name": {"type": "object"}, "description": {"type": "object"}, "unit": {"type": "object"}, "productId": {"type": "object"}, "status": {"type": "object"}, "companyId": {"type": "object"}, "createdBy": {"type": "object"}, "updatedBy": {"type": "object"}}, "type": "object"}, "UsageEstimateTableInfoDataexistingEstimates": {"properties": {"quantities": {"type": "array", "items": {"$ref": "#/definitions/UsageEstimateTableInfoDataexistingEstimatesquantities"}}, "tags": {"type": "object"}, "ratecardDescription": {"type": "string", "description": "ratecardDescription"}, "totalUsage": {"type": "number", "description": "totalUsage"}, "billedAmount": {"type": "number", "description": "billedAmount"}}, "type": "object"}, "UsageEstimateTableInfoDataexistingEstimatesquantities": {"required": ["quantity", "usageDriverId", "usageDriverName", "usageDriverUnit", "usageMultiplier"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "usageDriverName": {"type": "string", "description": "usageDriverName"}, "usageDriverUnit": {"type": "string", "description": "usageDriverUnit"}, "quantity": {"type": "number", "description": "quantity"}, "usageMultiplier": {"type": "integer", "description": "usageMultiplier"}, "tags": {"type": "object"}}, "type": "object"}, "BulkUsageEstimateUpsertRequestModel": {"properties": {"upsertionRequests": {"type": "array", "items": {"$ref": "#/definitions/BulkUsageEstimateUpsertRequestModelupsertionRequests"}}}, "type": "object"}, "BulkUsageEstimateUpsertRequestModelupsertionRequests": {"required": ["quantity", "usageDriverId"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "quantity": {"type": "number", "description": "quantity"}, "tags": {"type": "object"}}, "type": "object"}, "BulkUsageEstimateUpsertRequestModelResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BulkUsageEstimateUpsertRequestModelResponseData"}}, "type": "object"}, "BulkUsageEstimateUpsertRequestModelResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "CloneContractRequest": {"required": ["contractNumber", "contractTitle", "customerId"], "properties": {"customerId": {"type": "string", "description": "customerId"}, "contractTitle": {"type": "string", "description": "contractTitle"}, "contractNumber": {"type": "string", "description": "contractNumber"}}, "type": "object"}, "Contract": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ContractData"}}, "type": "object"}, "ContractData": {"properties": {"id": {"type": "object"}, "customerId": {"type": "object"}, "contractNumber": {"type": "object"}, "contractTitle": {"type": "object"}, "contractPeriod": {"type": "object"}, "renewalPeriod": {"type": "object"}, "noteContract": {"type": "object"}, "billingFrequency": {"type": "object"}, "usageBillingCycle": {"type": "object"}, "billingTime": {"type": "object"}, "startDate": {"type": "object"}, "virtualStartDate": {"type": "object"}, "endDate": {"type": "object"}, "nextBillingDate": {"type": "object"}, "billingDiscounts": {"type": "object"}, "isPreusage": {"type": "object"}, "billingReportLimit": {"type": "object"}, "contractLimit": {"type": "object"}, "creditTermId": {"type": "object"}, "poNumber": {"type": "object"}, "placeOfSupply": {"type": "object"}, "billingAddress": {"type": "object"}, "shippingAddress": {"type": "object"}, "totalInvoicedAmount": {"type": "object"}, "noteInvoice": {"type": "object"}, "terms": {"type": "object"}, "advanceConfig": {"type": "object"}, "gstin": {"type": "object"}, "companyGstin": {"type": "object"}, "companyId": {"type": "object"}, "createdBy": {"type": "object"}, "updatedBy": {"type": "object"}, "status": {"type": "object"}, "autoRenew": {"type": "object"}}, "type": "object"}, "GenericTable": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/GenericTableData"}}, "type": "object"}, "GenericTableData": {"properties": {"rows": {"type": "array", "items": {"$ref": "#/definitions/GenericTableDatarows"}}}, "type": "object"}, "GenericTableDatarows": {"properties": {"values": {"type": "array", "items": {"$ref": "#/definitions/GenericTableDatarowsvalues"}}}, "type": "object"}, "GenericTableDatarowsvalues": {"required": ["columnName"], "properties": {"columnName": {"type": "string", "description": "columnName"}, "value": {"type": "object"}}, "type": "object"}, "ContractSendEmailRequestModel": {"required": ["contractId", "fromEmail", "subject"], "properties": {"contractId": {"type": "string", "description": "contractId"}, "subject": {"type": "string", "description": "subject"}, "fromEmail": {"type": "string", "description": "fromEmail"}, "emailRecipient": {"$ref": "#/definitions/ContractSendEmailRequestModelemailRecipient"}}, "type": "object"}, "ContractSendEmailRequestModelemailRecipient": {"properties": {"to": {"type": "array", "items": {"type": "string", "description": "to"}}, "cc": {"type": "array", "items": {"type": "string", "description": "cc"}}, "bcc": {"type": "array", "items": {"type": "string", "description": "bcc"}}, "replyTo": {"type": "array", "items": {"type": "string", "description": "replyTo"}}}, "type": "object"}, "CreateUpiQrCodeApiRequestModel": {"required": ["customerName", "upiVpa"], "properties": {"upiVpa": {"type": "string", "description": "upiVpa"}, "customerName": {"type": "string", "description": "customerName"}, "customerTaxIdentifier": {"$ref": "#/definitions/CreateUpiQrCodeApiRequestModelcustomerTaxIdentifier"}}, "type": "object"}, "CreateUpiQrCodeApiRequestModelcustomerTaxIdentifier": {"required": ["taxIdentifierValue"], "properties": {"taxIdentifierType": {"type": "string", "example": "GST", "enum": ["GST"]}, "taxIdentifierValue": {"type": "string", "description": "taxIdentifierValue"}}, "type": "object"}, "CreateCustomerUpiQrCodeApiRequestModel": {"required": ["customerId", "upiVpa"], "properties": {"upiVpa": {"type": "string", "description": "upiVpa"}, "customerId": {"type": "string", "description": "customerId"}, "amount": {"type": "number", "description": "amount"}}, "type": "object"}, "CreateCustomerUpiQrLinkApiRequestModel": {"required": ["customerId", "upiVpa"], "properties": {"upiVpa": {"type": "string", "description": "upiVpa"}, "customerId": {"type": "string", "description": "customerId"}, "amount": {"type": "number", "description": "amount"}, "message": {"type": "string", "description": "message"}, "bankAccountId": {"type": "string", "description": "bankAccountId"}}, "type": "object"}, "LedgerObjectResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FetchLedgerResponseModel"}}, "type": "object"}, "FetchLedgerResponseModel": {"properties": {"id": {"type": "string"}, "postedBy": {"type": "string"}, "postedAmount": {"type": "string"}, "createdAt": {"type": "string"}, "lastUpdatedAt": {"type": "string"}, "postingType": {"type": "string"}, "invoice": {"$ref": "#/definitions/FetchLedgerInvoiceResponseModel"}, "customer": {"$ref": "#/definitions/FetchLedgerCustomerResponseModel"}, "credit": {"$ref": "#/definitions/FetchLedgerCreditResponseModel"}, "creditNote": {"$ref": "#/definitions/FetchLedgerCreditNoteResponseModel"}, "placeholder": {"$ref": "#/definitions/FetchLedgerPlaceholderResponseModel"}}, "type": "object"}, "FetchLedgerInvoiceResponseModel": {"properties": {"number": {"type": "string", "description": "number", "default": ""}, "date": {"type": "string", "description": "date", "default": ""}, "dueDate": {"type": "string", "description": "dueDate", "default": ""}, "totalAmount": {"type": "string", "description": "totalAmount", "default": ""}, "outstandingAmount": {"type": "string", "description": "outstandingAmount", "default": ""}, "paymentStatus": {"type": "string", "description": "paymentStatus", "default": ""}}, "type": "object"}, "FetchLedgerCustomerResponseModel": {"properties": {"buyerId": {"type": "string", "description": "buyerId", "default": ""}, "name": {"type": "string", "description": "name", "default": ""}}, "type": "object"}, "FetchLedgerCreditResponseModel": {"properties": {"narration": {"type": "string", "description": "narration", "default": ""}, "transactionDate": {"type": "string", "description": "transactionDate", "default": ""}, "totalAmount": {"type": "string", "description": "totalAmount", "default": ""}, "totalRemainingAmount": {"type": "string", "description": "totalRemainingAmount", "default": ""}}, "type": "object"}, "FetchLedgerCreditNoteResponseModel": {"properties": {"number": {"type": "string", "description": "number", "default": ""}, "date": {"type": "string", "description": "date", "default": ""}, "totalAmount": {"type": "string", "description": "totalAmount", "default": ""}, "totalAppliedAmount": {"type": "string", "description": "totalAppliedAmount", "default": ""}, "totalRemainingAmount": {"type": "string", "description": "totalRemainingAmount", "default": ""}}, "type": "object"}, "FetchLedgerPlaceholderResponseModel": {"properties": {"name": {"type": "string", "description": "name", "default": ""}}, "type": "object"}, "CreateShortUrlApiRequestModel": {"required": ["url"], "properties": {"url": {"type": "string", "description": "url"}}, "type": "object"}, "CreateShortUrlApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CreateShortUrlApiResponseData"}}, "type": "object"}, "CreateShortUrlApiResponseData": {"properties": {"shortUrl": {"type": "string"}}, "type": "object"}, "PGTokenRefreshRequest": {"required": ["accountId"], "properties": {"accountId": {"type": "string", "description": "accountId"}}, "type": "object"}, "ThirdPartyOAuthModelResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ThirdPartyOAuthModelResponseData"}}, "type": "object"}, "ThirdPartyOAuthModelResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "PaymentSearchSummaryModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PaymentSearchSummaryModelData"}}, "type": "object"}, "PaymentSearchSummaryModelData": {"required": ["amountPaid", "count", "paymentFee", "settledAmount"], "properties": {"count": {"type": "integer", "description": "count", "default": 0}, "amountPaid": {"type": "number", "description": "amountPaid", "default": 0}, "paymentFee": {"type": "number", "description": "paymentFee", "default": 0}, "settledAmount": {"type": "number", "description": "settledAmount", "default": 0}}, "type": "object"}, "AddTagValueRequestModel": {"required": ["feeComponentId", "name", "value"], "properties": {"feeComponentId": {"type": "string", "description": "feeComponentId"}, "name": {"type": "string", "description": "name"}, "value": {"type": "string", "description": "value"}}, "type": "object"}, "FeeComponentTagResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/FeeComponentTagResponseData"}}, "type": "object"}, "FeeComponentTagResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "DeleteTagValueRequestModel": {"required": ["feeComponentTagId"], "properties": {"feeComponentTagId": {"type": "string", "description": "feeComponentTagId"}, "value": {"type": "string", "description": "value"}, "force": {"type": "boolean", "description": "force", "default": false}}, "type": "object"}, "CreateInvoice": {"properties": {"invoice": {"$ref": "#/definitions/CreateInvoiceModel"}}, "type": "object"}, "CreateInvoiceModel": {"required": ["invoiceAdjustedAmount", "invoiceId", "invoiceNumber", "invoicePaidAmount", "invoiceSubtotal", "invoiceTotal"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceDate": {"type": "object"}, "invoiceDueDate": {"type": "object"}, "promiseToPayDate": {"type": "object"}, "invoiceSubtotal": {"type": "number", "description": "invoiceSubtotal"}, "invoiceTax": {"$ref": "#/definitions/CreateInvoiceModelinvoiceTax"}, "invoiceAdjustedAmount": {"type": "number", "description": "invoiceAdjustedAmount", "default": 0.0}, "invoicePaidAmount": {"type": "number", "description": "invoicePaidAmount", "default": 0.0}, "discount": {"$ref": "#/definitions/CreateInvoiceModeldiscount"}, "discounts": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModeldiscounts"}}, "invoiceTotal": {"type": "number", "description": "invoiceTotal", "default": 0.0}, "invoiceAcceptanceStatus": {"type": "string", "example": "PENDING", "enum": ["PENDING", "ACCEPTED", "REJECTED"]}, "customerId": {"type": "string", "description": "customerId"}, "customerDetails": {"$ref": "#/definitions/CreateInvoiceModelcustomerDetails"}, "customerName": {"type": "string", "description": "customerName"}, "invoiceType": {"type": "string", "description": "invoiceType"}, "supplyStateCode": {"type": "string", "description": "supplyStateCode"}, "placeOfSupply": {"type": "string", "description": "placeOfSupply"}, "invoiceCurrency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "lineItems": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModellineItems"}}, "referenceType": {"type": "string", "description": "referenceType"}, "referenceId": {"type": "string", "description": "referenceId"}, "referenceText": {"type": "string", "description": "referenceText"}, "eInvoiceQrCode": {"type": "string", "description": "eInvoiceQrCode"}, "irnNumber": {"type": "string", "description": "irnNumber"}, "companyId": {"type": "string", "description": "companyId"}, "tags": {"type": "object"}, "metaData": {"type": "object"}, "sort": {"type": "string", "description": "sort"}, "invoiceRoundingConfig": {"$ref": "#/definitions/CreateInvoiceModelinvoiceRoundingConfig"}, "prepaidAmount": {"type": "number", "description": "prepaidAmount"}}, "type": "object"}, "CreateInvoiceModelinvoiceTax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/CreateInvoiceModelinvoiceTaxgstTax"}, "cessTax": {"$ref": "#/definitions/CreateInvoiceModelinvoiceTaxcessTax"}, "serviceTax": {"$ref": "#/definitions/CreateInvoiceModelinvoiceTaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/CreateInvoiceModelinvoiceTaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModelinvoiceTaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "CreateInvoiceModelinvoiceTaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModelinvoiceTaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModelinvoiceTaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModelinvoiceTaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModelinvoiceTaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModeldiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateInvoiceModeldiscounts": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateInvoiceModelcustomerDetails": {"required": ["buyerId", "isManuallyCreated"], "properties": {"buyerId": {"type": "string", "description": "buyerId"}, "taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModelcustomerDetailstaxIdentifiers"}}, "isManuallyCreated": {"type": "boolean", "description": "isManuallyCreated", "default": true}, "companyId": {"type": "string", "description": "companyId"}, "name": {"type": "string", "description": "name"}, "alias": {"type": "string", "description": "alias"}, "registeredAddress": {"$ref": "#/definitions/CreateInvoiceModelcustomerDetailsregisteredAddress"}, "addresses": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModelcustomerDetailsaddresses"}}, "contactsData": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModelcustomerDetailscontactsData"}}, "ownersData": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModelcustomerDetailsownersData"}}, "stateCode": {"type": "string", "description": "stateCode"}, "countryCode": {"type": "string", "description": "countryCode", "default": "IN"}, "country": {"type": "string", "description": "country"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "customerContactPerson": {"type": "string", "description": "customerContactPerson"}, "tags": {"type": "object"}}, "type": "object"}, "CreateInvoiceModelcustomerDetailstaxIdentifiers": {"required": ["value"], "properties": {"value": {"type": "string", "description": "value"}, "type": {"type": "string", "example": "GSTIN", "enum": ["GSTIN", "PAN", "VAT", "OTHER"]}}, "type": "object"}, "CreateInvoiceModelcustomerDetailsregisteredAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateInvoiceModelcustomerDetailsaddresses": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateInvoiceModelcustomerDetailscontactsData": {"required": ["id", "name", "primaryEmail", "primaryPhone", "role"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}}, "type": "object"}, "CreateInvoiceModelcustomerDetailsownersData": {"required": ["id", "name", "primaryEmail", "primaryPhone"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}, "isRegistered": {"type": "boolean", "description": "isRegistered", "default": false}}, "type": "object"}, "CreateInvoiceModellineItems": {"required": ["subTotal", "total"], "properties": {"lineItemDetails": {"$ref": "#/definitions/CreateInvoiceModellineItemslineItemDetails"}, "subTotal": {"type": "number", "description": "subTotal", "default": 0.0}, "total": {"type": "number", "description": "total", "default": 0.0}, "tax": {"$ref": "#/definitions/CreateInvoiceModellineItemstax"}, "discount": {"$ref": "#/definitions/CreateInvoiceModellineItemsdiscount"}, "quantity": {"type": "number", "description": "quantity", "default": 1.0}}, "type": "object"}, "CreateInvoiceModellineItemslineItemDetails": {"required": ["name", "pricePerItem", "taxRate"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "number", "description": "taxRate"}, "pricePerItem": {"type": "number", "description": "pricePerItem", "default": 0.0}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "description": {"type": "string", "description": "description"}, "companyId": {"type": "string", "description": "companyId"}}, "type": "object"}, "CreateInvoiceModellineItemstax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/CreateInvoiceModellineItemstaxgstTax"}, "cessTax": {"$ref": "#/definitions/CreateInvoiceModellineItemstaxcessTax"}, "serviceTax": {"$ref": "#/definitions/CreateInvoiceModellineItemstaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/CreateInvoiceModellineItemstaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/CreateInvoiceModellineItemstaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "CreateInvoiceModellineItemstaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModellineItemstaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModellineItemstaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModellineItemstaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModellineItemstaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "CreateInvoiceModellineItemsdiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateInvoiceModelinvoiceRoundingConfig": {"properties": {"roundingType": {"type": "string", "example": "HALF_UP", "enum": ["HALF_UP", "HALF_DOWN", "HALF_EVEN", "UP", "DOWN"]}, "nearest": {"type": "number", "description": "nearest"}}, "type": "object"}, "CreateCreditNotesExternalAPIQueryModel": {"properties": {"creditNotes": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModel"}}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModel": {"required": ["creditNoteDate", "creditNoteId", "creditNoteNumber", "creditNoteSubtotal", "creditNoteType"], "properties": {"creditNoteId": {"type": "string", "description": "creditNoteId"}, "creditNoteNumber": {"type": "string", "description": "creditNoteNumber"}, "creditNoteSubtotal": {"type": "number", "description": "creditNoteSubtotal"}, "creditNoteType": {"type": "string", "description": "creditNoteType"}, "creditNoteTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcreditNoteTax"}, "customerDetails": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcustomerDetails"}, "creditNoteDate": {"type": "string", "format": "date", "description": "creditNoteDate"}, "discount": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModeldiscount"}, "creditNoteDescription": {"type": "string", "description": "creditNoteDescription"}, "irnNumber": {"type": "string", "description": "irnNumber"}, "creditNoteCurrency": {"type": "string", "description": "creditNoteCurrency"}, "lineItems": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItems"}}, "invoiceReferences": {"type": "array", "items": {"type": "string", "description": "invoiceReferences"}}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcreditNoteTax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcreditNoteTaxgstTax"}, "cessTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcreditNoteTaxcessTax"}, "serviceTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcreditNoteTaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcreditNoteTaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcreditNoteTaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcreditNoteTaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcreditNoteTaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcreditNoteTaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcreditNoteTaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcreditNoteTaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcustomerDetails": {"required": ["buyerId", "isManuallyCreated"], "properties": {"buyerId": {"type": "string", "description": "buyerId"}, "taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcustomerDetailstaxIdentifiers"}}, "isManuallyCreated": {"type": "boolean", "description": "isManuallyCreated", "default": true}, "companyId": {"type": "string", "description": "companyId"}, "name": {"type": "string", "description": "name"}, "alias": {"type": "string", "description": "alias"}, "registeredAddress": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcustomerDetailsregisteredAddress"}, "addresses": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcustomerDetailsaddresses"}}, "contactsData": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcustomerDetailscontactsData"}}, "ownersData": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModelcustomerDetailsownersData"}}, "stateCode": {"type": "string", "description": "stateCode"}, "countryCode": {"type": "string", "description": "countryCode", "default": "IN"}, "country": {"type": "string", "description": "country"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "customerContactPerson": {"type": "string", "description": "customerContactPerson"}, "tags": {"type": "object"}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcustomerDetailstaxIdentifiers": {"required": ["value"], "properties": {"value": {"type": "string", "description": "value"}, "type": {"type": "string", "example": "GSTIN", "enum": ["GSTIN", "PAN", "VAT", "OTHER"]}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcustomerDetailsregisteredAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcustomerDetailsaddresses": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcustomerDetailscontactsData": {"required": ["id", "name", "primaryEmail", "primaryPhone", "role"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModelcustomerDetailsownersData": {"required": ["id", "name", "primaryEmail", "primaryPhone"], "properties": {"id": {"type": "string", "description": "id"}, "name": {"type": "string", "description": "name"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}, "isRegistered": {"type": "boolean", "description": "isRegistered", "default": false}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModeldiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItems": {"required": ["subTotal", "total"], "properties": {"lineItemDetails": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemslineItemDetails"}, "subTotal": {"type": "number", "description": "subTotal", "default": 0.0}, "total": {"type": "number", "description": "total", "default": 0.0}, "tax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemstax"}, "discount": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemsdiscount"}, "quantity": {"type": "number", "description": "quantity", "default": 1.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemslineItemDetails": {"required": ["name", "pricePerItem", "taxRate"], "properties": {"name": {"type": "string", "description": "name"}, "taxRate": {"type": "number", "description": "taxRate"}, "pricePerItem": {"type": "number", "description": "pricePerItem", "default": 0.0}, "hsnOrSacCode": {"type": "string", "description": "hsnOrSacCode"}, "description": {"type": "string", "description": "description"}, "companyId": {"type": "string", "description": "companyId"}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemstax": {"required": ["total"], "properties": {"total": {"type": "number", "description": "total", "default": 0.0}, "gstTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemstaxgstTax"}, "cessTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemstaxcessTax"}, "serviceTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemstaxserviceTax"}, "tdsTax": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemstaxtdsTax"}, "otherTaxes": {"type": "array", "items": {"$ref": "#/definitions/CreateCreditNoteExternalAPIQueryModellineItemstaxotherTaxes"}}, "cgst": {"type": "number", "description": "cgst"}, "sgst": {"type": "number", "description": "sgst"}, "igst": {"type": "number", "description": "igst"}, "tds": {"type": "number", "description": "tds", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemstaxgstTax": {"required": ["cgst", "cgstRate", "igst", "igstRate", "sgst", "sgstRate", "totalGst", "totalGstRate"], "properties": {"totalGst": {"type": "number", "description": "totalGst", "default": 0.0}, "totalGstRate": {"type": "number", "description": "totalGstRate", "default": 0.0}, "cgst": {"type": "number", "description": "cgst", "default": 0.0}, "cgstRate": {"type": "number", "description": "cgstRate", "default": 0.0}, "sgst": {"type": "number", "description": "sgst", "default": 0.0}, "sgstRate": {"type": "number", "description": "sgstRate", "default": 0.0}, "igst": {"type": "number", "description": "igst", "default": 0.0}, "igstRate": {"type": "number", "description": "igstRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemstaxcessTax": {"required": ["cess", "cessRate"], "properties": {"cess": {"type": "number", "description": "cess", "default": 0.0}, "cessRate": {"type": "number", "description": "cessRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemstaxserviceTax": {"required": ["serviceTax", "serviceTaxRate"], "properties": {"serviceTax": {"type": "number", "description": "serviceTax", "default": 0.0}, "serviceTaxRate": {"type": "number", "description": "serviceTaxRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemstaxtdsTax": {"required": ["tds", "tdsRate"], "properties": {"tds": {"type": "number", "description": "tds", "default": 0.0}, "tdsRate": {"type": "number", "description": "tdsRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemstaxotherTaxes": {"required": ["genericTax", "genericTaxRate", "name"], "properties": {"name": {"type": "string", "description": "name"}, "genericTax": {"type": "number", "description": "genericTax", "default": 0.0}, "genericTaxRate": {"type": "number", "description": "genericTaxRate", "default": 0.0}}, "type": "object"}, "CreateCreditNoteExternalAPIQueryModellineItemsdiscount": {"required": ["amount", "isPostTax", "percentage"], "properties": {"amount": {"type": "number", "description": "amount", "default": 0.0}, "percentage": {"type": "number", "description": "percentage", "default": 0.0}, "isPostTax": {"type": "boolean", "description": "isPostTax", "default": false}}, "type": "object"}, "CreateAdjustmentModel": {"required": ["customerId", "placeholderId"], "properties": {"customerId": {"type": "string", "description": "Customer ID"}, "placeholderId": {"type": "string", "description": "Placeholder ID"}, "adjustmentDate": {"type": "string", "format": "date", "description": "Adjustment Date in 'yyyy-mm-dd' format", "example": "YYYY-MM-DD"}, "reference": {"type": "string", "description": "Reference"}, "debitAmount": {"type": "number", "description": "Debit Amount"}, "creditAmount": {"type": "number", "description": "Credit Amount"}, "invoiceId": {"type": "string", "description": "Invoice ID"}, "creditNoteId": {"type": "string", "description": "CreditNote ID"}, "creditId": {"type": "string", "description": "Bank Account Transaction ID"}}, "type": "object"}, "FetchCreditAdjustmentApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/FetchCreditAdjustmentApiResponseData"}}}, "type": "object"}, "FetchCreditAdjustmentApiResponseData": {"required": ["adjustedAmount", "adjustmentId"], "properties": {"adjustmentId": {"type": "string", "description": "adjustmentId"}, "adjustedAmount": {"type": "number", "description": "adjustedAmount"}, "timestamp": {"type": "object"}, "createdBy": {"type": "string", "description": "createdBy"}, "createdByUserName": {"type": "string", "description": "createdByUserName"}, "transactionId": {"type": "string", "description": "transactionId"}, "adjustmentDescription": {"type": "string", "description": "adjustmentDescription"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "placeholderId": {"type": "string", "description": "placeholderId"}, "placeholderName": {"type": "string", "description": "placeholderName"}, "customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}}, "type": "object"}, "FetchInvoiceAdjustmentApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/FetchInvoiceAdjustmentApiResponseData"}}}, "type": "object"}, "FetchInvoiceAdjustmentApiResponseData": {"required": ["adjustedAmount", "adjustmentId"], "properties": {"adjustmentId": {"type": "string", "description": "adjustmentId"}, "adjustedAmount": {"type": "number", "description": "adjustedAmount"}, "timestamp": {"type": "object"}, "adjustmentDescription": {"type": "string", "description": "adjustmentDescription"}, "invoiceId": {"type": "string", "description": "invoiceId"}, "batId": {"type": "string", "description": "batId"}, "placeholderId": {"type": "string", "description": "placeholderId"}, "createdByUserName": {"type": "string", "description": "createdByUserName"}, "placeholderName": {"type": "string", "description": "placeholderName"}, "customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}, "createdBy": {"type": "string", "description": "createdBy"}}, "type": "object"}, "BillingReportResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BillingReportResponseModelData"}}, "type": "object"}, "BillingReportResponseModelData": {"properties": {"billingReport": {"$ref": "#/definitions/BillingReportResponseModelDatabillingReport"}, "feeComponentWiseSummary": {"type": "array", "items": {"$ref": "#/definitions/BillingReportResponseModelDatafeeComponentWiseSummary"}}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/BillingReportResponseModelDataattachments"}}, "createdAt": {"type": "object"}, "updatedAt": {"type": "object"}}, "type": "object"}, "BillingReportResponseModelDatabillingReport": {"properties": {"id": {"type": "object"}, "billId": {"type": "object"}, "usageEstimateIterationId": {"type": "object"}, "total": {"type": "object"}, "isPreusage": {"type": "object"}, "advanceConfig": {"type": "object"}, "subTotal": {"type": "object"}, "tax": {"type": "object"}, "contractId": {"type": "object"}, "contractNumber": {"type": "object"}, "contractTitle": {"type": "object"}, "lineItems": {"type": "object"}, "aggregatedTaxLineItems": {"type": "object"}, "billingDiscounts": {"type": "object"}, "totalDiscount": {"type": "object"}, "billingPeriod": {"type": "object"}, "usageCycleWiseSummary": {"type": "object"}, "approvedBy": {"type": "object"}, "rejectedBy": {"type": "object"}, "status": {"type": "object"}, "comment": {"type": "object"}, "invoiceId": {"type": "object"}, "invoiceNumber": {"type": "object"}, "customerId": {"type": "object"}, "buyerId": {"type": "object"}, "customerName": {"type": "object"}, "companyName": {"type": "object"}, "companyId": {"type": "object"}, "logoUrl": {"type": "object"}, "createdBy": {"type": "object"}}, "type": "object"}, "BillingReportResponseModelDatafeeComponentWiseSummary": {"required": ["actualBilledAmount", "actualUsage", "estimatedBilledAmount", "estimatedUsage", "feeComponentId"], "properties": {"feeComponentId": {"type": "string", "description": "feeComponentId"}, "estimatedUsage": {"type": "number", "description": "estimatedUsage", "default": 0.0}, "estimatedBilledAmount": {"type": "number", "description": "estimatedBilledAmount", "default": 0.0}, "actualUsage": {"type": "number", "description": "actualUsage", "default": 0.0}, "actualBilledAmount": {"type": "number", "description": "actualBilledAmount", "default": 0.0}, "adjustmentAmount": {"type": "number", "description": "adjustmentAmount", "default": 0.0}, "isFlatFee": {"type": "boolean", "description": "isFlatFee", "default": false}}, "type": "object"}, "BillingReportResponseModelDataattachments": {"required": ["createdAt", "createdBy", "fileName", "fileType", "id"], "properties": {"id": {"type": "string", "description": "id"}, "purpose": {"type": "string", "example": "INVOICE_FOR_BUYER", "enum": ["INVOICE_FOR_BUYER", "INVOICE_SUPPORTING", "PURCHASE_ORDER", "SALES_ORDER", "DELIVERY_DOCUMENT", "PAYMENT_PROOF", "DISPUTE", "DISPUTE_RESOLUTION", "ENQUIRY", "ENQUIRY_RESOLUTION", "TAX_DOCUMENT", "COMMERCIAL_AGREEMENT", "COMMERCIAL_AGREEMENT_SUPPORTING", "LEGAL", "GENERAL", "CREDITNOTE_FOR_BUYER", "CREDITNOTE_SUPPORTING", "TICKET", "USAGE_ESTIMATE", "MAIL_ATTACHMENT"]}, "fileType": {"type": "string", "description": "fileType"}, "createdBy": {"type": "string", "description": "createdBy"}, "createdAt": {"type": "string", "description": "createdAt"}, "fileName": {"type": "string", "description": "fileName"}}, "type": "object"}, "BillingReportGenerationRequest": {"required": ["billingDate"], "properties": {"contractIds": {"type": "array", "items": {"type": "string", "description": "contractIds"}}, "billingDate": {"type": "string", "format": "date", "description": "billingDate"}}, "type": "object"}, "BillingPeriod": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BillingPeriodData"}}, "type": "object"}, "BillingPeriodData": {"required": ["endDate", "startDate"], "properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "durationInWords": {"type": "string", "description": "durationInWords"}}, "type": "object"}, "BillingReport": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BillingReportData"}}, "type": "object"}, "BillingReportData": {"properties": {"id": {"type": "object"}, "billId": {"type": "object"}, "usageEstimateIterationId": {"type": "object"}, "total": {"type": "object"}, "isPreusage": {"type": "object"}, "advanceConfig": {"type": "object"}, "subTotal": {"type": "object"}, "tax": {"type": "object"}, "contractId": {"type": "object"}, "contractNumber": {"type": "object"}, "contractTitle": {"type": "object"}, "lineItems": {"type": "object"}, "aggregatedTaxLineItems": {"type": "object"}, "billingDiscounts": {"type": "object"}, "totalDiscount": {"type": "object"}, "billingPeriod": {"type": "object"}, "usageCycleWiseSummary": {"type": "object"}, "approvedBy": {"type": "object"}, "rejectedBy": {"type": "object"}, "status": {"type": "object"}, "comment": {"type": "object"}, "invoiceId": {"type": "object"}, "invoiceNumber": {"type": "object"}, "customerId": {"type": "object"}, "buyerId": {"type": "object"}, "customerName": {"type": "object"}, "companyName": {"type": "object"}, "companyId": {"type": "object"}, "logoUrl": {"type": "object"}, "createdBy": {"type": "object"}}, "type": "object"}, "BulkVerdictUpdate": {"properties": {"verdict": {"type": "string", "example": "DRAFT", "enum": ["DRAFT", "APPROVED", "REJECTED"]}, "billingReportIds": {"type": "array", "items": {"type": "string", "description": "billingReportIds"}}, "billIds": {"type": "array", "items": {"type": "string", "description": "billIds"}}, "comment": {"type": "string", "description": "comment"}}, "type": "object"}, "BulkVerdictUpdateResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/BulkVerdictUpdateResponseModelData"}}, "type": "object"}, "BulkVerdictUpdateResponseModelData": {"required": ["failedCount", "successCount"], "properties": {"failedCount": {"type": "integer", "description": "failedCount", "default": 0}, "successCount": {"type": "integer", "description": "successCount", "default": 0}, "errorMessages": {"type": "array", "items": {"type": "string", "description": "errorMessages"}}}, "type": "object"}, "HtmlPreviewResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/HtmlPreviewResponseModelData"}}, "type": "object"}, "HtmlPreviewResponseModelData": {"required": ["htmlContent"], "properties": {"htmlContent": {"type": "string", "description": "htmlContent"}}, "type": "object"}, "BillingReportSendEmailRequestModel": {"required": ["fromEmail", "subject"], "properties": {"billingReportIds": {"type": "array", "items": {"type": "string", "description": "billingReportIds"}}, "subject": {"type": "string", "description": "subject"}, "fromEmail": {"type": "string", "description": "fromEmail"}, "emailRecipient": {"$ref": "#/definitions/BillingReportSendEmailRequestModelemailRecipient"}}, "type": "object"}, "BillingReportSendEmailRequestModelemailRecipient": {"properties": {"to": {"type": "array", "items": {"type": "string", "description": "to"}}, "cc": {"type": "array", "items": {"type": "string", "description": "cc"}}, "bcc": {"type": "array", "items": {"type": "string", "description": "bcc"}}, "replyTo": {"type": "array", "items": {"type": "string", "description": "replyTo"}}}, "type": "object"}, "InvoiceResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/InvoiceResponseModelData"}}, "type": "object"}, "InvoiceResponseModelData": {"properties": {"invoice": {"$ref": "#/definitions/InvoiceResponseModelDatainvoice"}, "invoiceExtra": {"$ref": "#/definitions/InvoiceResponseModelDatainvoiceExtra"}}, "type": "object"}, "InvoiceResponseModelDatainvoice": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "invoiceId": {"type": "object"}, "invoiceNumber": {"type": "object"}, "invoiceStatus": {"type": "object"}, "paymentStatus": {"type": "object"}, "invoiceType": {"type": "object"}, "placeOfSupply": {"type": "object"}, "invoiceDate": {"type": "object"}, "invoiceDueDate": {"type": "object"}, "promiseToPayDate": {"type": "object"}, "invoiceCurrency": {"type": "object"}, "invoiceSubtotal": {"type": "object"}, "invoiceTotal": {"type": "object"}, "invoicePaidAmount": {"type": "object"}, "invoiceAdjustedAmount": {"type": "object"}, "invoiceAdhocAdjustedAmount": {"type": "object"}, "invoiceOutstandingAmount": {"type": "object"}, "writtenOffAmount": {"type": "object"}, "roundOffAmount": {"type": "object"}, "creditNoteAdjustedAmount": {"type": "object"}, "invoiceTax": {"type": "object"}, "discount": {"type": "object"}, "discounts": {"type": "object"}, "customerId": {"type": "object"}, "buyerId": {"type": "object"}, "customerName": {"type": "object"}, "lineItems": {"type": "object"}, "invoiceRoundingConfig": {"type": "object"}, "irnNumber": {"type": "object"}, "eInvoiceQrCode": {"type": "object"}, "referenceType": {"type": "object"}, "referenceId": {"type": "object"}, "referenceText": {"type": "object"}, "tags": {"type": "object"}, "metaData": {"type": "object"}, "invoiceAcceptanceStatus": {"type": "object"}}, "type": "object"}, "InvoiceResponseModelDatainvoiceExtra": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "invoiceId": {"type": "object"}, "invoiceBillingAddress": {"type": "object"}, "invoiceShippingAddress": {"type": "object"}, "invoiceSalesOrderNumber": {"type": "object"}, "invoiceGeneralTerms": {"type": "object"}, "invoicePaymentTerms": {"type": "object"}, "invoiceSalesOrderId": {"type": "object"}, "invoiceExternalUrl": {"type": "object"}, "invoiceOriginSource": {"type": "object"}, "invoiceSellerDetails": {"type": "object"}, "warehouseDetails": {"type": "object"}, "invoiceSalesDate": {"type": "object"}, "billingPeriod": {"type": "object"}, "metaData": {"type": "object"}}, "type": "object"}, "BillingReportUsageCycleFeeComponentSummaryModelListResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/BillingReportUsageCycleFeeComponentSummaryModelData"}}}, "type": "object"}, "BillingReportUsageCycleFeeComponentSummaryModelData": {"required": ["actualBilledAmount", "actualUsage", "estimatedBilledAmount", "estimatedUsage", "feeComponentId"], "properties": {"feeComponentId": {"type": "string", "description": "feeComponentId"}, "estimatedUsage": {"type": "number", "description": "estimatedUsage", "default": 0.0}, "estimatedBilledAmount": {"type": "number", "description": "estimatedBilledAmount", "default": 0.0}, "actualUsage": {"type": "number", "description": "actualUsage", "default": 0.0}, "actualBilledAmount": {"type": "number", "description": "actualBilledAmount", "default": 0.0}, "adjustmentAmount": {"type": "number", "description": "adjustmentAmount", "default": 0.0}, "isFlatFee": {"type": "boolean", "description": "isFlatFee", "default": false}, "unit": {"type": "string", "description": "unit"}, "currency": {"type": "string", "example": "afn", "enum": ["afn", "eur", "all", "dzd", "usd", "aoa", "xcd", "ars", "amd", "awg", "aud", "azn", "bsd", "bhd", "bdt", "bbd", "byn", "bzd", "xof", "bmd", "inr", "btn", "bob", "bov", "bam", "bwp", "nok", "brl", "bnd", "bgn", "bif", "cve", "khr", "xaf", "cad", "kyd", "clp", "clf", "cny", "cop", "cou", "kmf", "cdf", "nzd", "crc", "hrk", "cup", "cuc", "ang", "czk", "dkk", "djf", "dop", "egp", "svc", "ern", "szl", "etb", "fkp", "fjd", "xpf", "gmd", "gel", "ghs", "gip", "gtq", "gbp", "gnf", "gyd", "htg", "hnl", "hkd", "huf", "isk", "idr", "xdr", "irr", "iqd", "ils", "jmd", "jpy", "jod", "kzt", "kes", "kpw", "krw", "kwd", "kgs", "lak", "lbp", "lsl", "zar", "lrd", "lyd", "chf", "mop", "mkd", "mga", "mwk", "myr", "mvr", "mru", "mur", "xua", "mxn", "mxv", "mdl", "mnt", "mad", "mzn", "mmk", "nad", "npr", "nio", "ngn", "omr", "pkr", "pab", "pgk", "pyg", "pen", "php", "pln", "qar", "ron", "rub", "rwf", "shp", "wst", "stn", "sar", "rsd", "scr", "sll", "sle", "sgd", "xsu", "sbd", "sos", "ssp", "lkr", "sdg", "srd", "sek", "che", "chw", "syp", "twd", "tjs", "tzs", "thb", "top", "ttd", "tnd", "try", "tmt", "ugx", "uah", "aed", "usn", "uyu", "uyi", "uyw", "uzs", "vuv", "ves", "ved", "vnd", "yer", "zmw", "zwl", "xba", "xbb", "xbc", "xbd", "xts", "xxx", "xau", "xpd", "xpt", "xag"]}, "usageCycle": {"$ref": "#/definitions/BillingReportUsageCycleFeeComponentSummaryModelDatausageCycle"}}, "type": "object"}, "BillingReportUsageCycleFeeComponentSummaryModelDatausageCycle": {"required": ["endDate", "startDate"], "properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "durationInWords": {"type": "string", "description": "durationInWords"}}, "type": "object"}, "CreateUsageDriverQueryModel": {"required": ["description", "name", "unit"], "properties": {"name": {"type": "string", "description": "name"}, "description": {"type": "string", "description": "description"}, "unit": {"type": "string", "description": "unit"}, "productId": {"type": "string", "description": "productId"}}, "type": "object"}, "UsageDriverResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/UsageDriverResponseData"}}, "type": "object"}, "UsageDriverResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateUsageDriverQueryModel_Request": {"properties": {"updates": {"$ref": "#/definitions/UpdateUsageDriverQueryModel_FieldsUpdateModel"}}, "type": "object"}, "UpdateUsageDriverQueryModel_FieldsUpdateModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "", "$ref": "#/definitions/UpdateUsageDriverQueryModel"}}, "type": "object"}, "UpdateUsageDriverQueryModel": {"properties": {"name": {"type": "string", "description": "name"}, "description": {"type": "string", "description": "description"}, "productId": {"type": "string", "description": "productId"}, "unit": {"type": "string", "description": "unit"}}, "type": "object"}, "PaginatedResponse": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/PaginatedResponseData"}}, "type": "object"}, "PaginatedResponseData": {"required": ["hasNext", "hasPrev", "pageNumber", "pageSize", "totalDocs", "totalPages"], "properties": {"totalDocs": {"type": "integer", "description": "totalDocs"}, "docs": {"type": "array", "items": {"type": "object"}}, "hasNext": {"type": "boolean", "description": "hasNext"}, "hasPrev": {"type": "boolean", "description": "hasPrev"}, "pageNumber": {"type": "integer", "description": "pageNumber"}, "pageSize": {"type": "integer", "description": "pageSize"}, "totalPages": {"type": "integer", "description": "totalPages"}, "prevPageNumber": {"type": "integer", "description": "prevPageNumber"}, "nextPageNumber": {"type": "integer", "description": "nextPageNumber"}}, "type": "object"}, "CreateProductQueryModel": {"required": ["name"], "properties": {"name": {"type": "string", "description": "name"}}, "type": "object"}, "ProductResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ProductResponseData"}}, "type": "object"}, "ProductResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "Product": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/ProductData"}}, "type": "object"}, "ProductData": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "name": {"type": "object"}, "status": {"type": "object"}}, "type": "object"}, "CreateCustomer": {"properties": {"customer": {"$ref": "#/definitions/CreateCustomerModel"}}, "type": "object"}, "CreateCustomerModel": {"required": ["buyerId", "name"], "properties": {"buyerId": {"type": "string", "description": "buyerId"}, "taxIdentifiers": {"type": "array", "items": {"$ref": "#/definitions/CreateCustomerModeltaxIdentifiers"}}, "name": {"type": "string", "description": "name"}, "alias": {"type": "string", "description": "alias"}, "registeredAddress": {"$ref": "#/definitions/CreateCustomerModelregisteredAddress"}, "contactsData": {"type": "array", "items": {"$ref": "#/definitions/CreateCustomerModelcontactsData"}}, "internalStakeholdersData": {"type": "array", "items": {"$ref": "#/definitions/CreateCustomerModelinternalStakeholdersData"}}, "stateCode": {"type": "string", "description": "stateCode"}, "countryCode": {"type": "string", "description": "countryCode", "default": "IN"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "tags": {"type": "object"}}, "type": "object"}, "CreateCustomerModeltaxIdentifiers": {"required": ["value"], "properties": {"value": {"type": "string", "description": "value"}, "type": {"type": "string", "example": "GSTIN", "enum": ["GSTIN", "PAN", "VAT", "OTHER"]}}, "type": "object"}, "CreateCustomerModelregisteredAddress": {"properties": {"line1": {"type": "string", "description": "line1"}, "line2": {"type": "string", "description": "line2"}, "state": {"type": "string", "description": "state"}, "city": {"type": "string", "description": "city"}, "country": {"type": "string", "description": "country"}, "zipCode": {"type": "string", "description": "zipCode"}}, "type": "object"}, "CreateCustomerModelcontactsData": {"required": ["name", "role"], "properties": {"name": {"type": "string", "description": "name"}, "role": {"type": "string", "description": "role"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}}, "type": "object"}, "CreateCustomerModelinternalStakeholdersData": {"required": ["name", "primaryEmail", "role"], "properties": {"name": {"type": "string", "description": "name"}, "primaryEmail": {"type": "string", "description": "primaryEmail"}, "role": {"type": "string", "description": "role"}, "primaryPhone": {"type": "string", "description": "primaryPhone"}}, "type": "object"}, "CustomerVerdictUpdateRequestModel": {"properties": {"verdict": {"type": "string", "example": "DRAFT", "enum": ["DRAFT", "APPROVED", "REJECTED"]}, "comment": {"type": "string", "description": "comment"}}, "type": "object"}, "BillingUsageEstimateFetchResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/BillingUsageEstimateFetchResponseData"}}}, "type": "object"}, "BillingUsageEstimateFetchResponseData": {"required": ["quantity", "usageDriverId", "usageDriverName", "usageDriverUnit", "usageMultiplier"], "properties": {"usageDriverId": {"type": "string", "description": "usageDriverId"}, "usageDriverName": {"type": "string", "description": "usageDriverName"}, "usageDriverUnit": {"type": "string", "description": "usageDriverUnit"}, "quantity": {"type": "number", "description": "quantity"}, "usageMultiplier": {"type": "integer", "description": "usageMultiplier"}, "tags": {"type": "object"}}, "type": "object"}, "BuyerUsageExportRequest": {"required": ["contractId"], "properties": {"contractId": {"type": "string", "description": "contractId"}, "billingPeriod": {"$ref": "#/definitions/BuyerUsageExportRequestbillingPeriod"}}, "type": "object"}, "BuyerUsageExportRequestbillingPeriod": {"required": ["endDate", "startDate"], "properties": {"startDate": {"type": "string", "format": "date", "description": "startDate"}, "endDate": {"type": "string", "format": "date", "description": "endDate"}, "durationInWords": {"type": "string", "description": "durationInWords"}}, "type": "object"}, "CreateTicketApiRequestModel": {"required": ["customerId", "customerName", "reason", "title"], "properties": {"title": {"type": "string", "description": "title"}, "ticketStatus": {"type": "string", "example": "OPEN", "enum": ["OPEN", "IN_PROGRESS", "WAITING_ON_CUSTOMER", "BLOCKED", "CLOSED"]}, "ticketType": {"type": "string", "example": "INVOICE_DISPUTE", "enum": ["INVOICE_DISPUTE"]}, "reason": {"type": "string", "description": "reason"}, "customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}, "invoices": {"type": "array", "items": {"$ref": "#/definitions/CreateTicketApiRequestModelinvoices"}}, "description": {"type": "string", "description": "description"}, "assignees": {"type": "array", "items": {"$ref": "#/definitions/CreateTicketApiRequestModelassignees"}}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/CreateTicketApiRequestModelattachments"}}}, "type": "object"}, "CreateTicketApiRequestModelinvoices": {"required": ["invoiceDisputedAmount", "invoiceId", "invoiceNumber", "invoiceOutstandingAmount"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceOutstandingAmount": {"type": "number", "description": "invoiceOutstandingAmount"}, "invoiceDisputedAmount": {"type": "number", "description": "invoiceDisputedAmount"}}, "type": "object"}, "CreateTicketApiRequestModelassignees": {"required": ["userId", "userName"], "properties": {"userId": {"type": "string", "description": "userId"}, "userName": {"type": "string", "description": "userName"}}, "type": "object"}, "CreateTicketApiRequestModelattachments": {"required": ["fileName", "fileType", "id"], "properties": {"id": {"type": "string", "description": "id"}, "fileName": {"type": "string", "description": "fileName"}, "fileType": {"type": "string", "description": "fileType"}}, "type": "object"}, "Ticket": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/TicketData"}}, "type": "object"}, "TicketData": {"properties": {"id": {"type": "object"}, "counter": {"type": "object"}, "ticketId": {"type": "object"}, "companyId": {"type": "object"}, "status": {"type": "object"}, "ticketStatus": {"type": "object"}, "ticketType": {"type": "object"}, "dueDate": {"type": "object"}, "customerId": {"type": "object"}, "title": {"type": "object"}, "customerName": {"type": "object"}, "attachments": {"type": "object"}, "description": {"type": "object"}, "reason": {"type": "object"}, "invoices": {"type": "object"}, "assignees": {"type": "object"}, "watchers": {"type": "object"}, "createdByUserId": {"type": "object"}, "createdByContactId": {"type": "object"}, "createdByDisplayName": {"type": "object"}}, "type": "object"}, "GetTicketDetailsApiResponseMmodel": {"properties": {"error": {"type": "string", "description": "error"}, "message": {"type": "string", "description": "message"}, "data": {"$ref": "#/definitions/GetTicketDetailsApiResponseMmodeldata"}}, "type": "object"}, "GetTicketDetailsApiResponseMmodeldata": {"properties": {"id": {"type": "object"}, "counter": {"type": "object"}, "ticketId": {"type": "object"}, "companyId": {"type": "object"}, "status": {"type": "object"}, "ticketStatus": {"type": "object"}, "ticketType": {"type": "object"}, "dueDate": {"type": "object"}, "customerId": {"type": "object"}, "title": {"type": "object"}, "customerName": {"type": "object"}, "attachments": {"type": "object"}, "description": {"type": "object"}, "reason": {"type": "object"}, "invoices": {"type": "object"}, "assignees": {"type": "object"}, "watchers": {"type": "object"}, "createdByUserId": {"type": "object"}, "createdByContactId": {"type": "object"}, "createdByDisplayName": {"type": "object"}}, "type": "object"}, "DeleteTicketApiResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/DeleteTicketApiResponseData"}}, "type": "object"}, "DeleteTicketApiResponseData": {"properties": {"id": {"type": "string"}}, "type": "object"}, "UpdateTicket": {"required": ["ticketId"], "properties": {"ticketId": {"type": "string", "description": "ID of the ticket"}, "updates": {"$ref": "#/definitions/UpdateTicketFieldsAndValuesModel"}}, "type": "object"}, "UpdateTicketFieldsAndValuesModel": {"properties": {"fields": {"type": "array", "items": {"type": "string", "description": "Fields to update"}}, "values": {"description": "updates to tickets", "allOf": [{"$ref": "#/definitions/UpdateTicketQueryModel"}]}}, "type": "object"}, "UpdateTicketQueryModel": {"properties": {"title": {"type": "string", "description": "title"}, "ticketStatus": {"type": "string", "example": "OPEN", "enum": ["OPEN", "IN_PROGRESS", "WAITING_ON_CUSTOMER", "BLOCKED", "CLOSED"]}, "ticketType": {"type": "string", "example": "INVOICE_DISPUTE", "enum": ["INVOICE_DISPUTE"]}, "reason": {"type": "string", "description": "reason"}, "customerId": {"type": "string", "description": "customerId"}, "customerName": {"type": "string", "description": "customerName"}, "invoices": {"type": "array", "items": {"$ref": "#/definitions/UpdateTicketQueryModelinvoices"}}, "dueDate": {"type": "string", "format": "date", "description": "dueDate"}, "description": {"type": "string", "description": "description"}, "assignees": {"type": "array", "items": {"$ref": "#/definitions/UpdateTicketQueryModelassignees"}}, "watchers": {"type": "array", "items": {"$ref": "#/definitions/UpdateTicketQueryModelwatchers"}}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/UpdateTicketQueryModelattachments"}}}, "type": "object"}, "UpdateTicketQueryModelinvoices": {"required": ["invoiceDisputedAmount", "invoiceId", "invoiceNumber", "invoiceOutstandingAmount"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}, "invoiceOutstandingAmount": {"type": "number", "description": "invoiceOutstandingAmount"}, "invoiceDisputedAmount": {"type": "number", "description": "invoiceDisputedAmount"}}, "type": "object"}, "UpdateTicketQueryModelassignees": {"required": ["userId", "userName"], "properties": {"userId": {"type": "string", "description": "userId"}, "userName": {"type": "string", "description": "userName"}}, "type": "object"}, "UpdateTicketQueryModelwatchers": {"required": ["userId", "userName"], "properties": {"userId": {"type": "string", "description": "userId"}, "userName": {"type": "string", "description": "userName"}}, "type": "object"}, "UpdateTicketQueryModelattachments": {"required": ["fileName", "fileType", "id"], "properties": {"id": {"type": "string", "description": "id"}, "fileName": {"type": "string", "description": "fileName"}, "fileType": {"type": "string", "description": "fileType"}}, "type": "object"}, "TicketStatusResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/TicketStatusResponseDataModel"}}, "type": "object"}, "TicketStatusResponseDataModel": {"properties": {"ticketStatusList": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "TicketTypesResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/TicketTypesResponseDataModel"}}, "type": "object"}, "TicketTypesResponseDataModel": {"properties": {"ticketTypesList": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "TicketReasonsResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/TicketReasonsResponseDataModel"}}, "type": "object"}, "TicketReasonsResponseDataModel": {"properties": {"ticketReasonsList": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "BulkInvoiceAcceptanceStatusAcceptRequest": {"properties": {"invoiceIds": {"type": "array", "items": {"type": "string", "description": "invoiceIds"}}, "comment": {"type": "string", "description": "comment"}}, "type": "object"}, "Comment": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/CommentData"}}, "type": "object"}, "CommentData": {"properties": {"id": {"type": "object"}, "againstReferenceId": {"type": "object"}, "againstReferenceType": {"type": "object"}, "companyId": {"type": "object"}, "commentText": {"type": "object"}, "createdBy": {"type": "object"}, "createdByContact": {"type": "object"}, "createdByUserName": {"type": "object"}, "attachment": {"type": "object"}, "status": {"type": "object"}, "commentType": {"type": "object"}}, "type": "object"}, "AnyJSON": {"properties": {"*": {"type": "object", "additionalProperties": {"type": "object"}}}, "type": "object"}, "WebhookApiEventModel": {"properties": {"object": {"type": "string"}, "entry": {"type": "array", "items": {"$ref": "#/definitions/EventEntryModel"}}}, "type": "object"}, "EventEntryModel": {"properties": {"id": {"type": "string"}, "changes": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesModel"}}}, "type": "object"}, "EventEntryChangesModel": {"properties": {"value": {"$ref": "#/definitions/EventEntryChangesValueModel"}, "field": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueModel": {"properties": {"contacts": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesValueContactsModel"}}, "errors": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesValueErrorsModel"}}, "messaging_product": {"type": "string"}, "messages": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesValueMessagesModel"}}, "metadata": {"$ref": "#/definitions/EventEntryChangesValueMetadataModel"}, "statuses": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesValueStatusesModel"}}}, "type": "object"}, "EventEntryChangesValueContactsModel": {"properties": {"wa_id": {"type": "string"}, "user_id": {"type": "string"}, "profile": {"$ref": "#/definitions/EventEntryChangesValueContactsProfileModel"}}, "type": "object"}, "EventEntryChangesValueContactsProfileModel": {"properties": {"name": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueErrorsModel": {"properties": {"code": {"type": "integer"}, "title": {"type": "string"}, "message": {"type": "string"}, "error_data": {"$ref": "#/definitions/EventEntryChangesValueErrorsDataModel"}}, "type": "object"}, "EventEntryChangesValueErrorsDataModel": {"properties": {"details": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueMessagesModel": {"properties": {"context": {"$ref": "#/definitions/EventEntryChangesValueMessagesContextModel"}, "errors": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesValueMessagesErrorsModel"}}, "from": {"type": "string"}, "id": {"type": "string"}, "text": {"$ref": "#/definitions/EventEntryChangesValueMessagesTextModel"}, "timestamp": {"type": "string"}, "type": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueMessagesContextModel": {"properties": {"forwarded": {"type": "boolean"}, "frequently_forwarded": {"type": "boolean"}, "from": {"type": "string"}, "id": {"type": "string"}, "referred_product": {"$ref": "#/definitions/EventEntryChangesValueMessagesContextRefProductModel"}}, "type": "object"}, "EventEntryChangesValueMessagesContextRefProductModel": {"properties": {"catalog_id": {"type": "string"}, "product_retailer_id": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueMessagesErrorsModel": {"properties": {"code": {"type": "integer"}, "title": {"type": "string"}, "message": {"type": "string"}, "error_data": {"$ref": "#/definitions/EventEntryChangesValueMessagesErrorsDataModel"}}, "type": "object"}, "EventEntryChangesValueMessagesErrorsDataModel": {"properties": {"details": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueMessagesTextModel": {"properties": {"body": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueMetadataModel": {"properties": {"display_phone_number": {"type": "string"}, "phone_number_id": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueStatusesModel": {"properties": {"conversation": {"$ref": "#/definitions/EventEntryChangesValueStatusesConversationModel"}, "errors": {"type": "array", "items": {"$ref": "#/definitions/EventEntryChangesValueStatusesErrorsModel"}}, "id": {"type": "string"}, "pricing": {"$ref": "#/definitions/EventEntryChangesValueStatusesPricingModel"}, "recipient_id": {"type": "string"}, "status": {"type": "string"}, "timestamp": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueStatusesConversationModel": {"properties": {"id": {"type": "string"}, "origin": {"$ref": "#/definitions/EventEntryChangesValueStatusesConversationOriginModel"}, "expiration_timestamp": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueStatusesConversationOriginModel": {"properties": {"type": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueStatusesErrorsModel": {"properties": {"code": {"type": "integer"}, "title": {"type": "string"}, "message": {"type": "string"}, "error_data": {"$ref": "#/definitions/EventEntryChangesValueStatusesErrorsDataModel"}}, "type": "object"}, "EventEntryChangesValueStatusesErrorsDataModel": {"properties": {"details": {"type": "string"}}, "type": "object"}, "EventEntryChangesValueStatusesPricingModel": {"properties": {"category": {"type": "string"}, "pricing_model": {"type": "string"}}, "type": "object"}, "FetchWabTemplatesAPIResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/WabTemplateResponse"}}, "type": "object"}, "WabTemplateResponse": {"properties": {"data": {"type": "array", "items": {"$ref": "#/definitions/WabTemplateResponsedata"}}, "paging": {"$ref": "#/definitions/WabTemplateResponsepaging"}}, "type": "object"}, "WabTemplateResponsedata": {"required": ["category", "name"], "properties": {"name": {"type": "string", "description": "name"}, "category": {"type": "string", "description": "category"}, "components": {"type": "array", "items": {"$ref": "#/definitions/WabTemplateResponsedatacomponents"}}, "parameterFormat": {"type": "string", "description": "parameterFormat"}, "previousCategory": {"type": "string", "description": "previousCategory"}, "subCategory": {"type": "string", "description": "subCategory"}, "language": {"type": "string", "description": "language"}, "status": {"type": "string", "description": "status"}, "id": {"type": "string", "description": "id"}, "libraryTemplateName": {"type": "string", "description": "libraryTemplateName"}}, "type": "object"}, "WabTemplateResponsedatacomponents": {"required": ["type"], "properties": {"type": {"type": "string", "description": "type"}, "text": {"type": "string", "description": "text"}, "format": {"type": "string", "description": "format"}, "example": {"$ref": "#/definitions/WabTemplateResponsedatacomponentsexample"}, "buttons": {"type": "array", "items": {"type": "object"}}, "url": {"type": "string", "description": "url"}, "phoneNumber": {"type": "string", "description": "phoneNumber"}}, "type": "object"}, "WabTemplateResponsedatacomponentsexample": {"properties": {"bodyTextNamedParams": {"type": "array", "items": {"$ref": "#/definitions/WabTemplateResponsedatacomponentsexamplebodyTextNamedParams"}}, "bodyText": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "WabTemplateResponsedatacomponentsexamplebodyTextNamedParams": {"required": ["example", "paramName"], "properties": {"paramName": {"type": "string", "description": "paramName"}, "example": {"type": "string", "description": "example"}}, "type": "object"}, "WabTemplateResponsepaging": {"properties": {"cursors": {"type": "object"}}, "type": "object"}, "GetWabCompaniesAPIResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"$ref": "#/definitions/WhatsappAccountQueryModel"}}}, "type": "object"}, "WhatsappAccountQueryModel": {"required": ["companyId", "id", "name", "wabApiToken", "wabBusinessAccountId", "wabPhoneId"], "properties": {"id": {"type": "string", "description": "id"}, "companyId": {"type": "string", "description": "companyId"}, "name": {"type": "string", "description": "name"}, "wabPhoneId": {"type": "string", "description": "wabPhoneId"}, "wabApiToken": {"type": "string", "description": "wabApiToken"}, "wabBusinessAccountId": {"type": "string", "description": "wabBusinessAccountId"}, "systemUser": {"type": "string", "description": "systemUser"}}, "type": "object"}, "GetWabTemplatePlaceholdersAPIResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "GetWabTemplatePreviewAPIResponseModel": {"properties": {"error": {"type": "string"}, "message": {"type": "string"}, "data": {"$ref": "#/definitions/TemplateComponentParam"}}, "type": "object"}, "TemplateComponentParam": {"required": ["category", "name"], "properties": {"name": {"type": "string", "description": "name"}, "category": {"type": "string", "description": "category"}, "components": {"type": "array", "items": {"$ref": "#/definitions/TemplateComponentParamcomponents"}}, "parameterFormat": {"type": "string", "description": "parameterFormat"}, "previousCategory": {"type": "string", "description": "previousCategory"}, "subCategory": {"type": "string", "description": "subCategory"}, "language": {"type": "string", "description": "language"}, "status": {"type": "string", "description": "status"}, "id": {"type": "string", "description": "id"}, "libraryTemplateName": {"type": "string", "description": "libraryTemplateName"}}, "type": "object"}, "TemplateComponentParamcomponents": {"required": ["type"], "properties": {"type": {"type": "string", "description": "type"}, "text": {"type": "string", "description": "text"}, "format": {"type": "string", "description": "format"}, "example": {"$ref": "#/definitions/TemplateComponentParamcomponentsexample"}, "buttons": {"type": "array", "items": {"type": "object"}}, "url": {"type": "string", "description": "url"}, "phoneNumber": {"type": "string", "description": "phoneNumber"}}, "type": "object"}, "TemplateComponentParamcomponentsexample": {"properties": {"bodyTextNamedParams": {"type": "array", "items": {"$ref": "#/definitions/TemplateComponentParamcomponentsexamplebodyTextNamedParams"}}, "bodyText": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "TemplateComponentParamcomponentsexamplebodyTextNamedParams": {"required": ["example", "paramName"], "properties": {"paramName": {"type": "string", "description": "paramName"}, "example": {"type": "string", "description": "example"}}, "type": "object"}, "CreateCallLogApiRequestModel": {"required": ["customerId"], "properties": {"callType": {"type": "string", "example": "INCOMING", "enum": ["INCOMING", "OUTGOING"]}, "callStatus": {"type": "string", "example": "CONNECTED", "enum": ["CONNECTED", "NOT_CONNECTED"]}, "customerId": {"type": "string", "description": "customerId"}, "invoices": {"type": "array", "items": {"$ref": "#/definitions/CreateCallLogApiRequestModelinvoices"}}, "description": {"type": "string", "description": "description"}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/CreateCallLogApiRequestModelattachments"}}, "promiseToPayDate": {"type": "string", "format": "date", "description": "promiseToPayDate"}, "promiseToPayComment": {"type": "string", "description": "promiseToPayComment"}}, "type": "object"}, "CreateCallLogApiRequestModelinvoices": {"required": ["invoiceId", "invoiceNumber"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}}, "type": "object"}, "CreateCallLogApiRequestModelattachments": {"required": ["fileName", "fileType", "id"], "properties": {"id": {"type": "string", "description": "id"}, "fileName": {"type": "string", "description": "fileName"}, "fileType": {"type": "string", "description": "fileType"}}, "type": "object"}, "GetAllCallLogsApiResponseMmodel": {"properties": {"error": {"type": "string", "description": "error"}, "message": {"type": "string", "description": "message"}, "data": {"$ref": "#/definitions/GetAllCallLogsApiResponseMmodeldata"}}, "type": "object"}, "GetAllCallLogsApiResponseMmodeldata": {"properties": {"callLogs": {"type": "array", "items": {"$ref": "#/definitions/GetAllCallLogsApiResponseMmodeldatacallLogs"}}}, "type": "object"}, "GetAllCallLogsApiResponseMmodeldatacallLogs": {"properties": {"id": {"type": "string", "description": "id"}, "companyId": {"type": "string", "description": "companyId"}, "callType": {"type": "string", "example": "INCOMING", "enum": ["INCOMING", "OUTGOING"]}, "callStatus": {"type": "string", "example": "CONNECTED", "enum": ["CONNECTED", "NOT_CONNECTED"]}, "customerId": {"type": "string", "description": "customerId"}, "invoices": {"type": "array", "items": {"$ref": "#/definitions/GetAllCallLogsApiResponseMmodeldatacallLogsinvoices"}}, "description": {"type": "string", "description": "description"}, "descriptionText": {"type": "string", "description": "descriptionText"}, "createdBy": {"type": "string", "description": "createdBy"}, "createdByUserName": {"type": "string", "description": "createdByUserName"}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/GetAllCallLogsApiResponseMmodeldatacallLogsattachments"}}, "metaData": {"type": "object"}, "createdAt": {"type": "object"}, "updatedAt": {"type": "object"}}, "type": "object"}, "GetAllCallLogsApiResponseMmodeldatacallLogsinvoices": {"required": ["invoiceId", "invoiceNumber"], "properties": {"invoiceId": {"type": "string", "description": "invoiceId"}, "invoiceNumber": {"type": "string", "description": "invoiceNumber"}}, "type": "object"}, "GetAllCallLogsApiResponseMmodeldatacallLogsattachments": {"required": ["fileName", "fileType", "id"], "properties": {"id": {"type": "string", "description": "id"}, "fileName": {"type": "string", "description": "fileName"}, "fileType": {"type": "string", "description": "fileType"}}, "type": "object"}, "GetCallLogDetailsApiResponseMmodel": {"properties": {"error": {"type": "string", "description": "error"}, "message": {"type": "string", "description": "message"}, "data": {"$ref": "#/definitions/GetCallLogDetailsApiResponseMmodeldata"}}, "type": "object"}, "GetCallLogDetailsApiResponseMmodeldata": {"properties": {"id": {"type": "object"}, "companyId": {"type": "object"}, "callType": {"type": "object"}, "callStatus": {"type": "object"}, "customerId": {"type": "object"}, "invoices": {"type": "object"}, "description": {"type": "object"}, "descriptionText": {"type": "object"}, "createdBy": {"type": "object"}, "createdByUserName": {"type": "object"}, "attachments": {"type": "object"}, "metaData": {"type": "object"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}